name: Main
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - run: npm ci
      - run: npm run build

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - id: "auth-gcp"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ vars.GCP_ACTIONS_MARKETING_IDENTITY_PROVIDER }}
          service_account: ${{ vars.GCP_ACTIONS_MARKETING_SERVICE_ACCOUNT }}

      - name: Login to Google Registry
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth-gcp.outputs.access_token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            us-docker.pkg.dev/zuplo-marketing/docker-registry/rate-my-open-api
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch
            type=sha,format=long

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/api/Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.GH_CUSTOM_TOKEN }}

        # gets the version string from the ref (i.e. removes the 'refs/tags/v' part)
      - run: |
          echo "VERSION=$(echo "${{ github.ref }}" | sed -e "s/refs\/tags\/v/${replace}/g" )" >> $GITHUB_ENV

      - name: Setup Git
        run: |
          git config user.name "Terraform GitHub Action"
          git config user.email "<terraform-github@zuplo.com>"

      - name: API Image Version
        uses: zuplo/set-tfvar-action@v1
        with:
          path: apps/api/terraform/release.auto.tfvars
          name: image_version
          value: ${{ env.VERSION }}

      - name: git add changed files
        run: |
          git add apps/api/terraform/release.auto.tfvars

      - name: Commit to main
        run: |
          git commit -m "[Image Version] ${{ env.VERSION }}"
          git push origin main

      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

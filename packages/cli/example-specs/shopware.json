{
  "components": {
    "responses": {
      "204": {
        "description": "No Content"
      },
      "400": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones.",
                  "status": "400",
                  "title": "Bad Request"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          },
          "application/vnd.api+json": {
            "example": {
              "errors": [
                {
                  "description": "Bad parameters for this endpoint. See documentation for the correct ones.",
                  "status": "400",
                  "title": "Bad Request"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          }
        },
        "description": "Bad Request"
      },
      "401": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "description": "Authorization information is missing or invalid.",
                  "status": "401",
                  "title": "Unauthorized"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          },
          "application/vnd.api+json": {
            "example": {
              "errors": [
                {
                  "description": "Authorization information is missing or invalid.",
                  "status": "401",
                  "title": "Unauthorized"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          }
        },
        "description": "Unauthorized"
      },
      "403": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "description": "This operation is restricted to logged in users.",
                  "status": "403",
                  "title": "Forbidden"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          },
          "application/vnd.api+json": {
            "example": {
              "errors": [
                {
                  "description": "This operation is restricted to logged in users.",
                  "status": "403",
                  "title": "Forbidden"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          }
        },
        "description": "Forbidden"
      },
      "404": {
        "content": {
          "application/json": {
            "example": {
              "errors": [
                {
                  "description": "Resource with given parameter was not found.",
                  "status": "404",
                  "title": "Not Found"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          },
          "application/vnd.api+json": {
            "example": {
              "errors": [
                {
                  "description": "Resource with given parameter was not found.",
                  "status": "404",
                  "title": "Not Found"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/failure"
            }
          }
        },
        "description": "Not Found"
      }
    },
    "schemas": {
      "AclRole": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "integrations": {
            "$ref": "#/components/schemas/Integration"
          },
          "name": {
            "type": "string"
          },
          "privileges": {
            "items": {
              "additionalProperties": false
            },
            "type": "array"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["name", "privileges", "createdAt"],
        "type": "object"
      },
      "AclRoleJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "deletedAt": {
                "format": "date-time",
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "privileges": {
                "items": {
                  "additionalProperties": false
                },
                "type": "array"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "92690aba027541cba2288f1a64bc7de4",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/acl-role/3bafcf4c934046429832c943cada379a/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "integrations": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "48fd0e6b8c984e528f108b20582f6feb",
                              "type": "string"
                            },
                            "type": {
                              "example": "integration",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/acl-role/3bafcf4c934046429832c943cada379a/integrations",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "35e0c346a4314dcc9191a9e7b8d49c17",
                              "type": "string"
                            },
                            "type": {
                              "example": "user",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/acl-role/3bafcf4c934046429832c943cada379a/users",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "privileges", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "AclUserRole": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "aclRole": {
            "$ref": "#/components/schemas/AclRole"
          },
          "aclRoleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["userId", "aclRoleId", "createdAt"],
        "type": "object"
      },
      "App": {
        "description": "Added since version: 6.3.1.0",
        "properties": {
          "aclRole": {
            "$ref": "#/components/schemas/AclRole"
          },
          "aclRoleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "actionButtons": {
            "$ref": "#/components/schemas/AppActionButton"
          },
          "active": {
            "type": "boolean"
          },
          "allowDisable": {
            "type": "boolean"
          },
          "allowedHosts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "author": {
            "type": "string"
          },
          "baseAppUrl": {
            "type": "string"
          },
          "cmsBlocks": {
            "$ref": "#/components/schemas/AppCmsBlock"
          },
          "configurable": {
            "type": "boolean"
          },
          "cookies": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "copyright": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFieldSets": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "flowActions": {
            "$ref": "#/components/schemas/AppFlowAction"
          },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "integration": {
            "$ref": "#/components/schemas/Integration"
          },
          "integrationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "mainModule": {
            "type": "object"
          },
          "modules": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          },
          "privacy": {
            "type": "string"
          },
          "privacyPolicyExtensions": {
            "type": "string"
          },
          "templateLoadPriority": {
            "format": "int64",
            "type": "integer"
          },
          "templates": {
            "$ref": "#/components/schemas/AppTemplate"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "webhooks": {
            "$ref": "#/components/schemas/Webhook"
          }
        },
        "required": [
          "name",
          "path",
          "active",
          "configurable",
          "version",
          "allowDisable",
          "integrationId",
          "aclRoleId",
          "createdAt",
          "label"
        ],
        "type": "object"
      },
      "AppActionButton": {
        "description": "Added since version: 6.3.1.0",
        "properties": {
          "action": {
            "type": "string"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "entity": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "openNewTab": {
            "type": "boolean"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "view": {
            "type": "string"
          }
        },
        "required": [
          "entity",
          "view",
          "url",
          "action",
          "openNewTab",
          "appId",
          "createdAt",
          "label"
        ],
        "type": "object"
      },
      "AppActionButtonJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "action": {
                "type": "string"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "entity": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "openNewTab": {
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8163dfc15ba34c0ebc1d9e6ff9b7c3fd",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-action-button/7c6a642a29294d6fbde0f060f83d2f54/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "view": {
                "type": "string"
              }
            },
            "required": [
              "entity",
              "view",
              "url",
              "action",
              "openNewTab",
              "appId",
              "createdAt",
              "label"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.1.0"
      },
      "AppAdministrationSnippet": {
        "description": "Added since version: 6.4.15.0",
        "properties": {
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "localeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["value", "appId", "localeId", "createdAt"],
        "type": "object"
      },
      "AppAdministrationSnippetJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "localeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": ["value", "appId", "localeId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.15.0"
      },
      "AppCmsBlock": {
        "description": "Added since version: 6.4.2.0",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "block": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "styles": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "block",
          "template",
          "styles",
          "appId",
          "createdAt",
          "label"
        ],
        "type": "object"
      },
      "AppCmsBlockJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "block": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "14c82310f5554e13844a660d7c204d31",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-cms-block/8fc7dd03ec364053a2efa771e24fda78/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "styles": {
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "name",
              "block",
              "template",
              "styles",
              "appId",
              "createdAt",
              "label"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.2.0"
      },
      "AppFlowAction": {
        "description": "Added since version: 6.4.10.0",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "badge": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "flowSequences": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "headers": {
            "type": "object"
          },
          "headline": {
            "type": "string"
          },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "string"
          },
          "iconRaw": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "requirements": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "swIcon": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": ["appId", "name", "url", "createdAt", "label"],
        "type": "object"
      },
      "AppFlowActionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "badge": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "headers": {
                "type": "object"
              },
              "headline": {
                "type": "string"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "string"
              },
              "iconRaw": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c50f2124ff384ae48e4b189fd27905e0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-flow-action/7fca7b2a15e446e888ac311e7a108e87/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1fffef44525f488981b4ad1271cdb733",
                              "type": "string"
                            },
                            "type": {
                              "example": "flow_sequence",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-flow-action/7fca7b2a15e446e888ac311e7a108e87/flowSequences",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "requirements": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "swIcon": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": ["appId", "name", "url", "createdAt", "label"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.10.0"
      },
      "AppJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "aclRoleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "allowDisable": {
                "type": "boolean"
              },
              "allowedHosts": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "author": {
                "type": "string"
              },
              "baseAppUrl": {
                "type": "string"
              },
              "configurable": {
                "type": "boolean"
              },
              "cookies": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "copyright": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "integrationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "license": {
                "type": "string"
              },
              "mainModule": {
                "type": "object"
              },
              "modules": {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "privacy": {
                "type": "string"
              },
              "privacyPolicyExtensions": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "aclRole": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "86a1743160594178a67347db85be1de4",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "acl_role",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/aclRole",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "actionButtons": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cddc9345a31b48589a6adbd50fc8251a",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_action_button",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/actionButtons",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5c17de46a04d4f75ba815b98e264f537",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_cms_block",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/cmsBlocks",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3e769cd903fa4539ad315a263d7d4db1",
                              "type": "string"
                            },
                            "type": {
                              "example": "custom_field_set",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/customFieldSets",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "flowActions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "66936bbea0e643d0b281f8c8810fbcd9",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_flow_action",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/flowActions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "integration": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "677f26b2cba04f0faa7802b41b5925d0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "integration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/integration",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "dfd921a2fca246c2b6379b94be477c42",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/paymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "templates": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "346eb1a6dce147d19021e64fb8d081e9",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_template",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/templates",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "webhooks": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d63f17e64e7648c6a6898d36475066fe",
                              "type": "string"
                            },
                            "type": {
                              "example": "webhook",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app/01e45cba07e84ebcb041ed1ecab0d1b2/webhooks",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "templateLoadPriority": {
                "format": "int64",
                "type": "integer"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "path",
              "active",
              "configurable",
              "version",
              "allowDisable",
              "integrationId",
              "aclRoleId",
              "createdAt",
              "label"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.1.0"
      },
      "AppPaymentMethod": {
        "description": "Added since version: 6.4.1.0",
        "properties": {
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "appName": {
            "type": "string"
          },
          "captureUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "finalizeUrl": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "originalMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "originalMediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "payUrl": {
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "refundUrl": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "validateUrl": {
            "type": "string"
          }
        },
        "required": ["appName", "identifier", "paymentMethodId", "createdAt"],
        "type": "object"
      },
      "AppPaymentMethodJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "appName": {
                "type": "string"
              },
              "captureUrl": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "finalizeUrl": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "originalMediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "payUrl": {
                "type": "string"
              },
              "paymentMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "refundUrl": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7f8e1fcab92645b7b395258c913175b5",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-payment-method/d58fdf26312d493ab938ea098f64bd94/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "originalMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "50a336ee02b64bef82c5d7d547e94624",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-payment-method/d58fdf26312d493ab938ea098f64bd94/originalMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "df2e046480c54d0fad13f1e0eaa25d00",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-payment-method/d58fdf26312d493ab938ea098f64bd94/paymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "validateUrl": {
                "type": "string"
              }
            },
            "required": [
              "appName",
              "identifier",
              "paymentMethodId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.1.0"
      },
      "AppScriptCondition": {
        "description": "Added since version: 6.4.10.3",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "ruleConditions": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "script": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["identifier", "active", "appId", "createdAt", "name"],
        "type": "object"
      },
      "AppScriptConditionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "group": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b4e8a7e83acb43c69bc8a141b58e93e2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-script-condition/4a78346ade5840428a49eee44ff220ec/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "ruleConditions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0f4460d85ff8470dace76b5bd9811444",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule_condition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-script-condition/4a78346ade5840428a49eee44ff220ec/ruleConditions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "script": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["identifier", "active", "appId", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.10.3"
      },
      "AppTemplate": {
        "description": "Added since version: 6.3.1.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["template", "path", "active", "appId", "createdAt"],
        "type": "object"
      },
      "AppTemplateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "37c3422100e34d45b1e9457d2da91b87",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/app-template/4b1794f936284ee1b288949e30bc7f55/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "template": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["template", "path", "active", "appId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.1.0"
      },
      "Category": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "afterCategoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "afterCategoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "autoIncrement": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "breadcrumb": {
            "items": {
              "additionalProperties": false
            },
            "readOnly": true,
            "type": "array"
          },
          "childCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "children": {
            "$ref": "#/components/schemas/Category"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "cmsPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "cmsPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "displayNestedProducts": {
            "type": "boolean"
          },
          "externalLink": {
            "type": "string"
          },
          "footerSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "internalLink": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "level": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "linkNewTab": {
            "type": "boolean"
          },
          "linkType": {
            "type": "string"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaTitle": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "navigationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "nestedProducts": {
            "$ref": "#/components/schemas/Product"
          },
          "parent": {
            "$ref": "#/components/schemas/Category"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parentVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "path": {
            "readOnly": true,
            "type": "string"
          },
          "productAssignmentType": {
            "type": "string"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "productStreamId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "serviceSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "slotConfig": {
            "type": "object"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "required": [
          "displayNestedProducts",
          "type",
          "productAssignmentType",
          "createdAt",
          "name"
        ],
        "type": "object"
      },
      "CategoryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "afterCategoryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "afterCategoryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "autoIncrement": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "breadcrumb": {
                "items": {
                  "additionalProperties": false
                },
                "readOnly": true,
                "type": "array"
              },
              "childCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "cmsPageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "cmsPageVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "displayNestedProducts": {
                "type": "boolean"
              },
              "externalLink": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "internalLink": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "level": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "linkNewTab": {
                "type": "boolean"
              },
              "linkType": {
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "path": {
                "readOnly": true,
                "type": "string"
              },
              "productAssignmentType": {
                "type": "string"
              },
              "productStreamId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6f6802584949432eb22c72121f7b63e5",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "d9ccb19d821447168dc4d897cb55f85d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_page",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/cmsPage",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "footerSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "39f3d589af0540d6bbc14b1f449a078f",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/footerSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f089665cdd1a4f6084cb13f60ebbbc65",
                              "type": "string"
                            },
                            "type": {
                              "example": "main_category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/mainCategories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bb322dd5922d46abbb45a489a191ada0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "navigationSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1785950484414e27b7fc4e4ec5b2c6c1",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/navigationSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "nestedProducts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ab8fe84b018c421aa7439efc1b46c2eb",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/nestedProducts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "143c9ab7f8214d5ba17022847b613a10",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "category",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "6eff64784de44540830d2280fbd91686",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_stream",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/productStream",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "785e4ab87e6648639fb424e1abba7479",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "dac6928e09c445ed9d7ed85cf8c863ee",
                              "type": "string"
                            },
                            "type": {
                              "example": "seo_url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/seoUrls",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "serviceSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "923cbf26f9854d338fd6e4a44fc4e710",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/serviceSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7689e51a9a0e4667a4bf703f8fa4c39e",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/category/ed3e0cedb83a4dd2be18c8b03308d453/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "slotConfig": {
                "type": "object"
              },
              "translated": {
                "type": "object"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "visible": {
                "type": "boolean"
              }
            },
            "required": [
              "displayNestedProducts",
              "type",
              "productAssignmentType",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CategoryTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "categoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "categoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["categoryId", "tagId"],
        "type": "object"
      },
      "CmsBlock": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "backgroundMediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "backgroundMediaMode": {
            "type": "string"
          },
          "cmsSectionVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "cssClass": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "marginBottom": {
            "type": "string"
          },
          "marginLeft": {
            "type": "string"
          },
          "marginRight": {
            "type": "string"
          },
          "marginTop": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "section": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "sectionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "sectionPosition": {
            "type": "string"
          },
          "slots": {
            "$ref": "#/components/schemas/CmsSlot"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["position", "type", "sectionId", "createdAt"],
        "type": "object"
      },
      "CmsBlockJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "backgroundColor": {
                "type": "string"
              },
              "backgroundMediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "backgroundMediaMode": {
                "type": "string"
              },
              "cmsSectionVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "marginBottom": {
                "type": "string"
              },
              "marginLeft": {
                "type": "string"
              },
              "marginRight": {
                "type": "string"
              },
              "marginTop": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "backgroundMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "10fc1f7c2582460bab53369dc887332c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-block/c47d9012584c48dba5e922646a86b92e/backgroundMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "section": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a993ee73f0504607bd96ce0f3307b6fe",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_section",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-block/c47d9012584c48dba5e922646a86b92e/section",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "slots": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3d00a2325ee8413284c4ef903ca570da",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_slot",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-block/c47d9012584c48dba5e922646a86b92e/slots",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sectionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "sectionPosition": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["position", "type", "sectionId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CmsPage": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "config": {
            "properties": {
              "backgroundColor": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "cssClass": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "entity": {
            "type": "string"
          },
          "homeSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "locked": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "previewMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "previewMediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "sections": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["type", "createdAt"],
        "type": "object"
      },
      "CmsPageJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "config": {
                "properties": {
                  "backgroundColor": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "entity": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "previewMediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c183c5869bea4ccfbda40e49067f10ea",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/categories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "homeSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b88ced57b8334023822b2d17009cc084",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/homeSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0a74205c1df04fa882876f8a415c4602",
                              "type": "string"
                            },
                            "type": {
                              "example": "landing_page",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/landingPages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "cfef90773d504572a4f9e8b0b83f5aeb",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/previewMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9a230b89b1c94a049f65f8c727e5cc50",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "sections": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e91e2733893843a192bae18644ae1ba0",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_section",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-page/4f3aaa9898e945398aaf5a416c827dce/sections",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["type", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CmsSection": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "backgroundColor": {
            "type": "string"
          },
          "backgroundMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "backgroundMediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "backgroundMediaMode": {
            "type": "string"
          },
          "blocks": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "cmsPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "cssClass": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "mobileBehavior": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "page": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "pageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "sizingMode": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["position", "type", "pageId", "createdAt"],
        "type": "object"
      },
      "CmsSectionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "backgroundColor": {
                "type": "string"
              },
              "backgroundMediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "backgroundMediaMode": {
                "type": "string"
              },
              "cmsPageVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "cssClass": {
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "mobileBehavior": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "backgroundMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "39c4d8f6ce7f450baf876d266314fdec",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-section/cea9e751398e41afba0dc023ef3bd475/backgroundMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "blocks": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9107239661634fcdab017e947d02f02d",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_block",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-section/cea9e751398e41afba0dc023ef3bd475/blocks",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "01fde36bab9648b9af1a24b1882e0d5a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_page",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-section/cea9e751398e41afba0dc023ef3bd475/page",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sizingMode": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["position", "type", "pageId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CmsSlot": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "block": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "blockId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "cmsBlockVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "data": {
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "slot": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["type", "slot", "blockId", "createdAt"],
        "type": "object"
      },
      "CmsSlotJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "blockId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "cmsBlockVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "data": {
                "readOnly": true,
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "block": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "846aaf7f8d4640f38d61ce92571eef90",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_block",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/cms-slot/f317861fc89c4808945df123e9786c6d/block",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "slot": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["type", "slot", "blockId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Country": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "checkVatIdPattern": {
            "type": "boolean"
          },
          "companyTax": {
            "properties": {
              "amount": {
                "format": "float",
                "type": "number"
              },
              "currencyId": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": ["enabled", "currencyId", "amount"],
            "type": "object"
          },
          "companyTaxFree": {
            "deprecated": true,
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currencyCountryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          },
          "customFields": {
            "type": "object"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "customerTax": {
            "properties": {
              "amount": {
                "format": "float",
                "type": "number"
              },
              "currencyId": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": ["enabled", "currencyId", "amount"],
            "type": "object"
          },
          "displayStateInRegistration": {
            "type": "boolean"
          },
          "forceStateInRegistration": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "iso": {
            "type": "string"
          },
          "iso3": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "shippingAvailable": {
            "type": "boolean"
          },
          "states": {
            "$ref": "#/components/schemas/CountryState"
          },
          "taxFree": {
            "deprecated": true,
            "type": "boolean"
          },
          "taxRules": {
            "$ref": "#/components/schemas/TaxRule"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "vatIdPattern": {
            "type": "string"
          },
          "vatIdRequired": {
            "type": "boolean"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "CountryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "checkVatIdPattern": {
                "type": "boolean"
              },
              "companyTax": {
                "properties": {
                  "amount": {
                    "format": "float",
                    "type": "number"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "required": ["enabled", "currencyId", "amount"],
                "type": "object"
              },
              "companyTaxFree": {
                "deprecated": true,
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerTax": {
                "properties": {
                  "amount": {
                    "format": "float",
                    "type": "number"
                  },
                  "currencyId": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                },
                "required": ["enabled", "currencyId", "amount"],
                "type": "object"
              },
              "displayStateInRegistration": {
                "type": "boolean"
              },
              "forceStateInRegistration": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "iso3": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "currencyCountryRoundings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7ea69fc929e445f7af91c6f161de87ac",
                              "type": "string"
                            },
                            "type": {
                              "example": "currency_country_rounding",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/currencyCountryRoundings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c37f30a332014227b898dd440a598116",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/customerAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b494eaf77925463583600ebe41f0c912",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/orderAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4bd09db1985a47c1914d1bd0b254a688",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/salesChannelDefaultAssignments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "74035beb013f4f13ac299757fdb5458c",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "states": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "dc389651d09944e18b5aae104f8c71ae",
                              "type": "string"
                            },
                            "type": {
                              "example": "country_state",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/states",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ce2ea69215f9475794717e3c792ac239",
                              "type": "string"
                            },
                            "type": {
                              "example": "tax_rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country/8a05794c64b84a1e89986e51f3739c59/taxRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "shippingAvailable": {
                "type": "boolean"
              },
              "taxFree": {
                "deprecated": true,
                "type": "boolean"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "vatIdPattern": {
                "type": "string"
              },
              "vatIdRequired": {
                "type": "boolean"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CountryState": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "shortCode": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["countryId", "shortCode", "createdAt", "name"],
        "type": "object"
      },
      "CountryStateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "fca8e7cda39c4e0fa9b5bf058c0e22a0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country-state/9561e648e220448098134d0c98d40da3/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customerAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d800647daff94a58984983200bd28bfe",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country-state/9561e648e220448098134d0c98d40da3/customerAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c152e9f14c7548acbc048ec0ab53be18",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/country-state/9561e648e220448098134d0c98d40da3/orderAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "shortCode": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["countryId", "shortCode", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Currency": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "countryRoundings": {
            "$ref": "#/components/schemas/CurrencyCountryRounding"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "factor": {
            "format": "float",
            "type": "number"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "isSystemDefault": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "isoCode": {
            "type": "string"
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "shortName": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "taxFreeFrom": {
            "format": "float",
            "type": "number"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "factor",
          "symbol",
          "isoCode",
          "itemRounding",
          "totalRounding",
          "createdAt",
          "shortName",
          "name"
        ],
        "type": "object"
      },
      "CurrencyCountryRounding": {
        "description": "Added since version: 6.4.0.0",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "currencyId",
          "countryId",
          "itemRounding",
          "totalRounding",
          "createdAt"
        ],
        "type": "object"
      },
      "CurrencyCountryRoundingJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bba934d372fc4805be9d81911ce43eb6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency-country-rounding/abd882bd86fb439e8b9eab8cbbf54866/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9d09b984f7c24141a72c26178d0f53ab",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency-country-rounding/abd882bd86fb439e8b9eab8cbbf54866/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "currencyId",
              "countryId",
              "itemRounding",
              "totalRounding",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.0.0"
      },
      "CurrencyJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "factor": {
                "format": "float",
                "type": "number"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "isSystemDefault": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "isoCode": {
                "type": "string"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "countryRoundings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cc437b08a6cb477b80ced865286d7008",
                              "type": "string"
                            },
                            "type": {
                              "example": "currency_country_rounding",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/countryRoundings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "917e3cd65b6e475288714f01ba8e47fa",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/orders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "81c2a577763b42f0940f95501da3c6cd",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_export",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/productExports",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "fc02fb0e27e34adfb03ab3e3849468f3",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_discount_prices",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/promotionDiscountPrices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "59efcfebc8564bd7921cb5f133089841",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/salesChannelDefaultAssignments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "2f96eb2c1047438f980c58c0eb5b224c",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel_domain",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/salesChannelDomains",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "150465cb1cc148c7a147429a9796dcf8",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/currency/cfbe62c47b684c69993416c08782bfc0/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "shortName": {
                "type": "string"
              },
              "symbol": {
                "type": "string"
              },
              "taxFreeFrom": {
                "format": "float",
                "type": "number"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "factor",
              "symbol",
              "isoCode",
              "itemRounding",
              "totalRounding",
              "createdAt",
              "shortName",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomEntity": {
        "description": "Added since version: 6.4.9.0",
        "properties": {
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "fields", "createdAt"],
        "type": "object"
      },
      "CustomEntityJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "fields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "fields", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.9.0"
      },
      "CustomField": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "allowCustomerWrite": {
            "type": "boolean"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "customFieldSetId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productSearchConfigFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "type", "createdAt"],
        "type": "object"
      },
      "CustomFieldJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "allowCustomerWrite": {
                "type": "boolean"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFieldSetId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "13b78f8dd41b433f93946851efbe4f24",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "custom_field_set",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field/f1c2a1dee56f428e9da9585dd6318a9c/customFieldSet",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfigFields": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a5f9d72656d540a3aaf5c4c853ea7e74",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_search_config_field",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field/f1c2a1dee56f428e9da9585dd6318a9c/productSearchConfigFields",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "type", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomFieldSet": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "$ref": "#/components/schemas/CustomField"
          },
          "global": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "relations": {
            "$ref": "#/components/schemas/CustomFieldSetRelation"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "createdAt"],
        "type": "object"
      },
      "CustomFieldSetJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "global": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bf9a177b721041d4a0d49aa7cf430110",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field-set/a184219f8b0d426f96a14ea19e8174d0/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customFields": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "100c0018cd524e6e83adc61f06ac9e96",
                              "type": "string"
                            },
                            "type": {
                              "example": "custom_field",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field-set/a184219f8b0d426f96a14ea19e8174d0/customFields",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d920fc3de426479db5fbea0df29aa27b",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field-set/a184219f8b0d426f96a14ea19e8174d0/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "relations": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f29f8421a1ea4a6e9ccd50c47b6ca1b3",
                              "type": "string"
                            },
                            "type": {
                              "example": "custom_field_set_relation",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field-set/a184219f8b0d426f96a14ea19e8174d0/relations",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomFieldSetRelation": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "customFieldSetId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "entityName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["customFieldSetId", "entityName", "createdAt"],
        "type": "object"
      },
      "CustomFieldSetRelationJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFieldSetId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "entityName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customFieldSet": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1b6bea7168c04009b3eb37a441049537",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "custom_field_set",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/custom-field-set-relation/ef5fdd159bb14201813ed6e0efe88e85/customFieldSet",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["customFieldSetId", "entityName", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Customer": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "addresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "affiliateCode": {
            "type": "string"
          },
          "autoIncrement": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "birthday": {
            "type": "string"
          },
          "boundSalesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "boundSalesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerNumber": {
            "type": "string"
          },
          "defaultBillingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultBillingAddressId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "defaultPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "defaultPaymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "defaultShippingAddress": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "defaultShippingAddressId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "doubleOptInConfirmDate": {
            "format": "date-time",
            "type": "string"
          },
          "doubleOptInEmailSentDate": {
            "format": "date-time",
            "type": "string"
          },
          "doubleOptInRegistration": {
            "type": "boolean"
          },
          "email": {
            "type": "string"
          },
          "firstLogin": {
            "format": "date-time",
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "groupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "guest": {
            "type": "boolean"
          },
          "hash": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastLogin": {
            "format": "date-time",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "lastOrderDate": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "lastPaymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "newsletter": {
            "type": "boolean"
          },
          "orderCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "orderCustomers": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "orderTotalAmount": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "promotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "recoveryCustomer": {
            "$ref": "#/components/schemas/CustomerRecovery"
          },
          "remoteAddress": {
            "type": "string"
          },
          "requestedGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "requestedGroupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "salutationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tagIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "vatIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlist"
          }
        },
        "required": [
          "groupId",
          "defaultPaymentMethodId",
          "salesChannelId",
          "languageId",
          "defaultBillingAddressId",
          "defaultShippingAddressId",
          "customerNumber",
          "firstName",
          "lastName",
          "email",
          "createdAt"
        ],
        "type": "object"
      },
      "CustomerAddress": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "additionalAddressLine1": {
            "type": "string"
          },
          "additionalAddressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "countryStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "salutationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          }
        },
        "required": [
          "customerId",
          "countryId",
          "firstName",
          "lastName",
          "zipcode",
          "city",
          "street",
          "createdAt"
        ],
        "type": "object"
      },
      "CustomerAddressJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "additionalAddressLine1": {
                "type": "string"
              },
              "additionalAddressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "countryStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "department": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "784b7f4778ad45bcbcd002d4c142f114",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-address/303692e9aae44c7f885569a522dde8af/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e14fd1ec61a14051b3518424b2f64946",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-address/303692e9aae44c7f885569a522dde8af/countryState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f8752de9c9ec40f7bc30264160b861b1",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-address/303692e9aae44c7f885569a522dde8af/customer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "65dc0fbed6ff422bbf6f3ba0490003e6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "salutation",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-address/303692e9aae44c7f885569a522dde8af/salutation",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salutationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              }
            },
            "required": [
              "customerId",
              "countryId",
              "firstName",
              "lastName",
              "zipcode",
              "city",
              "street",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomerGroup": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "displayGross": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "registrationActive": {
            "type": "boolean"
          },
          "registrationIntroduction": {
            "type": "string"
          },
          "registrationOnlyCompanyRegistration": {
            "type": "boolean"
          },
          "registrationSalesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "registrationSeoMetaDescription": {
            "type": "string"
          },
          "registrationTitle": {
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "CustomerGroupJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "displayGross": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "registrationActive": {
                "type": "boolean"
              },
              "registrationIntroduction": {
                "type": "string"
              },
              "registrationOnlyCompanyRegistration": {
                "type": "boolean"
              },
              "registrationSeoMetaDescription": {
                "type": "string"
              },
              "registrationTitle": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "436bfda67aeb4453bc975982db18a9e8",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-group/0cfd88649c394d929a68708a60ac2287/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "registrationSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0b91a2028f42406792f156ef87e50767",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-group/0cfd88649c394d929a68708a60ac2287/registrationSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "08ae05848fe44acc8355668e10ffff71",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-group/0cfd88649c394d929a68708a60ac2287/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomerGroupRegistrationSalesChannels": {
        "description": "Added since version: 6.3.1.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "customerGroupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["customerGroupId", "salesChannelId", "createdAt"],
        "type": "object"
      },
      "CustomerJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "affiliateCode": {
                "type": "string"
              },
              "autoIncrement": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "birthday": {
                "type": "string"
              },
              "boundSalesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "campaignCode": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerNumber": {
                "type": "string"
              },
              "defaultBillingAddressId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "defaultPaymentMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "defaultShippingAddressId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "doubleOptInConfirmDate": {
                "format": "date-time",
                "type": "string"
              },
              "doubleOptInEmailSentDate": {
                "format": "date-time",
                "type": "string"
              },
              "doubleOptInRegistration": {
                "type": "boolean"
              },
              "email": {
                "type": "string"
              },
              "firstLogin": {
                "format": "date-time",
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "groupId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "guest": {
                "type": "boolean"
              },
              "hash": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastLogin": {
                "format": "date-time",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "lastOrderDate": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "lastPaymentMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "newsletter": {
                "type": "boolean"
              },
              "orderCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "orderTotalAmount": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "addresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1144eecc24284549ac19b7469ec02ee1",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/addresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "boundSalesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "3705d1d39c444f2cbbb57e68ba5cda13",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/boundSalesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "defaultBillingAddress": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "164bf1d3afde498abb1aa8a21398d785",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_address",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/defaultBillingAddress",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "defaultPaymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "409899fc9a2f4d0ca1aee7494ecb90ce",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/defaultPaymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "defaultShippingAddress": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4ad79525542b4ca0bcb5da63b7f5b09b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_address",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/defaultShippingAddress",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "group": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "54854fdecfbf4973ba2046885b6c6907",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_group",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/group",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9ee85374cf05486ebfbaaf60ee337cf7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "lastPaymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "43aa731e357d4547b290644ecf303517",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/lastPaymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d0fbeb737ace4f068f56b518a136941e",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/orderCustomers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8eb543cce0ce45f8b6120cb340101528",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_review",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/productReviews",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a74f40dd16a148a197865c013d43dde2",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/promotions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "recoveryCustomer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9c084b905586466e902d79fdb16d5413",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_recovery",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/recoveryCustomer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "requestedGroup": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4d914b375eb14c8d817e3a3cb284111e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_group",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/requestedGroup",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a2e1d4f7353947cbbccf9950a04b434a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2ce00f90812a43caa6e5a89352d60d2e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "salutation",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/salutation",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5eaa4e6677134423aa96ce5358f22f6e",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4f498de9bc284ea1bd48f3886e76321a",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_wishlist",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer/882a73f4be1240189e02b69537405a13/wishlists",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "remoteAddress": {
                "type": "string"
              },
              "requestedGroupId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "salutationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "tagIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "vatIds": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "required": [
              "groupId",
              "defaultPaymentMethodId",
              "salesChannelId",
              "languageId",
              "defaultBillingAddressId",
              "defaultShippingAddressId",
              "customerNumber",
              "firstName",
              "lastName",
              "email",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "CustomerRecovery": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["hash", "customerId", "createdAt"],
        "type": "object"
      },
      "CustomerRecoveryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b8e9f91314cb4c4491b2e5a21f5bfb2e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-recovery/faaf18a93a844d498d1b668af3bd2e6f/customer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["hash", "customerId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "CustomerTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["customerId", "tagId"],
        "type": "object"
      },
      "CustomerWishlist": {
        "description": "Added since version: 6.3.4.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["customerId", "salesChannelId", "createdAt"],
        "type": "object"
      },
      "CustomerWishlistJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "78965c26ebd547219f4e62fd102441c3",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-wishlist/4c54c21ad3a8478087dda25284fb0b20/customer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6a00d6a68c4a4f0197c8bfae3499e206",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_wishlist_product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-wishlist/4c54c21ad3a8478087dda25284fb0b20/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9653bce8133946ad977b9d94dd9850f6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-wishlist/4c54c21ad3a8478087dda25284fb0b20/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["customerId", "salesChannelId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.4.0"
      },
      "CustomerWishlistProduct": {
        "description": "Added since version: 6.3.4.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "wishlist": {
            "$ref": "#/components/schemas/CustomerWishlist"
          },
          "wishlistId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "wishlistId", "createdAt"],
        "type": "object"
      },
      "CustomerWishlistProductJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5b7550920e9e44d7bafc17d57a601c7b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-wishlist-product/b44ae2a601cb47328b0c551620f98396/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "wishlist": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "586520a3ee52407096fe480125d61058",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_wishlist",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/customer-wishlist-product/b44ae2a601cb47328b0c551620f98396/wishlist",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "wishlistId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["productId", "wishlistId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.4.0"
      },
      "DeadMessage": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "encrypted": {
            "readOnly": true,
            "type": "boolean"
          },
          "errorCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "exception": {
            "readOnly": true,
            "type": "string"
          },
          "exceptionFile": {
            "readOnly": true,
            "type": "string"
          },
          "exceptionLine": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "exceptionMessage": {
            "readOnly": true,
            "type": "string"
          },
          "handlerClass": {
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "nextExecutionTime": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "originalMessageClass": {
            "readOnly": true,
            "type": "string"
          },
          "scheduledTask": {
            "$ref": "#/components/schemas/ScheduledTask"
          },
          "scheduledTaskId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "originalMessageClass",
          "handlerClass",
          "encrypted",
          "errorCount",
          "nextExecutionTime",
          "exception",
          "exceptionMessage",
          "exceptionFile",
          "exceptionLine",
          "createdAt"
        ],
        "type": "object"
      },
      "DeadMessageJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "encrypted": {
                "readOnly": true,
                "type": "boolean"
              },
              "errorCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "exception": {
                "readOnly": true,
                "type": "string"
              },
              "exceptionFile": {
                "readOnly": true,
                "type": "string"
              },
              "exceptionLine": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "exceptionMessage": {
                "readOnly": true,
                "type": "string"
              },
              "handlerClass": {
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "nextExecutionTime": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "originalMessageClass": {
                "readOnly": true,
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "scheduledTask": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9b16cabf84a448599bc07a889afc917c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "scheduled_task",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/dead-message/c5d4a9429e0247de9acb7a267c762dd5/scheduledTask",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "scheduledTaskId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "originalMessageClass",
              "handlerClass",
              "encrypted",
              "errorCount",
              "nextExecutionTime",
              "exception",
              "exceptionMessage",
              "exceptionFile",
              "exceptionLine",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "DeliveryTime": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "max": {
            "format": "int64",
            "type": "integer"
          },
          "min": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "translated": {
            "type": "object"
          },
          "unit": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "min", "max", "unit", "createdAt"],
        "type": "object"
      },
      "DeliveryTimeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "max": {
                "format": "int64",
                "type": "integer"
              },
              "min": {
                "format": "int64",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cbe7647c98cf4665982f13d16cabbaef",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/delivery-time/32c0352959134dceaee47f0fde20a76c/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "74edafdfcbff4da8a43040c5dbd45b9a",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/delivery-time/32c0352959134dceaee47f0fde20a76c/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "unit": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "min", "max", "unit", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Document": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "deepLinkCode": {
            "type": "string"
          },
          "dependentDocuments": {
            "$ref": "#/components/schemas/Document"
          },
          "documentMediaFile": {
            "$ref": "#/components/schemas/Media"
          },
          "documentMediaFileId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "documentTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "referencedDocument": {
            "$ref": "#/components/schemas/Document"
          },
          "referencedDocumentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "sent": {
            "type": "boolean"
          },
          "static": {
            "type": "boolean"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "documentTypeId",
          "fileType",
          "orderId",
          "config",
          "deepLinkCode",
          "createdAt"
        ],
        "type": "object"
      },
      "DocumentBaseConfig": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "documentNumber": {
            "type": "string"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "documentTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "filenamePrefix": {
            "type": "string"
          },
          "filenameSuffix": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "logo": {
            "$ref": "#/components/schemas/Media"
          },
          "logoId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["documentTypeId", "name", "global", "createdAt"],
        "type": "object"
      },
      "DocumentBaseConfigJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "documentNumber": {
                "type": "string"
              },
              "documentTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "filenamePrefix": {
                "type": "string"
              },
              "filenameSuffix": {
                "type": "string"
              },
              "global": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "logoId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "documentType": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a8eed3179cab49b5a23cc93e0de8b78c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "document_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config/2da2c8705229411cbdba13c8e94732be/documentType",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "logo": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b937d7b720a144e5947f2c486391ba0f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config/2da2c8705229411cbdba13c8e94732be/logo",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "36ef40c4f3b54b258339e54abb3bf310",
                              "type": "string"
                            },
                            "type": {
                              "example": "document_base_config_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config/2da2c8705229411cbdba13c8e94732be/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["documentTypeId", "name", "global", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "DocumentBaseConfigSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "documentBaseConfig": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "documentBaseConfigId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "documentType": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "documentTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["documentBaseConfigId", "createdAt"],
        "type": "object"
      },
      "DocumentBaseConfigSalesChannelJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "documentBaseConfigId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "documentTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "documentBaseConfig": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a5faca7da7d44856a1bed06e22209e4d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "document_base_config",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config-sales-channel/aa1fb58bcafd44068ccf134748efdd3f/documentBaseConfig",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentType": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "273e744e914448b4b74d1ffeb723d3de",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "document_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config-sales-channel/aa1fb58bcafd44068ccf134748efdd3f/documentType",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e0df648f84a044baaa31ee37d44b339b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-base-config-sales-channel/aa1fb58bcafd44068ccf134748efdd3f/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["documentBaseConfigId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "DocumentJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "deepLinkCode": {
                "type": "string"
              },
              "documentMediaFileId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "documentTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "referencedDocumentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "dependentDocuments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "80b418a62b5944de92df00e9771b4583",
                              "type": "string"
                            },
                            "type": {
                              "example": "document",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document/cc45e161ef184bf4ab081beea030f655/dependentDocuments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentMediaFile": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "92ab54d73eff45358006921ba29a8b0d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document/cc45e161ef184bf4ab081beea030f655/documentMediaFile",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentType": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8880c886f2154403914bae564bb29f4d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "document_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document/cc45e161ef184bf4ab081beea030f655/documentType",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ef1d6d8ef11843099607e9e0fbb36aac",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document/cc45e161ef184bf4ab081beea030f655/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "referencedDocument": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "097eba0342034de0a1a54e7a3db7aa1a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "document",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document/cc45e161ef184bf4ab081beea030f655/referencedDocument",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sent": {
                "type": "boolean"
              },
              "static": {
                "type": "boolean"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "documentTypeId",
              "fileType",
              "orderId",
              "config",
              "deepLinkCode",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "DocumentType": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "technicalName": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["technicalName", "createdAt", "name"],
        "type": "object"
      },
      "DocumentTypeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "598958085f0e485faff9ac3a0288e6aa",
                              "type": "string"
                            },
                            "type": {
                              "example": "document_base_config_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-type/a41a1d365d6a485993476a67937a92cd/documentBaseConfigSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ef31df9896f94dc28bbd9161ae287bc3",
                              "type": "string"
                            },
                            "type": {
                              "example": "document_base_config",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-type/a41a1d365d6a485993476a67937a92cd/documentBaseConfigs",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "095066781c724236bc93d25e24f899ac",
                              "type": "string"
                            },
                            "type": {
                              "example": "document",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/document-type/a41a1d365d6a485993476a67937a92cd/documents",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["technicalName", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "EventAction": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "actionName": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "eventName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rules": {
            "$ref": "#/components/schemas/Rule"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["eventName", "actionName", "createdAt"],
        "type": "object"
      },
      "EventActionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "actionName": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "eventName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "rules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8800da516b2a4ecab4000037177e6aa1",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/event-action/55f6459fb99640cbb82bec4faf38cefc/rules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a561afe375bf458f88aaf9b72e8ba812",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/event-action/55f6459fb99640cbb82bec4faf38cefc/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["eventName", "actionName", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "EventActionRule": {
        "description": "Added since version: 6.3.3.0",
        "properties": {
          "eventAction": {
            "$ref": "#/components/schemas/EventAction"
          },
          "eventActionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["eventActionId", "ruleId"],
        "type": "object"
      },
      "EventActionSalesChannel": {
        "description": "Added since version: 6.3.3.0",
        "properties": {
          "eventAction": {
            "$ref": "#/components/schemas/EventAction"
          },
          "eventActionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["eventActionId", "salesChannelId"],
        "type": "object"
      },
      "Flow": {
        "description": "Added since version: 6.4.6.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "invalid": {
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "format": "int64",
            "type": "integer"
          },
          "sequences": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "eventName", "createdAt"],
        "type": "object"
      },
      "FlowJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "invalid": {
                "readOnly": true,
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "priority": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "sequences": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6419b0aadc054f7397fc7c86d5726e07",
                              "type": "string"
                            },
                            "type": {
                              "example": "flow_sequence",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow/4110b6738dde4e6f8a1bedd98c5a0343/sequences",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "eventName", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.6.0"
      },
      "FlowSequence": {
        "description": "Added since version: 6.4.6.0",
        "properties": {
          "actionName": {
            "type": "string"
          },
          "appFlowAction": {
            "$ref": "#/components/schemas/AppFlowAction"
          },
          "appFlowActionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "children": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "displayGroup": {
            "format": "int64",
            "type": "integer"
          },
          "flow": {
            "$ref": "#/components/schemas/Flow"
          },
          "flowId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "trueCase": {
            "type": "boolean"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["flowId", "createdAt"],
        "type": "object"
      },
      "FlowSequenceJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "actionName": {
                "type": "string"
              },
              "appFlowActionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "displayGroup": {
                "format": "int64",
                "type": "integer"
              },
              "flowId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "appFlowAction": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "df3341df609143c38c35f8710b3e2210",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app_flow_action",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow-sequence/f379b48070b04d3382306edb2d101b5f/appFlowAction",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b8484cddadd0440899c6f88812bec563",
                              "type": "string"
                            },
                            "type": {
                              "example": "flow_sequence",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow-sequence/f379b48070b04d3382306edb2d101b5f/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "flow": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "be0168debf7d48e19db22de2dc654d84",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "flow",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow-sequence/f379b48070b04d3382306edb2d101b5f/flow",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bf1d802b73d646fdb6f34883af6face7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "flow_sequence",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow-sequence/f379b48070b04d3382306edb2d101b5f/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7b33d28c7d944c2ebe4f0f95414e6f83",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/flow-sequence/f379b48070b04d3382306edb2d101b5f/rule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "ruleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "trueCase": {
                "type": "boolean"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["flowId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.6.0"
      },
      "ImportExportFile": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "expireDate": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "log": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "originalName": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "size": {
            "format": "int64",
            "type": "integer"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["originalName", "path", "expireDate", "createdAt"],
        "type": "object"
      },
      "ImportExportFileJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "accessToken": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "expireDate": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "originalName": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "log": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "332df3d6452d43bb9b044dd84d9797d6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "import_export_log",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-file/af3ed0a26d764dcba479015ca5107d8d/log",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "size": {
                "format": "int64",
                "type": "integer"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["originalName", "path", "expireDate", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ImportExportLog": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "activity": {
            "type": "string"
          },
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "failedImportLog": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "file": {
            "$ref": "#/components/schemas/ImportExportFile"
          },
          "fileId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "invalidRecordsLog": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "invalidRecordsLogId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/ImportExportProfile"
          },
          "profileId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "profileName": {
            "type": "string"
          },
          "records": {
            "format": "int64",
            "type": "integer"
          },
          "result": {
            "type": "object"
          },
          "state": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": ["activity", "state", "records", "config", "createdAt"],
        "type": "object"
      },
      "ImportExportLogJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "activity": {
                "type": "string"
              },
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "fileId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "invalidRecordsLogId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "profileId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "profileName": {
                "type": "string"
              },
              "records": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "failedImportLog": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "310d0cbed0154bc3aa0caa8411c3e6a2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "import_export_log",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-log/3f9c85c920f74e749a72a578ad07528c/failedImportLog",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "file": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8925b093fe8342608920c00594bad69e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "import_export_file",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-log/3f9c85c920f74e749a72a578ad07528c/file",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "invalidRecordsLog": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "26d3ef73f3d14efe89080cd392fe6b05",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "import_export_log",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-log/3f9c85c920f74e749a72a578ad07528c/invalidRecordsLog",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "profile": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c7a384fa91d84858ab9d2194094d8815",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "import_export_profile",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-log/3f9c85c920f74e749a72a578ad07528c/profile",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ebc299e30b994c6a8f256087482b1b42",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-log/3f9c85c920f74e749a72a578ad07528c/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "result": {
                "type": "object"
              },
              "state": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "required": ["activity", "state", "records", "config", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ImportExportProfile": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "config": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "delimiter": {
            "type": "string"
          },
          "enclosure": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "importExportLogs": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "label": {
            "type": "string"
          },
          "mapping": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "sourceEntity": {
            "type": "string"
          },
          "systemDefault": {
            "type": "boolean"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updateBy": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "label",
          "sourceEntity",
          "fileType",
          "delimiter",
          "enclosure",
          "createdAt"
        ],
        "type": "object"
      },
      "ImportExportProfileJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "config": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "delimiter": {
                "type": "string"
              },
              "enclosure": {
                "type": "string"
              },
              "fileType": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "mapping": {
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "importExportLogs": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "183c9cb590374fb9b51693f095ae3bd0",
                              "type": "string"
                            },
                            "type": {
                              "example": "import_export_log",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/import-export-profile/5c6231f927d14bdf9aea0a4559caf43f/importExportLogs",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sourceEntity": {
                "type": "string"
              },
              "systemDefault": {
                "type": "boolean"
              },
              "translated": {
                "type": "object"
              },
              "type": {
                "type": "string"
              },
              "updateBy": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "label",
              "sourceEntity",
              "fileType",
              "delimiter",
              "enclosure",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Integration": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "aclRoles": {
            "$ref": "#/components/schemas/AclRole"
          },
          "admin": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "lastUsageAt": {
            "format": "date-time",
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "writeAccess": {
            "deprecated": true,
            "type": "boolean"
          }
        },
        "required": ["label", "accessKey", "secretAccessKey", "createdAt"],
        "type": "object"
      },
      "IntegrationJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "admin": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "deletedAt": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "lastUsageAt": {
                "format": "date-time",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "aclRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e61fcc690d9746c8b066391a6a2d4637",
                              "type": "string"
                            },
                            "type": {
                              "example": "acl_role",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/integration/693ec78431b64e4cbf7f84328360d69b/aclRoles",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "61f0bda8aad343e9889852d945aebd0c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/integration/693ec78431b64e4cbf7f84328360d69b/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "secretAccessKey": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "writeAccess": {
                "deprecated": true,
                "type": "boolean"
              }
            },
            "required": ["label", "accessKey", "secretAccessKey", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "IntegrationRole": {
        "description": "Added since version: 6.3.3.0",
        "properties": {
          "aclRoleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "integration": {
            "$ref": "#/components/schemas/Integration"
          },
          "integrationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/AclRole"
          }
        },
        "required": ["integrationId", "aclRoleId"],
        "type": "object"
      },
      "LandingPage": {
        "description": "Added since version: 6.4.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "cmsPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "cmsPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "keywords": {
            "type": "string"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaTitle": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "slotConfig": {
            "type": "object"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["createdAt", "name", "url"],
        "type": "object"
      },
      "LandingPageJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "cmsPageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "cmsPageVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "keywords": {
                "type": "string"
              },
              "metaDescription": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "cmsPage": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "54b3090a9de442cd97bb9b8bb9c3c2d2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_page",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/landing-page/162337acda4148b4860d2e701e85ef24/cmsPage",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ea583782f202420f882ee41b0cdac8ec",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/landing-page/162337acda4148b4860d2e701e85ef24/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "30e4ba5ca7d94ba186412012b2fd1e00",
                              "type": "string"
                            },
                            "type": {
                              "example": "seo_url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/landing-page/162337acda4148b4860d2e701e85ef24/seoUrls",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "269ccc99fc294c40b68b1cba8329b148",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/landing-page/162337acda4148b4860d2e701e85ef24/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "slotConfig": {
                "type": "object"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["createdAt", "name", "url"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.0.0"
      },
      "LandingPageSalesChannel": {
        "description": "Added since version: 6.4.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "landingPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["landingPageId", "salesChannelId"],
        "type": "object"
      },
      "LandingPageTag": {
        "description": "Added since version: 6.4.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "landingPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["landingPageId", "tagId"],
        "type": "object"
      },
      "Language": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "children": {
            "$ref": "#/components/schemas/Language"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "localeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "parent": {
            "$ref": "#/components/schemas/Language"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productKeywordDictionaries": {
            "$ref": "#/components/schemas/ProductKeywordDictionary"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "productSearchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          },
          "productSearchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "translationCode": {
            "$ref": "#/components/schemas/Locale"
          },
          "translationCodeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["localeId", "name", "createdAt"],
        "type": "object"
      },
      "LanguageJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "localeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1e05d27ca5694262b642c6334671f23b",
                              "type": "string"
                            },
                            "type": {
                              "example": "language",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "30c6583ec6164f9aa1e9fe46be0f71a2",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1c592454ed89428ba2af8039ddf42f6b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "locale",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/locale",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "12cf149f72ed42d19f668cbf0556feef",
                              "type": "string"
                            },
                            "type": {
                              "example": "newsletter_recipient",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/newsletterRecipients",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "93b02c94a9c949edba4f71e8f8f5fb11",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/orders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f56d3b48076d4117836c4e39bdb95226",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productKeywordDictionaries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8d7974fa31a040f6b681f06b9289f8e1",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_keyword_dictionary",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/productKeywordDictionaries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "fcb7a9c7a3f841f3a0c968f86294f167",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_review",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/productReviews",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productSearchConfig": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1e39ae4ebff7433a9582207159ce7944",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_search_config",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/productSearchConfig",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productSearchKeywords": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "040b8f4bc13c48f3b07dabb97d14fddf",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_search_keyword",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/productSearchKeywords",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "de9472ebb6cc42e998e7b8e6e82e6196",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/salesChannelDefaultAssignments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomains": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e1c519327d3e40c09a8703778a73b891",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel_domain",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/salesChannelDomains",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "382af8e808e04e34a573e267c9ba979e",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "translationCode": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "6c6bdc10ec9a4470a150bee965ec1aa1",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "locale",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/language/23692a6fb82f4dca9b931d194d1b0c5b/translationCode",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translationCodeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["localeId", "name", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Locale": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "code": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "languages": {
            "$ref": "#/components/schemas/Language"
          },
          "name": {
            "type": "string"
          },
          "territory": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": ["code", "createdAt", "name", "territory"],
        "type": "object"
      },
      "LocaleJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "code": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "languages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "da575ffacd2742ff8146dc92471eb99d",
                              "type": "string"
                            },
                            "type": {
                              "example": "language",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/locale/a423bc7b3d8a46f0bb810e713dd31980/languages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "users": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f413b1d380ea48d8ae01de157dc1c439",
                              "type": "string"
                            },
                            "type": {
                              "example": "user",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/locale/a423bc7b3d8a46f0bb810e713dd31980/users",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "territory": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["code", "createdAt", "name", "territory"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "LogEntry": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "channel": {
            "type": "string"
          },
          "context": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "extra": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "level": {
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt"],
        "type": "object"
      },
      "LogEntryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "channel": {
                "type": "string"
              },
              "context": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "extra": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "level": {
                "format": "int64",
                "type": "integer"
              },
              "message": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MailHeaderFooter": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "footerHtml": {
            "type": "string"
          },
          "footerPlain": {
            "type": "string"
          },
          "headerHtml": {
            "type": "string"
          },
          "headerPlain": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "systemDefault": {
            "type": "boolean"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "MailHeaderFooterJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "footerHtml": {
                "type": "string"
              },
              "footerPlain": {
                "type": "string"
              },
              "headerHtml": {
                "type": "string"
              },
              "headerPlain": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a5701d3bbb1a444b88e300362c37e047",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/mail-header-footer/0f5d886fb0e543ea8e4f1cc94128c93a/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "systemDefault": {
                "type": "boolean"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MailTemplate": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "contentHtml": {
            "type": "string"
          },
          "contentPlain": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mailTemplateType": {
            "$ref": "#/components/schemas/MailTemplateType"
          },
          "mailTemplateTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/MailTemplateMedia"
          },
          "senderName": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "systemDefault": {
            "type": "boolean"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "mailTemplateTypeId",
          "createdAt",
          "subject",
          "contentHtml",
          "contentPlain"
        ],
        "type": "object"
      },
      "MailTemplateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "contentHtml": {
                "type": "string"
              },
              "contentPlain": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mailTemplateTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "mailTemplateType": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c807447e59d44ccbb4b1e2e17ca09f13",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "mail_template_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/mail-template/18f6f56fb61342478a88fae15e332b21/mailTemplateType",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "594c615a6a9f4ab6b577def10ea834b9",
                              "type": "string"
                            },
                            "type": {
                              "example": "mail_template_media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/mail-template/18f6f56fb61342478a88fae15e332b21/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "senderName": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "systemDefault": {
                "type": "boolean"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "mailTemplateTypeId",
              "createdAt",
              "subject",
              "contentHtml",
              "contentPlain"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MailTemplateMedia": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mailTemplate": {
            "$ref": "#/components/schemas/MailTemplate"
          },
          "mailTemplateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["mailTemplateId", "languageId", "mediaId"],
        "type": "object"
      },
      "MailTemplateType": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "availableEntities": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mailTemplates": {
            "$ref": "#/components/schemas/MailTemplate"
          },
          "name": {
            "type": "string"
          },
          "technicalName": {
            "type": "string"
          },
          "templateData": {
            "type": "object"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["technicalName", "createdAt", "name"],
        "type": "object"
      },
      "MailTemplateTypeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "availableEntities": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "mailTemplates": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3bd866b4ff334d75aebfaf0a7d631f68",
                              "type": "string"
                            },
                            "type": {
                              "example": "mail_template",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/mail-template-type/687d0f17b5c044e3a3fcdeb56f145be4/mailTemplates",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "type": "string"
              },
              "templateData": {
                "type": "object"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["technicalName", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MainCategory": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "categoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "categoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["productId", "categoryId", "salesChannelId", "createdAt"],
        "type": "object"
      },
      "MainCategoryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "categoryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "categoryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "category": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e48d79147e774939b54e48e81f194efa",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "category",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/main-category/a0c8df3ffbc441568f11b3786b31c33b/category",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2ee3d4aa643245028c8fe5e7b0e3f8a0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/main-category/a0c8df3ffbc441568f11b3786b31c33b/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0e02548e9b764c74b3194807d3069f7b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/main-category/a0c8df3ffbc441568f11b3786b31c33b/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "productId",
              "categoryId",
              "salesChannelId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "Media": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "alt": {
            "type": "string"
          },
          "appPaymentMethods": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          },
          "avatarUser": {
            "$ref": "#/components/schemas/User"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "cmsBlocks": {
            "$ref": "#/components/schemas/CmsBlock"
          },
          "cmsPages": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "cmsSections": {
            "$ref": "#/components/schemas/CmsSection"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "documentBaseConfigs": {
            "$ref": "#/components/schemas/DocumentBaseConfig"
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "fileExtension": {
            "readOnly": true,
            "type": "string"
          },
          "fileName": {
            "readOnly": true,
            "type": "string"
          },
          "fileSize": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "hasFile": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mailTemplateMedia": {
            "$ref": "#/components/schemas/MailTemplateMedia"
          },
          "mediaFolder": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "mediaFolderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mediaType": {
            "readOnly": true,
            "type": "object"
          },
          "metaData": {
            "readOnly": true,
            "type": "object"
          },
          "mimeType": {
            "readOnly": true,
            "type": "string"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "private": {
            "type": "boolean"
          },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "productManufacturers": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "productMedia": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "propertyGroupOptions": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "thumbnails": {
            "$ref": "#/components/schemas/MediaThumbnail"
          },
          "title": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "uploadedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["createdAt"],
        "type": "object"
      },
      "MediaDefaultFolder": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "associationFields": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "entity": {
            "type": "string"
          },
          "folder": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["associationFields", "entity", "createdAt"],
        "type": "object"
      },
      "MediaDefaultFolderJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "associationFields": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "entity": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "folder": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "be7a3e93f5614102b504cdf0a9dfe999",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media_folder",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-default-folder/bf55fccaf00b41d3a311910f52599f27/folder",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["associationFields", "entity", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MediaFolder": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "childCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "children": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "configuration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          },
          "configurationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "defaultFolder": {
            "$ref": "#/components/schemas/MediaDefaultFolder"
          },
          "defaultFolderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "name": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "path": {
            "readOnly": true,
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "useParentConfiguration": {
            "type": "boolean"
          }
        },
        "required": ["configurationId", "name", "createdAt"],
        "type": "object"
      },
      "MediaFolderConfiguration": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createThumbnails": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "keepAspectRatio": {
            "type": "boolean"
          },
          "mediaFolders": {
            "$ref": "#/components/schemas/MediaFolder"
          },
          "mediaThumbnailSizes": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          },
          "noAssociation": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          },
          "thumbnailQuality": {
            "format": "int64",
            "type": "integer"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt"],
        "type": "object"
      },
      "MediaFolderConfigurationJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createThumbnails": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "keepAspectRatio": {
                "type": "boolean"
              },
              "noAssociation": {
                "type": "boolean"
              },
              "private": {
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "mediaFolders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cdd490485ceb4ada82773af73d9be6df",
                              "type": "string"
                            },
                            "type": {
                              "example": "media_folder",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder-configuration/3875448f6d17411eb4b870248bf1aa3c/mediaFolders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mediaThumbnailSizes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c22cdc27daf34617a8fb81be78b8d72c",
                              "type": "string"
                            },
                            "type": {
                              "example": "media_thumbnail_size",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder-configuration/3875448f6d17411eb4b870248bf1aa3c/mediaThumbnailSizes",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "thumbnailQuality": {
                "format": "int64",
                "type": "integer"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MediaFolderConfigurationMediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mediaFolderConfiguration": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          },
          "mediaFolderConfigurationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mediaThumbnailSize": {
            "$ref": "#/components/schemas/MediaThumbnailSize"
          },
          "mediaThumbnailSizeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["mediaFolderConfigurationId", "mediaThumbnailSizeId"],
        "type": "object"
      },
      "MediaFolderJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "childCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "configurationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "defaultFolderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "path": {
                "readOnly": true,
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f680f328d7c340f68d56ad2f25135a29",
                              "type": "string"
                            },
                            "type": {
                              "example": "media_folder",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder/792df4ba32a845f38c960b7a2ce461c4/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "configuration": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "38186a61f60f4d469e9fb02cee0c3056",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media_folder_configuration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder/792df4ba32a845f38c960b7a2ce461c4/configuration",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "defaultFolder": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5c72a57725ad4d5bbe3f65fe6e4ebff7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media_default_folder",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder/792df4ba32a845f38c960b7a2ce461c4/defaultFolder",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "75f0ce1f45a9420ba4b2788dff8f4538",
                              "type": "string"
                            },
                            "type": {
                              "example": "media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder/792df4ba32a845f38c960b7a2ce461c4/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "03c9ed023e834c599fb1e56105a2fcca",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media_folder",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-folder/792df4ba32a845f38c960b7a2ce461c4/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "useParentConfiguration": {
                "type": "boolean"
              }
            },
            "required": ["configurationId", "name", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MediaJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "alt": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "fileExtension": {
                "readOnly": true,
                "type": "string"
              },
              "fileName": {
                "readOnly": true,
                "type": "string"
              },
              "fileSize": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "hasFile": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaFolderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaType": {
                "readOnly": true,
                "type": "object"
              },
              "metaData": {
                "readOnly": true,
                "type": "object"
              },
              "mimeType": {
                "readOnly": true,
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "appPaymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "63a343bd625f4ab1879bdc07a5a7019c",
                              "type": "string"
                            },
                            "type": {
                              "example": "app_payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/appPaymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "avatarUser": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b5c6e286ed6646488634db8be2ce22e5",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/avatarUser",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9a62d9447c9b4bb4824651055fce93b6",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/categories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsBlocks": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "02171e60c8634c87a15173a0196b0c01",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_block",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/cmsBlocks",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsPages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e6901ccce03d4e89b7f9026cedaaf6ee",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_page",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/cmsPages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsSections": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9d89c81e3da747aea9b65d7b98b1fa67",
                              "type": "string"
                            },
                            "type": {
                              "example": "cms_section",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/cmsSections",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigs": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0775e83463b34a99a0b697b68a67e399",
                              "type": "string"
                            },
                            "type": {
                              "example": "document_base_config",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/documentBaseConfigs",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "13179d00956d47e29fada85505300a26",
                              "type": "string"
                            },
                            "type": {
                              "example": "document",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/documents",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplateMedia": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3c26f8087c1d4da09167e250c74adec1",
                              "type": "string"
                            },
                            "type": {
                              "example": "mail_template_media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/mailTemplateMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mediaFolder": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7abcdb0b221f4412a47eae2ec2960c70",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media_folder",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/mediaFolder",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f610a1b4b521410a9ec08cc60fd4cb62",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_line_item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/orderLineItems",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ce9bb39690134e45aeec953cec49c885",
                              "type": "string"
                            },
                            "type": {
                              "example": "payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/paymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d7f1cd8c7bd24dd3a084bb04a6bd7491",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_configurator_setting",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/productConfiguratorSettings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productManufacturers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "156483c0d66c4f779ebc0f46cc27fd77",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_manufacturer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/productManufacturers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productMedia": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7733068b4ce24d8a8131a755d5b67d9e",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/productMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "propertyGroupOptions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "06661b6786854adabc6c5058044a778b",
                              "type": "string"
                            },
                            "type": {
                              "example": "property_group_option",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/propertyGroupOptions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8d38929d035a407681967af1f3a3f4eb",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6118b8c5dfa6451fa2f53279993b14d3",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "thumbnails": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "fa76d3bea62849009c6ada14fcb380ee",
                              "type": "string"
                            },
                            "type": {
                              "example": "media_thumbnail",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/thumbnails",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4d7851d73fc740b090bca553b2fc1d66",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media/5e30e7c153f14a03952aed3cc22e9675/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "title": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "uploadedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MediaTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["mediaId", "tagId"],
        "type": "object"
      },
      "MediaThumbnail": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "height": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          },
          "width": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": ["mediaId", "width", "height", "createdAt"],
        "type": "object"
      },
      "MediaThumbnailJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "height": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "3f771fb9a81745a687d30075b129ce7b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-thumbnail/d05dd64a28cd4b18bc7aa31ee603a85e/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              },
              "width": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              }
            },
            "required": ["mediaId", "width", "height", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MediaThumbnailSize": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "height": {
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mediaFolderConfigurations": {
            "$ref": "#/components/schemas/MediaFolderConfiguration"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "width": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["width", "height", "createdAt"],
        "type": "object"
      },
      "MediaThumbnailSizeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "height": {
                "format": "int64",
                "type": "integer"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "mediaFolderConfigurations": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d751004e85a94f0ca26e386eb5476b24",
                              "type": "string"
                            },
                            "type": {
                              "example": "media_folder_configuration",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/media-thumbnail-size/e57fc595f77e414c9dc94b3465d5c33b/mediaFolderConfigurations",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "width": {
                "format": "int64",
                "type": "integer"
              }
            },
            "required": ["width", "height", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "MessageQueueStats": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "size": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "size", "createdAt"],
        "type": "object"
      },
      "MessageQueueStatsJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "readOnly": true,
                "type": "string"
              },
              "size": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "size", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "NewsletterRecipient": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "city": {
            "type": "string"
          },
          "confirmedAt": {
            "format": "date-time",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "salutationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "status",
          "hash",
          "languageId",
          "salesChannelId",
          "createdAt"
        ],
        "type": "object"
      },
      "NewsletterRecipientJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "city": {
                "type": "string"
              },
              "confirmedAt": {
                "format": "date-time",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "email": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "540b1df80a674566abe7f7ee8d6446b7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/newsletter-recipient/8bd64f6d0f1c4df69485ad188f4a4c4e/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "604bf7d08ea648f3ab7d6afee3bcd762",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/newsletter-recipient/8bd64f6d0f1c4df69485ad188f4a4c4e/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "36e961995e6143eb83b654975e4f8c0f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "salutation",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/newsletter-recipient/8bd64f6d0f1c4df69485ad188f4a4c4e/salutation",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "2a4e1aeed8d041f6832ab51f214acf50",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/newsletter-recipient/8bd64f6d0f1c4df69485ad188f4a4c4e/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "salutationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "status",
              "hash",
              "languageId",
              "salesChannelId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "NewsletterRecipientTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "newsletterRecipient": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "newsletterRecipientId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["newsletterRecipientId", "tagId"],
        "type": "object"
      },
      "Notification": {
        "description": "Added since version: 6.4.7.0",
        "properties": {
          "adminOnly": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdByIntegration": {
            "$ref": "#/components/schemas/Integration"
          },
          "createdByIntegrationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          },
          "createdByUserId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "requiredPrivileges": {
            "items": {
              "additionalProperties": false
            },
            "type": "array"
          },
          "status": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["status", "message", "createdAt"],
        "type": "object"
      },
      "NotificationJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "adminOnly": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "createdByIntegrationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdByUserId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "createdByIntegration": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "971ffa72befd49ffb33cfb0a0bacdf2e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "integration",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/notification/dfa2a4f877064edc996773570d5f4ada/createdByIntegration",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "createdByUser": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "118ae947d77740aab0a654a02ddc65d3",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/notification/dfa2a4f877064edc996773570d5f4ada/createdByUser",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "requiredPrivileges": {
                "items": {
                  "additionalProperties": false
                },
                "type": "array"
              },
              "status": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["status", "message", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.7.0"
      },
      "NumberRange": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "global": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "pattern": {
            "type": "string"
          },
          "start": {
            "format": "int64",
            "type": "integer"
          },
          "state": {
            "$ref": "#/components/schemas/NumberRangeState"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "$ref": "#/components/schemas/NumberRangeType"
          },
          "typeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "typeId",
          "global",
          "pattern",
          "start",
          "createdAt",
          "name"
        ],
        "type": "object"
      },
      "NumberRangeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "global": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "numberRangeSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0f29722eae1e41d897ab112a1324c945",
                              "type": "string"
                            },
                            "type": {
                              "example": "number_range_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range/e6212a7ede684560a6c91750ab33f070/numberRangeSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "state": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0167a5c3022f4f458fe83992703da53e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "number_range_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range/e6212a7ede684560a6c91750ab33f070/state",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ca74de9d860e4122887cc2c7682b612c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "number_range_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range/e6212a7ede684560a6c91750ab33f070/type",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "start": {
                "format": "int64",
                "type": "integer"
              },
              "translated": {
                "type": "object"
              },
              "typeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "typeId",
              "global",
              "pattern",
              "start",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "NumberRangeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "numberRange": {
            "$ref": "#/components/schemas/NumberRange"
          },
          "numberRangeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "numberRangeType": {
            "$ref": "#/components/schemas/NumberRangeType"
          },
          "numberRangeTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["numberRangeId", "salesChannelId", "createdAt"],
        "type": "object"
      },
      "NumberRangeSalesChannelJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "numberRangeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "numberRangeTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "97623d5eaea943eba8a64069783282d9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "number_range",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-sales-channel/92333426f34f420ea967c2c36072d120/numberRange",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeType": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9fb5c4aefa1b428c9de53834ff971615",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "number_range_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-sales-channel/92333426f34f420ea967c2c36072d120/numberRangeType",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "273e07af55624bf193082789c8b27431",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-sales-channel/92333426f34f420ea967c2c36072d120/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["numberRangeId", "salesChannelId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "NumberRangeState": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastValue": {
            "format": "int64",
            "type": "integer"
          },
          "numberRange": {
            "$ref": "#/components/schemas/NumberRange"
          },
          "numberRangeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["numberRangeId", "lastValue", "createdAt"],
        "type": "object"
      },
      "NumberRangeStateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastValue": {
                "format": "int64",
                "type": "integer"
              },
              "numberRangeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "numberRange": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e136ba0278a24e59a420d4f3043bd5c8",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "number_range",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-state/5a110e3e219f4954bd47e57aab7256b4/numberRange",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["numberRangeId", "lastValue", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "NumberRangeType": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "global": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "numberRanges": {
            "$ref": "#/components/schemas/NumberRange"
          },
          "technicalName": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "typeName": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["global", "createdAt", "typeName"],
        "type": "object"
      },
      "NumberRangeTypeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "global": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "numberRangeSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c41ff058603749f1b5058b708f81820d",
                              "type": "string"
                            },
                            "type": {
                              "example": "number_range_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-type/7d9dde6fba8c431f9ccc25bbfca999a5/numberRangeSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "numberRanges": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9e031c68d38d49b0a763847de4b350dc",
                              "type": "string"
                            },
                            "type": {
                              "example": "number_range",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/number-range-type/7d9dde6fba8c431f9ccc25bbfca999a5/numberRanges",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "typeName": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["global", "createdAt", "typeName"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Order": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "addresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "affiliateCode": {
            "type": "string"
          },
          "amountNet": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "amountTotal": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "autoIncrement": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "billingAddressId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "billingAddressVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "createdById": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyFactor": {
            "format": "float",
            "type": "number"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerComment": {
            "type": "string"
          },
          "deepLinkCode": {
            "type": "string"
          },
          "deliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "documents": {
            "$ref": "#/components/schemas/Document"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "itemRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderCustomer": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "orderDate": {
            "readOnly": true,
            "type": "string"
          },
          "orderDateTime": {
            "format": "date-time",
            "type": "string"
          },
          "orderNumber": {
            "type": "string"
          },
          "positionPrice": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "price": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "netPrice": {
                "format": "float",
                "type": "number"
              },
              "positionPrice": {
                "format": "float",
                "type": "number"
              },
              "rawTotal": {
                "format": "float",
                "type": "number"
              },
              "taxRules": {
                "type": "object"
              },
              "taxStatus": {
                "type": "string"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "netPrice",
              "totalPrice",
              "positionPrice",
              "rawTotal",
              "taxStatus"
            ],
            "type": "object"
          },
          "ruleIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "shippingTotal": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "stateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "taxStatus": {
            "readOnly": true,
            "type": "string"
          },
          "totalRounding": {
            "properties": {
              "decimals": {
                "format": "int64",
                "type": "integer"
              },
              "interval": {
                "format": "float",
                "type": "number"
              },
              "roundForNet": {
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "transactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/User"
          },
          "updatedById": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "billingAddressId",
          "currencyId",
          "languageId",
          "salesChannelId",
          "orderDateTime",
          "currencyFactor",
          "stateId",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderAddress": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "additionalAddressLine1": {
            "type": "string"
          },
          "additionalAddressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "countryState": {
            "$ref": "#/components/schemas/CountryState"
          },
          "countryStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "department": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "salutationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "vatId": {
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          }
        },
        "required": [
          "countryId",
          "orderId",
          "salutationId",
          "firstName",
          "lastName",
          "street",
          "zipcode",
          "city",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderAddressJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "additionalAddressLine1": {
                "type": "string"
              },
              "additionalAddressLine2": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "company": {
                "type": "string"
              },
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "countryStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "department": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "6d50452503af4b3190344185689494cf",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-address/bbbab6103ab44b0497ec568627761ba1/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "countryState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "63c5a4ac58714b34b580b726f80cee95",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-address/bbbab6103ab44b0497ec568627761ba1/countryState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "d8f0ee1d0661470ba9fafb3c702a782f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-address/bbbab6103ab44b0497ec568627761ba1/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "dc0d2dbd92824463870ac898bc8b256b",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-address/bbbab6103ab44b0497ec568627761ba1/orderDeliveries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9cf396fbdcb54f679e4dc3af32e2c78e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "salutation",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-address/bbbab6103ab44b0497ec568627761ba1/salutation",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salutationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "street": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "vatId": {
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "zipcode": {
                "type": "string"
              }
            },
            "required": [
              "countryId",
              "orderId",
              "salutationId",
              "firstName",
              "lastName",
              "street",
              "zipcode",
              "city",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderCustomer": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "company": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "remoteAddress": {
            "type": "string"
          },
          "salutation": {
            "$ref": "#/components/schemas/Salutation"
          },
          "salutationId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "vatIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "email",
          "salutationId",
          "firstName",
          "lastName",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderCustomerJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "company": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "customerNumber": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "da54657d68374752a1011ccbd9f1e0c3",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-customer/c3c17c47cb4247a48654562698d1b93c/customer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "58aaa5e8eb7b45f18a71e19feebe8ccb",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-customer/c3c17c47cb4247a48654562698d1b93c/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salutation": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "39b9192f65424a58a27bd41f9ac2c204",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "salutation",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-customer/c3c17c47cb4247a48654562698d1b93c/salutation",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "remoteAddress": {
                "type": "string"
              },
              "salutationId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "vatIds": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "orderId",
              "email",
              "salutationId",
              "firstName",
              "lastName",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderDelivery": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          },
          "shippingCosts": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "shippingDateEarliest": {
            "format": "date-time",
            "type": "string"
          },
          "shippingDateLatest": {
            "format": "date-time",
            "type": "string"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shippingMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingOrderAddress": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "shippingOrderAddressId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingOrderAddressVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "trackingCodes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "shippingOrderAddressId",
          "shippingMethodId",
          "stateId",
          "trackingCodes",
          "shippingDateEarliest",
          "shippingDateLatest",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderDeliveryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2e82b1acb9194499b4d06060e486d0d9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery/c4ba0230b46d4709870b7c937628383c/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "positions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "44dfb338d9444737a51f641275da2414",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery_position",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery/c4ba0230b46d4709870b7c937628383c/positions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "28ae0ad28d4e417e8ee66bcca18b1688",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "shipping_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery/c4ba0230b46d4709870b7c937628383c/shippingMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingOrderAddress": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "340c77273b9043d88ea2c3965a7cc0e6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_address",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery/c4ba0230b46d4709870b7c937628383c/shippingOrderAddress",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bc6b3e59e9ae4ec8a9e8c14394ed3953",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery/c4ba0230b46d4709870b7c937628383c/stateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "shippingCosts": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "shippingDateEarliest": {
                "format": "date-time",
                "type": "string"
              },
              "shippingDateLatest": {
                "format": "date-time",
                "type": "string"
              },
              "shippingMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shippingOrderAddressId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shippingOrderAddressVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "stateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "trackingCodes": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "orderId",
              "shippingOrderAddressId",
              "shippingMethodId",
              "stateId",
              "trackingCodes",
              "shippingDateEarliest",
              "shippingDateLatest",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderDeliveryPosition": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderDelivery": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "orderDeliveryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderDeliveryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderLineItemId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderLineItemVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "price": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "quantity": {
            "format": "int64",
            "type": "integer"
          },
          "totalPrice": {
            "format": "float",
            "type": "number"
          },
          "unitPrice": {
            "format": "float",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["orderDeliveryId", "orderLineItemId", "createdAt"],
        "type": "object"
      },
      "OrderDeliveryPositionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderDeliveryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderDeliveryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderLineItemId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderLineItemVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "price": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "orderDelivery": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "cc688d1c915440eba1b7c5470d952963",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_delivery",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery-position/e713d36cd8b0446f9e5c0219bc66dd9c/orderDelivery",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItem": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "953834bdce854f38b5e651e41a7cbcff",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_line_item",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-delivery-position/e713d36cd8b0446f9e5c0219bc66dd9c/orderLineItem",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["orderDeliveryId", "orderLineItemId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "affiliateCode": {
                "type": "string"
              },
              "amountNet": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "amountTotal": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "autoIncrement": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "billingAddressId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "billingAddressVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "campaignCode": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "createdById": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "currencyFactor": {
                "format": "float",
                "type": "number"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerComment": {
                "type": "string"
              },
              "deepLinkCode": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "itemRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderDate": {
                "readOnly": true,
                "type": "string"
              },
              "orderDateTime": {
                "format": "date-time",
                "type": "string"
              },
              "orderNumber": {
                "type": "string"
              },
              "positionPrice": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "price": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "netPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "positionPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "rawTotal": {
                    "format": "float",
                    "type": "number"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "taxStatus": {
                    "type": "string"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": [
                  "netPrice",
                  "totalPrice",
                  "positionPrice",
                  "rawTotal",
                  "taxStatus"
                ],
                "type": "object"
              },
              "relationships": {
                "properties": {
                  "addresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5077beb12637456a951bd036b4a94ae3",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/addresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "billingAddress": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "dacca8425f3c445eb701ac3649c700e4",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_address",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/billingAddress",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "createdBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9a875fecba4e432080c23a6421be7722",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/createdBy",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7303d17e9ae845b3935f187232479543",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "deliveries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "31af8bc1d26944d48c58b6c39f309100",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/deliveries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documents": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "bd7bedd33c7c41c6a99625e7ec47277a",
                              "type": "string"
                            },
                            "type": {
                              "example": "document",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/documents",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f7dfae0ad5294670a6cb816fdf2490b2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "lineItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "68c4518458294579a5f3f46b214fb652",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_line_item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/lineItems",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "949c8ff597a5430bb08f7a82d9d4a447",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/orderCustomer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bd48f561a3e74e5cb981aeead36e25ed",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "94f3d6e7b01b47e2b3854e51de5878d0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/stateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a4942969e2514bffa39962ef90b85bbc",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "transactions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d45a308f87b94683995a4b53c3bf2c89",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/transactions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updatedBy": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "3beaf5cd88ee416582813eb853814780",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order/67143d8285d54d00bf9c369c9d243460/updatedBy",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "ruleIds": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shippingCosts": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "shippingTotal": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "stateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "taxStatus": {
                "readOnly": true,
                "type": "string"
              },
              "totalRounding": {
                "properties": {
                  "decimals": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "interval": {
                    "format": "float",
                    "type": "number"
                  },
                  "roundForNet": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "updatedById": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "billingAddressId",
              "currencyId",
              "languageId",
              "salesChannelId",
              "orderDateTime",
              "currencyFactor",
              "stateId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderLineItem": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "children": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "cover": {
            "$ref": "#/components/schemas/Media"
          },
          "coverId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "good": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderDeliveryPositions": {
            "$ref": "#/components/schemas/OrderDeliveryPosition"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderTransactionCaptureRefundPositions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parentVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "price": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "priceDefinition": {
            "type": "object"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "format": "int64",
            "type": "integer"
          },
          "referencedId": {
            "type": "string"
          },
          "removable": {
            "type": "boolean"
          },
          "stackable": {
            "type": "boolean"
          },
          "totalPrice": {
            "format": "float",
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "unitPrice": {
            "format": "float",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "identifier",
          "quantity",
          "label",
          "position",
          "price",
          "children",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderLineItemJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "coverId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "good": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "identifier": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "payload": {
                "type": "object"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "price": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "priceDefinition": {
                "type": "object"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "promotionId": {
                "pattern": "^[0-9a-f]{32}$",
                "readOnly": true,
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencedId": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "88b24cc6dbc341149e11590e33b0e61b",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_line_item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a34f9c33e7534cd488572f1223ef7a66",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/cover",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c2367f9c8c004463bf48a3974a17368b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveryPositions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ba6b93352fe24168b6f9dcc4fc97ea92",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery_position",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/orderDeliveryPositions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefundPositions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "11ac9a063eea480abe70c63c7118723e",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture_refund_position",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/orderTransactionCaptureRefundPositions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "636c4fb862fe4b6aac08f42a24536e7c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_line_item",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "14610314ea0443a78b8440a6a2d3f2e6",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotion": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b51b1005c7894fafa5dfac92b4996b60",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-line-item/21e1701792b34834866b890b454e6170/promotion",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "removable": {
                "type": "boolean"
              },
              "stackable": {
                "type": "boolean"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "orderId",
              "identifier",
              "quantity",
              "label",
              "position",
              "price",
              "children",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "OrderTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["orderId", "tagId"],
        "type": "object"
      },
      "OrderTransaction": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "amount": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "captures": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/Order"
          },
          "orderId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "paymentMethodId",
          "amount",
          "stateId",
          "createdAt"
        ],
        "type": "object"
      },
      "OrderTransactionCapture": {
        "description": "Added since version: 6.4.12.0",
        "properties": {
          "amount": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "externalReference": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderTransactionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderTransactionVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "refunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "stateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "format": "float",
            "type": "number"
          },
          "transaction": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["orderTransactionId", "stateId", "amount", "createdAt"],
        "type": "object"
      },
      "OrderTransactionCaptureJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "amount": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "externalReference": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderTransactionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderTransactionVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "refunds": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4901f74f6420436ba0228751eb03e7ab",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture_refund",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture/7c20a162d6c34ec2bf56c750827796ad/refunds",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "53533f1222494226bf5508c7f1331737",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture/7c20a162d6c34ec2bf56c750827796ad/stateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "transaction": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "853b305cb88e42b2a897a31c2edb3f89",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_transaction",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture/7c20a162d6c34ec2bf56c750827796ad/transaction",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "totalAmount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "format": "float",
                "type": "number"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "orderTransactionId",
              "stateId",
              "amount",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.12.0"
      },
      "OrderTransactionCaptureRefund": {
        "description": "Added since version: 6.4.12.0",
        "properties": {
          "amount": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "captureId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "externalReference": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "positions": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
          },
          "reason": {
            "type": "string"
          },
          "stateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "totalAmount": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "format": "float",
            "type": "number"
          },
          "transactionCapture": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["captureId", "stateId", "amount", "createdAt"],
        "type": "object"
      },
      "OrderTransactionCaptureRefundJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "amount": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "captureId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "externalReference": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "positions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "fa6cf9e303434c0db2bd2848e335ce1b",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture_refund_position",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture-refund/babe694ce5154bf0b404bd336acd9dff/positions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9a073661423d4388b6abe58f9ebf1096",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture-refund/babe694ce5154bf0b404bd336acd9dff/stateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "transactionCapture": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a1fe38bf14314aaeb0923c16f13ea7cd",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_transaction_capture",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture-refund/babe694ce5154bf0b404bd336acd9dff/transactionCapture",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "totalAmount": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "format": "float",
                "type": "number"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["captureId", "stateId", "amount", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.12.0"
      },
      "OrderTransactionCaptureRefundPosition": {
        "description": "Added since version: 6.4.12.0",
        "properties": {
          "amount": {
            "properties": {
              "calculatedTaxes": {
                "type": "object"
              },
              "listPrice": {
                "properties": {
                  "discount": {
                    "format": "float",
                    "type": "number"
                  },
                  "percentage": {
                    "format": "float",
                    "type": "number"
                  },
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "referencePrice": {
                "type": "object"
              },
              "regulationPrice": {
                "properties": {
                  "price": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "taxRules": {
                "type": "object"
              },
              "totalPrice": {
                "format": "float",
                "type": "number"
              },
              "unitPrice": {
                "format": "float",
                "type": "number"
              }
            },
            "required": ["unitPrice", "totalPrice", "quantity"],
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "externalReference": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderLineItem": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderLineItemId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderLineItemVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "orderTransactionCaptureRefund": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "quantity": {
            "format": "int64",
            "type": "integer"
          },
          "reason": {
            "type": "string"
          },
          "refundId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "refundPrice": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "format": "float",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["refundId", "orderLineItemId", "amount", "createdAt"],
        "type": "object"
      },
      "OrderTransactionCaptureRefundPositionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "amount": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "externalReference": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderLineItemId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderLineItemVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "quantity": {
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "type": "string"
              },
              "refundId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "refundPrice": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "format": "float",
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "orderLineItem": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "09d5b48375b04ecc9989484ae10b6cec",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_line_item",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture-refund-position/72bf9a13704f403db5698f6283197f5b/orderLineItem",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefund": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9a5b52a3dcba4db08944a79e9a29f165",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order_transaction_capture_refund",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction-capture-refund-position/72bf9a13704f403db5698f6283197f5b/orderTransactionCaptureRefund",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["refundId", "orderLineItemId", "amount", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.12.0"
      },
      "OrderTransactionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "amount": {
                "properties": {
                  "calculatedTaxes": {
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "discount": {
                        "format": "float",
                        "type": "number"
                      },
                      "percentage": {
                        "format": "float",
                        "type": "number"
                      },
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "quantity": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "referencePrice": {
                    "type": "object"
                  },
                  "regulationPrice": {
                    "properties": {
                      "price": {
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "taxRules": {
                    "type": "object"
                  },
                  "totalPrice": {
                    "format": "float",
                    "type": "number"
                  },
                  "unitPrice": {
                    "format": "float",
                    "type": "number"
                  }
                },
                "required": ["unitPrice", "totalPrice", "quantity"],
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "orderVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "paymentMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "captures": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b2a220456cbc48569bdf6d8db1207f97",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction/7f7f66f6f9594f049c06377c6f75c57c/captures",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "15c313c3ee3c430eb74a35849af9cfad",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "order",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction/7f7f66f6f9594f049c06377c6f75c57c/order",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5c8464760bca44b4961c972aac17f00c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction/7f7f66f6f9594f049c06377c6f75c57c/paymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "78f488a42269448b9c9d5ebd8c636ac8",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/order-transaction/7f7f66f6f9594f049c06377c6f75c57c/stateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "orderId",
              "paymentMethodId",
              "amount",
              "stateId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "afterOrderEnabled": {
            "type": "boolean"
          },
          "appPaymentMethod": {
            "$ref": "#/components/schemas/AppPaymentMethod"
          },
          "asynchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "boolean"
          },
          "availabilityRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "availabilityRuleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "description": {
            "type": "string"
          },
          "distinguishableName": {
            "readOnly": true,
            "type": "string"
          },
          "formattedHandlerIdentifier": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "string"
          },
          "handlerIdentifier": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "plugin": {
            "$ref": "#/components/schemas/Plugin"
          },
          "pluginId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "prepared": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "boolean"
          },
          "refundable": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "boolean"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "synchronous": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "boolean"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "PaymentMethodJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "afterOrderEnabled": {
                "type": "boolean"
              },
              "asynchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "boolean"
              },
              "availabilityRuleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "distinguishableName": {
                "readOnly": true,
                "type": "string"
              },
              "formattedHandlerIdentifier": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "string"
              },
              "handlerIdentifier": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "pluginId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "prepared": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "boolean"
              },
              "refundable": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "appPaymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4cf4f094301c4592b67c0ab7fda56a2e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app_payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/appPaymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "availabilityRule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "3fdb2a76eac54df28ab96d46280667b9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/availabilityRule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0ccb7b2491874cf48c10662bbf474512",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "61797a32eea24ddfb1ea477c2041013e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "04852d67ef544c08bf931878b1c0f3d8",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/orderTransactions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "plugin": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f38889f3fd184673b37ccf4fc4535b66",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "plugin",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/plugin",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f24f2e6ee2c64a79bead5e19f6ebce49",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/salesChannelDefaultAssignments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cd9316c329cb42d4a8e98ab695a15838",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/payment-method/a3711e6953c6420f927e58579a92f9f8/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "synchronous": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "boolean"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Plugin": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "autoload": {
            "type": "object"
          },
          "baseClass": {
            "type": "string"
          },
          "changelog": {
            "type": "object"
          },
          "composerName": {
            "type": "string"
          },
          "copyright": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "installedAt": {
            "format": "date-time",
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "license": {
            "type": "string"
          },
          "managedByComposer": {
            "type": "boolean"
          },
          "manufacturerLink": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "supportLink": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "upgradeVersion": {
            "type": "string"
          },
          "upgradedAt": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "baseClass",
          "name",
          "autoload",
          "version",
          "createdAt",
          "label"
        ],
        "type": "object"
      },
      "PluginJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "author": {
                "type": "string"
              },
              "autoload": {
                "type": "object"
              },
              "baseClass": {
                "type": "string"
              },
              "changelog": {
                "type": "object"
              },
              "composerName": {
                "type": "string"
              },
              "copyright": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "icon": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "installedAt": {
                "format": "date-time",
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "license": {
                "type": "string"
              },
              "managedByComposer": {
                "type": "boolean"
              },
              "manufacturerLink": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "paymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7c2ba222116c4e1fbb87b3aea485cd5e",
                              "type": "string"
                            },
                            "type": {
                              "example": "payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/plugin/b05f6f1bc5da4bbf820ef873b1e92b09/paymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "supportLink": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "upgradeVersion": {
                "type": "string"
              },
              "upgradedAt": {
                "format": "date-time",
                "type": "string"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "baseClass",
              "name",
              "autoload",
              "version",
              "createdAt",
              "label"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Product": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "autoIncrement": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "available": {
            "readOnly": true,
            "type": "boolean"
          },
          "availableStock": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "canonicalProduct": {
            "$ref": "#/components/schemas/Product"
          },
          "canonicalProductId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "categoriesRo": {
            "$ref": "#/components/schemas/Category"
          },
          "categoryIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "categoryTree": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "cheapestPrice": {
            "readOnly": true,
            "type": "object"
          },
          "childCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "children": {
            "$ref": "#/components/schemas/Product"
          },
          "cmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "cmsPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "cmsPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "configuratorGroupConfig": {
            "deprecated": true,
            "type": "object"
          },
          "configuratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "cover": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "coverId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "crossSellingAssignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          },
          "crossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "customFieldSetSelectionActive": {
            "type": "boolean"
          },
          "customFieldSets": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "customFields": {
            "type": "object"
          },
          "customSearchKeywords": {
            "items": {
              "additionalProperties": false
            },
            "type": "array"
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "deliveryTimeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayGroup": {
            "readOnly": true,
            "type": "string"
          },
          "displayParent": {
            "deprecated": true,
            "type": "boolean"
          },
          "ean": {
            "type": "string"
          },
          "featureSet": {
            "$ref": "#/components/schemas/ProductFeatureSet"
          },
          "featureSetId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "height": {
            "format": "float",
            "type": "number"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "isCloseout": {
            "type": "boolean"
          },
          "keywords": {
            "type": "string"
          },
          "length": {
            "format": "float",
            "type": "number"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "mainVariantId": {
            "deprecated": true,
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "manufacturer": {
            "$ref": "#/components/schemas/ProductManufacturer"
          },
          "manufacturerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "manufacturerNumber": {
            "type": "string"
          },
          "markAsTopseller": {
            "type": "boolean"
          },
          "maxPurchase": {
            "format": "int64",
            "type": "integer"
          },
          "media": {
            "$ref": "#/components/schemas/ProductMedia"
          },
          "metaDescription": {
            "type": "string"
          },
          "metaTitle": {
            "type": "string"
          },
          "minPurchase": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "optionIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "packUnit": {
            "type": "string"
          },
          "packUnitPlural": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Product"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parentVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "price": {
            "type": "object"
          },
          "prices": {
            "$ref": "#/components/schemas/ProductPrice"
          },
          "productManufacturerVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productMediaVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productNumber": {
            "type": "string"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "properties": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "propertyIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "purchasePrices": {
            "type": "object"
          },
          "purchaseSteps": {
            "format": "int64",
            "type": "integer"
          },
          "purchaseUnit": {
            "format": "float",
            "type": "number"
          },
          "ratingAverage": {
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "referenceUnit": {
            "format": "float",
            "type": "number"
          },
          "releaseDate": {
            "format": "date-time",
            "type": "string"
          },
          "restockTime": {
            "format": "int64",
            "type": "integer"
          },
          "sales": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "searchKeywords": {
            "$ref": "#/components/schemas/ProductSearchKeyword"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "shippingFree": {
            "type": "boolean"
          },
          "slotConfig": {
            "type": "object"
          },
          "stock": {
            "format": "int64",
            "type": "integer"
          },
          "streamIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "streams": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "tagIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "taxId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit"
          },
          "unitId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "variantListingConfig": {
            "type": "object"
          },
          "variantRestrictions": {
            "type": "object"
          },
          "variation": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "visibilities": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "weight": {
            "format": "float",
            "type": "number"
          },
          "width": {
            "format": "float",
            "type": "number"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlistProduct"
          }
        },
        "required": [
          "taxId",
          "price",
          "productNumber",
          "stock",
          "createdAt",
          "name"
        ],
        "type": "object"
      },
      "ProductCategory": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "categoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "categoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "categoryId"],
        "type": "object"
      },
      "ProductCategoryTree": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "categoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "categoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "categoryId"],
        "type": "object"
      },
      "ProductConfiguratorSetting": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "optionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "price": {
            "type": "object"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "optionId", "createdAt"],
        "type": "object"
      },
      "ProductConfiguratorSettingJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "optionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "price": {
                "type": "object"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "15e71a05e45d472d9c74607f8887aaff",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-configurator-setting/3304ea63f2f84a25b3b4b8cf71cfa9be/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "option": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f1b62164663b4e0f8bdf1bcd2f2aa2c9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "property_group_option",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-configurator-setting/3304ea63f2f84a25b3b4b8cf71cfa9be/option",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0d50ba8791664d17bae323d931259637",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-configurator-setting/3304ea63f2f84a25b3b4b8cf71cfa9be/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["productId", "optionId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductCrossSelling": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "assignedProducts": {
            "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "limit": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "productStreamId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "sortBy": {
            "type": "string"
          },
          "sortDirection": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "position", "type", "productId", "createdAt"],
        "type": "object"
      },
      "ProductCrossSellingAssignedProducts": {
        "description": "Added since version: 6.2.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "crossSelling": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "crossSellingId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["crossSellingId", "productId", "createdAt"],
        "type": "object"
      },
      "ProductCrossSellingAssignedProductsJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "crossSellingId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "crossSelling": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9eb285b4b0d54de88e701b12a88f1fb2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_cross_selling",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-cross-selling-assigned-products/0df3a764394c4492ba7f1ea8f340b8c1/crossSelling",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "50fed0a7bb4541bdbcb8dad392ea27bb",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-cross-selling-assigned-products/0df3a764394c4492ba7f1ea8f340b8c1/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["crossSellingId", "productId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.2.0.0"
      },
      "ProductCrossSellingJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "limit": {
                "format": "int64",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productStreamId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "assignedProducts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9b9819927a804a30b5531696054bd864",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_cross_selling_assigned_products",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-cross-selling/e509b288396641feb41b9d3827518c86/assignedProducts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5c9bfab65ca447c5849e955c8f515552",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-cross-selling/e509b288396641feb41b9d3827518c86/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "26b7a42502f1470181e0f5e60b09c059",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_stream",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-cross-selling/e509b288396641feb41b9d3827518c86/productStream",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sortBy": {
                "type": "string"
              },
              "sortDirection": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "position", "type", "productId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "ProductCustomFieldSet": {
        "description": "Added since version: 6.3.0.0",
        "properties": {
          "customFieldSet": {
            "$ref": "#/components/schemas/CustomFieldSet"
          },
          "customFieldSetId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "customFieldSetId"],
        "type": "object"
      },
      "ProductExport": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "bodyTemplate": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "encoding": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "footerTemplate": {
            "type": "string"
          },
          "generateByCronjob": {
            "type": "boolean"
          },
          "generatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "headerTemplate": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "includeVariants": {
            "type": "boolean"
          },
          "interval": {
            "format": "int64",
            "type": "integer"
          },
          "isRunning": {
            "type": "boolean"
          },
          "pausedSchedule": {
            "type": "boolean"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "productStreamId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "salesChannelDomainId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "storefrontSalesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "storefrontSalesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "productStreamId",
          "storefrontSalesChannelId",
          "salesChannelId",
          "salesChannelDomainId",
          "currencyId",
          "fileName",
          "accessKey",
          "encoding",
          "fileFormat",
          "generateByCronjob",
          "interval",
          "createdAt"
        ],
        "type": "object"
      },
      "ProductExportJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "bodyTemplate": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "encoding": {
                "type": "string"
              },
              "fileFormat": {
                "type": "string"
              },
              "fileName": {
                "type": "string"
              },
              "footerTemplate": {
                "type": "string"
              },
              "generateByCronjob": {
                "type": "boolean"
              },
              "generatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "headerTemplate": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "includeVariants": {
                "type": "boolean"
              },
              "interval": {
                "format": "int64",
                "type": "integer"
              },
              "isRunning": {
                "type": "boolean"
              },
              "pausedSchedule": {
                "type": "boolean"
              },
              "productStreamId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e59cff6a54b04f508399b06b436d7e3d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-export/6eabb196d34e45ba8123bdf7952f88b4/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4409ac0f7a1d4e6390616cf75e170642",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_stream",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-export/6eabb196d34e45ba8123bdf7952f88b4/productStream",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a4e022a7c64f4b6db382f46f4f49ad30",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-export/6eabb196d34e45ba8123bdf7952f88b4/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDomain": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a49359e05c764ac9ac222ff74ab4b03b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel_domain",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-export/6eabb196d34e45ba8123bdf7952f88b4/salesChannelDomain",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "storefrontSalesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "afc1d37063ce4df8ac66dd595b908b41",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-export/6eabb196d34e45ba8123bdf7952f88b4/storefrontSalesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelDomainId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "storefrontSalesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "productStreamId",
              "storefrontSalesChannelId",
              "salesChannelId",
              "salesChannelDomainId",
              "currencyId",
              "fileName",
              "accessKey",
              "encoding",
              "fileFormat",
              "generateByCronjob",
              "interval",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "ProductFeatureSet": {
        "description": "Added since version: 6.3.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "features": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "ProductFeatureSetJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "features": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d7065f5bec354017854736013475b97a",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-feature-set/bfd99aab2a41403ea8c3b96f974d59d4/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.0.0"
      },
      "ProductJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "autoIncrement": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "available": {
                "readOnly": true,
                "type": "boolean"
              },
              "availableStock": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "canonicalProductId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "categoryIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "categoryTree": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "cheapestPrice": {
                "readOnly": true,
                "type": "object"
              },
              "childCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "cmsPageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "cmsPageVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "configuratorGroupConfig": {
                "deprecated": true,
                "type": "object"
              },
              "coverId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFieldSetSelectionActive": {
                "type": "boolean"
              },
              "customFields": {
                "type": "object"
              },
              "customSearchKeywords": {
                "items": {
                  "additionalProperties": false
                },
                "type": "array"
              },
              "deliveryTimeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "displayGroup": {
                "readOnly": true,
                "type": "string"
              },
              "displayParent": {
                "deprecated": true,
                "type": "boolean"
              },
              "ean": {
                "type": "string"
              },
              "featureSetId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "height": {
                "format": "float",
                "type": "number"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "isCloseout": {
                "type": "boolean"
              },
              "keywords": {
                "type": "string"
              },
              "length": {
                "format": "float",
                "type": "number"
              },
              "mainVariantId": {
                "deprecated": true,
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "manufacturerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "manufacturerNumber": {
                "type": "string"
              },
              "markAsTopseller": {
                "type": "boolean"
              },
              "maxPurchase": {
                "format": "int64",
                "type": "integer"
              },
              "metaDescription": {
                "type": "string"
              },
              "metaTitle": {
                "type": "string"
              },
              "minPurchase": {
                "format": "int64",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "optionIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "packUnit": {
                "type": "string"
              },
              "packUnitPlural": {
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "price": {
                "type": "object"
              },
              "productManufacturerVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productMediaVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productNumber": {
                "type": "string"
              },
              "propertyIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "purchasePrices": {
                "type": "object"
              },
              "purchaseSteps": {
                "format": "int64",
                "type": "integer"
              },
              "purchaseUnit": {
                "format": "float",
                "type": "number"
              },
              "ratingAverage": {
                "format": "float",
                "readOnly": true,
                "type": "number"
              },
              "referenceUnit": {
                "format": "float",
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "canonicalProduct": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5db7ec94ec934370b4894e63a4844258",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/canonicalProduct",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1fa8c03eed8846e0a59c074870aab74d",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/categories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "categoriesRo": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7ed550ded97945c88810a378767a7c7f",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/categoriesRo",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1dd0f24c136e42178839bc43cb65aa7f",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cmsPage": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b8d978d81b444910b5461a623e8c923c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_page",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/cmsPage",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "configuratorSettings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1d1bcdd4f1244d0998410f6e1fac3f85",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_configurator_setting",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/configuratorSettings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cover": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4e55f675cfb942f7a55f0bff6f2a6cca",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/cover",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "crossSellingAssignedProducts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8416e92ed52d4d5cacf79a3461435518",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_cross_selling_assigned_products",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/crossSellingAssignedProducts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "crossSellings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8e3f9340f4824a459a5fd74ada32f372",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_cross_selling",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/crossSellings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customFieldSets": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c7b210f2eac84fdea5413f4df1b8460f",
                              "type": "string"
                            },
                            "type": {
                              "example": "custom_field_set",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/customFieldSets",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0200f6536c074671beb79dc1338b3d3d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "delivery_time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/deliveryTime",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "featureSet": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4a01e2f33458415bac7f5a38502b5247",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_feature_set",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/featureSet",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f52257ea42c14dd9bbf3d95a8c693830",
                              "type": "string"
                            },
                            "type": {
                              "example": "main_category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/mainCategories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "manufacturer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8ef675f3b2d4468da148b7301be4355f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_manufacturer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/manufacturer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "177b3aa1d6834fd6b86212e99876145d",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "options": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "547758ee097b4aaab3c4ce75375cb96f",
                              "type": "string"
                            },
                            "type": {
                              "example": "property_group_option",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/options",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "11f09fb968b94e0fbfc9e22902fc60ed",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_line_item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/orderLineItems",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "86cb6cd04ccb49ab87e84e9e7f923352",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6acc918deb294bb4972c3be3b6a77b88",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_price",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/prices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "de4e058cf8444dbda309d836a553533e",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_review",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/productReviews",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "properties": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "dc8c43f0565f4d01831e33b6661d5777",
                              "type": "string"
                            },
                            "type": {
                              "example": "property_group_option",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/properties",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "searchKeywords": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d78f68968d6d466a92d138ef428db3f7",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_search_keyword",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/searchKeywords",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7a0d1401c937478e960da7a812f83b91",
                              "type": "string"
                            },
                            "type": {
                              "example": "seo_url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/seoUrls",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "streams": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e1dba3bcebdd42f9b8fa514c41fabadc",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_stream",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/streams",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "99dc98dbd4994fffa61fd4901bf45d70",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "a0927bc2e5c34ee8b652a78a26558bc9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "tax",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/tax",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "unit": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "321d6cc6fd5247c985ee2ba300eb130c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "unit",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/unit",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "visibilities": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8353fdce52264a878a62858663aa627e",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_visibility",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/visibilities",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b0297e64e66e448f8c5c437cb3f2cdd4",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_wishlist_product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product/c93295af10da4c30ba3842e5ab69dd60/wishlists",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "releaseDate": {
                "format": "date-time",
                "type": "string"
              },
              "restockTime": {
                "format": "int64",
                "type": "integer"
              },
              "sales": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "shippingFree": {
                "type": "boolean"
              },
              "slotConfig": {
                "type": "object"
              },
              "stock": {
                "format": "int64",
                "type": "integer"
              },
              "streamIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "tagIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "taxId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "unitId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "variantListingConfig": {
                "type": "object"
              },
              "variantRestrictions": {
                "type": "object"
              },
              "variation": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "weight": {
                "format": "float",
                "type": "number"
              },
              "width": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "taxId",
              "price",
              "productNumber",
              "stock",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductKeywordDictionary": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "keyword": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "reversed": {
            "type": "string"
          }
        },
        "required": ["languageId", "keyword"],
        "type": "object"
      },
      "ProductKeywordDictionaryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "keyword": {
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f5bd7db38dec4451b08d930122799c5e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-keyword-dictionary/19380b1e00994219a3d0146b7c808f8d/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "reversed": {
                "type": "string"
              }
            },
            "required": ["languageId", "keyword"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductManufacturer": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "ProductManufacturerJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "dd956bc9e0e144a3ac11da99789c6755",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-manufacturer/b46b97e13a6d405689935b1c833e1b34/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "00a172c910f142d489b23271740498d9",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-manufacturer/b46b97e13a6d405689935b1c833e1b34/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductMedia": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "coverProducts": {
            "$ref": "#/components/schemas/Product"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "mediaId", "createdAt"],
        "type": "object"
      },
      "ProductMediaJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "coverProducts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f3b2485699244f4490a1c694caa621e7",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-media/c96f9c06b4d8470f9f0c010fa35375f4/coverProducts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "05986d5111544cae9c67f66cf67a57da",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-media/c96f9c06b4d8470f9f0c010fa35375f4/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "24e537bfaa814cc7aa53e2270832e4b7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-media/c96f9c06b4d8470f9f0c010fa35375f4/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["productId", "mediaId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductOption": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "optionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "optionId"],
        "type": "object"
      },
      "ProductPrice": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "price": {
            "type": "object"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "quantityEnd": {
            "format": "int64",
            "type": "integer"
          },
          "quantityStart": {
            "format": "int64",
            "type": "integer"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "productId",
          "ruleId",
          "price",
          "quantityStart",
          "createdAt"
        ],
        "type": "object"
      },
      "ProductPriceJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "price": {
                "type": "object"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "quantityEnd": {
                "format": "int64",
                "type": "integer"
              },
              "quantityStart": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8d801611fc8c4c259194cb4d3b534a6f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-price/598e7057cd2745338a9dd7a282b67743/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "96c6ca42a5564c1e8574ad58e058c26e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-price/598e7057cd2745338a9dd7a282b67743/rule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "ruleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "productId",
              "ruleId",
              "price",
              "quantityStart",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductProperty": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "option": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "optionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "optionId"],
        "type": "object"
      },
      "ProductReview": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "comment": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "externalEmail": {
            "type": "string"
          },
          "externalUser": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "points": {
            "format": "float",
            "type": "number"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "productId",
          "salesChannelId",
          "languageId",
          "title",
          "content",
          "createdAt"
        ],
        "type": "object"
      },
      "ProductReviewJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "comment": {
                "type": "string"
              },
              "content": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "externalEmail": {
                "type": "string"
              },
              "externalUser": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "points": {
                "format": "float",
                "type": "number"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customer": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "cde3eb37cbbe4291acdab16ffa98852b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-review/e467aa08d6e94d429db7c93b5045116b/customer",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "725b12121b7946cf98b4c2715b2c8404",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-review/e467aa08d6e94d429db7c93b5045116b/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8f0b57e81db74788a0993d8cc4bc84e8",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-review/e467aa08d6e94d429db7c93b5045116b/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "26175cbcd69d4aa598f254a13754221b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-review/e467aa08d6e94d429db7c93b5045116b/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "status": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "productId",
              "salesChannelId",
              "languageId",
              "title",
              "content",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductSearchConfig": {
        "description": "Added since version: 6.3.5.0",
        "properties": {
          "andLogic": {
            "type": "boolean"
          },
          "configFields": {
            "$ref": "#/components/schemas/ProductSearchConfigField"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "excludedTerms": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "minSearchLength": {
            "format": "int64",
            "type": "integer"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["languageId", "andLogic", "minSearchLength", "createdAt"],
        "type": "object"
      },
      "ProductSearchConfigField": {
        "description": "Added since version: 6.3.5.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customField": {
            "$ref": "#/components/schemas/CustomField"
          },
          "customFieldId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "ranking": {
            "format": "int64",
            "type": "integer"
          },
          "searchConfig": {
            "$ref": "#/components/schemas/ProductSearchConfig"
          },
          "searchConfigId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "searchable": {
            "type": "boolean"
          },
          "tokenize": {
            "type": "boolean"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "searchConfigId",
          "field",
          "tokenize",
          "searchable",
          "ranking",
          "createdAt"
        ],
        "type": "object"
      },
      "ProductSearchConfigFieldJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFieldId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "field": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "ranking": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "customField": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "88237d4c9080439a9382131e944cb0fe",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "custom_field",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-config-field/5537895aad174f49b7efb0ff05ef276b/customField",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "searchConfig": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "787f1c09964a4166938e8bedc36d95e1",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_search_config",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-config-field/5537895aad174f49b7efb0ff05ef276b/searchConfig",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "searchConfigId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "searchable": {
                "type": "boolean"
              },
              "tokenize": {
                "type": "boolean"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "searchConfigId",
              "field",
              "tokenize",
              "searchable",
              "ranking",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.5.0"
      },
      "ProductSearchConfigJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "andLogic": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "excludedTerms": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "minSearchLength": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "configFields": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "573b2fbd25ad4da2a998177e1fe99393",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_search_config_field",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-config/d22d00ba14dc42d7bc04c6954bc1b72b/configFields",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "46a5ddd1777d4e91a7990e2df2da4ed0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-config/d22d00ba14dc42d7bc04c6954bc1b72b/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "languageId",
              "andLogic",
              "minSearchLength",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.5.0"
      },
      "ProductSearchKeyword": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "keyword": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "ranking": {
            "format": "float",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "versionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "languageId",
          "productId",
          "keyword",
          "ranking",
          "createdAt"
        ],
        "type": "object"
      },
      "ProductSearchKeywordJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "keyword": {
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "ranking": {
                "format": "float",
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e2b3684c368541e196a8c0c60362a5d7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-keyword/d52ac5f7b9ce4eec8260061c18d8ec93/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5ecbd7c7705d4bc3a715d092b47edebd",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-search-keyword/d52ac5f7b9ce4eec8260061c18d8ec93/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "versionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "languageId",
              "productId",
              "keyword",
              "ranking",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductSorting": {
        "description": "Added since version: 6.3.2.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "fields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "priority": {
            "format": "int64",
            "type": "integer"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "key",
          "priority",
          "active",
          "fields",
          "createdAt",
          "label"
        ],
        "type": "object"
      },
      "ProductSortingJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "fields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "locked": {
                "type": "boolean"
              },
              "priority": {
                "format": "int64",
                "type": "integer"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "key",
              "priority",
              "active",
              "fields",
              "createdAt",
              "label"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.2.0"
      },
      "ProductStream": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "apiFilter": {
            "readOnly": true,
            "type": "object"
          },
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "invalid": {
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "productCrossSellings": {
            "$ref": "#/components/schemas/ProductCrossSelling"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "ProductStreamFilter": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "field": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "parameters": {
            "type": "object"
          },
          "parent": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "productStreamId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "queries": {
            "$ref": "#/components/schemas/ProductStreamFilter"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["productStreamId", "type", "createdAt"],
        "type": "object"
      },
      "ProductStreamFilterJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "field": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "operator": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "productStreamId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7236e5776329465caee758614fa29f5c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_stream_filter",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream-filter/eb4a0d5f733b4bddbbb055340081c200/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productStream": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c8ba6c5cd8a14c5ab18ef713482f2d0b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product_stream",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream-filter/eb4a0d5f733b4bddbbb055340081c200/productStream",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "queries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "332724fab594447d893a23ded60c7854",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_stream_filter",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream-filter/eb4a0d5f733b4bddbbb055340081c200/queries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": ["productStreamId", "type", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductStreamJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "apiFilter": {
                "readOnly": true,
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "invalid": {
                "readOnly": true,
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7a3c30ee19824e388fe81f9c389d259e",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream/e20a5e73dbf545d2a69fdba07c7a4c50/categories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "filters": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4d8d52bf3a6d451c9bc83676275a8bca",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_stream_filter",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream/e20a5e73dbf545d2a69fdba07c7a4c50/filters",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productCrossSellings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "90cec535a39341b9a3b4057fbdd52237",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_cross_selling",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream/e20a5e73dbf545d2a69fdba07c7a4c50/productCrossSellings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4e49d6530e614c73bf382231d2256a8f",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_export",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-stream/e20a5e73dbf545d2a69fdba07c7a4c50/productExports",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ProductStreamMapping": {
        "description": "Added since version: 6.4.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productStream": {
            "$ref": "#/components/schemas/ProductStream"
          },
          "productStreamId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "productStreamId"],
        "type": "object"
      },
      "ProductTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["productId", "tagId"],
        "type": "object"
      },
      "ProductVisibility": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "visibility": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["productId", "salesChannelId", "visibility", "createdAt"],
        "type": "object"
      },
      "ProductVisibilityJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "productVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "product": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "139b98e8c965411291627577fc928822",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "product",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-visibility/7ac45ca2bc414ffe99fc6c38bddf34b8/product",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4e7ec9fdb28a4914bf19c9ea39ca1dfb",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/product-visibility/7ac45ca2bc414ffe99fc6c38bddf34b8/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "visibility": {
                "format": "int64",
                "type": "integer"
              }
            },
            "required": [
              "productId",
              "salesChannelId",
              "visibility",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Promotion": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "cartRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "code": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerRestriction": {
            "type": "boolean"
          },
          "discounts": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "exclusionIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "type": "array"
          },
          "exclusive": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "individualCodePattern": {
            "type": "string"
          },
          "individualCodes": {
            "$ref": "#/components/schemas/PromotionIndividualCode"
          },
          "maxRedemptionsGlobal": {
            "format": "int64",
            "type": "integer"
          },
          "maxRedemptionsPerCustomer": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "orderCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "orderLineItems": {
            "$ref": "#/components/schemas/OrderLineItem"
          },
          "orderRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "ordersPerCustomerCount": {
            "readOnly": true,
            "type": "object"
          },
          "personaCustomers": {
            "$ref": "#/components/schemas/Customer"
          },
          "personaRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "preventCombination": {
            "type": "boolean"
          },
          "priority": {
            "format": "int64",
            "type": "integer"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "setgroups": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "useCodes": {
            "type": "boolean"
          },
          "useIndividualCodes": {
            "type": "boolean"
          },
          "useSetGroups": {
            "type": "boolean"
          },
          "validFrom": {
            "format": "date-time",
            "type": "string"
          },
          "validUntil": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "active",
          "priority",
          "exclusive",
          "useCodes",
          "useIndividualCodes",
          "useSetGroups",
          "preventCombination",
          "createdAt",
          "name"
        ],
        "type": "object"
      },
      "PromotionCartRule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["promotionId", "ruleId"],
        "type": "object"
      },
      "PromotionDiscount": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "applierKey": {
            "type": "string"
          },
          "considerAdvancedRules": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "discountRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "maxValue": {
            "format": "float",
            "type": "number"
          },
          "pickerKey": {
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionDiscountPrices": {
            "$ref": "#/components/schemas/PromotionDiscountPrices"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "sorterKey": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageKey": {
            "type": "string"
          },
          "value": {
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "promotionId",
          "scope",
          "type",
          "value",
          "considerAdvancedRules",
          "createdAt"
        ],
        "type": "object"
      },
      "PromotionDiscountJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "applierKey": {
                "type": "string"
              },
              "considerAdvancedRules": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "maxValue": {
                "format": "float",
                "type": "number"
              },
              "pickerKey": {
                "type": "string"
              },
              "promotionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "discountRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c78fab2516a04a9ba154c57e6db28916",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-discount/45a1877703e74648abfb81c8f06ec8f4/discountRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotion": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b18a04a933b84b05b0b456e002bd6e22",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-discount/45a1877703e74648abfb81c8f06ec8f4/promotion",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscountPrices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6dfd30a9c89a43699ca574b63d930216",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_discount_prices",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-discount/45a1877703e74648abfb81c8f06ec8f4/promotionDiscountPrices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "scope": {
                "type": "string"
              },
              "sorterKey": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "usageKey": {
                "type": "string"
              },
              "value": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "promotionId",
              "scope",
              "type",
              "value",
              "considerAdvancedRules",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionDiscountPrices": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "discountId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "price": {
            "format": "float",
            "type": "number"
          },
          "promotionDiscount": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["discountId", "currencyId", "price", "createdAt"],
        "type": "object"
      },
      "PromotionDiscountPricesJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "discountId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "price": {
                "format": "float",
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2a9be61442084cdb95552e988cba43e3",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-discount-prices/50f56e1da2334000bc061d5d5dfb514e/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscount": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "dba77a74135142afaac72460319f859a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion_discount",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-discount-prices/50f56e1da2334000bc061d5d5dfb514e/promotionDiscount",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["discountId", "currencyId", "price", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionDiscountRule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "discount": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "discountId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["discountId", "ruleId"],
        "type": "object"
      },
      "PromotionIndividualCode": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "code": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["promotionId", "code", "createdAt"],
        "type": "object"
      },
      "PromotionIndividualCodeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "code": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "payload": {
                "type": "object"
              },
              "promotionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b16b2148af3e4f339320bbe1675012e5",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-individual-code/77ac09e199ce4e71a355d21d5a7d7a55/promotion",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["promotionId", "code", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "code": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerRestriction": {
                "type": "boolean"
              },
              "exclusionIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "type": "array"
              },
              "exclusive": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "individualCodePattern": {
                "type": "string"
              },
              "maxRedemptionsGlobal": {
                "format": "int64",
                "type": "integer"
              },
              "maxRedemptionsPerCustomer": {
                "format": "int64",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "orderCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "ordersPerCustomerCount": {
                "readOnly": true,
                "type": "object"
              },
              "preventCombination": {
                "type": "boolean"
              },
              "priority": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "cartRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a3a65254017b4c55b16353bc9de666bb",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/cartRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "discounts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "2e9a41c8641441b3b91ec007a949e267",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_discount",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/discounts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "individualCodes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4dc693244a394ed8a4dd15476d418af3",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_individual_code",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/individualCodes",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderLineItems": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d07224d7173e4bcb9e0424c9180fe15f",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_line_item",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/orderLineItems",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "71d30ca6606c41a09328d4fae535f08a",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/orderRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "personaCustomers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e62bd518788f40f393f78a914fe4d3a7",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/personaCustomers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "personaRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e85a24c81ef747bab9e4d607165f57ad",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/personaRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a0742414e10642a59de6dfb93b541c77",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "setgroups": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "21fb9a5b15f64909853e992b66bb771f",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_setgroup",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion/11c6264184f64d9eb3e7e42b0bca2ac8/setgroups",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "useCodes": {
                "type": "boolean"
              },
              "useIndividualCodes": {
                "type": "boolean"
              },
              "useSetGroups": {
                "type": "boolean"
              },
              "validFrom": {
                "format": "date-time",
                "type": "string"
              },
              "validUntil": {
                "format": "date-time",
                "type": "string"
              }
            },
            "required": [
              "active",
              "priority",
              "exclusive",
              "useCodes",
              "useIndividualCodes",
              "useSetGroups",
              "preventCombination",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionOrderRule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["promotionId", "ruleId"],
        "type": "object"
      },
      "PromotionPersonaCustomer": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["promotionId", "customerId"],
        "type": "object"
      },
      "PromotionPersonaRule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["promotionId", "ruleId"],
        "type": "object"
      },
      "PromotionSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "priority": {
            "format": "int64",
            "type": "integer"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["promotionId", "salesChannelId", "priority", "createdAt"],
        "type": "object"
      },
      "PromotionSalesChannelJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "priority": {
                "format": "int64",
                "type": "integer"
              },
              "promotionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "946e1c484c48428994344a25c93d7291",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-sales-channel/f7057fdff4c14e1c811e3e6b7e8ea670/promotion",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "82144fd229b94b52b4cc2694e98fee5c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-sales-channel/f7057fdff4c14e1c811e3e6b7e8ea670/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "promotionId",
              "salesChannelId",
              "priority",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionSetgroup": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "packagerKey": {
            "type": "string"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promotionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "setGroupRules": {
            "$ref": "#/components/schemas/Rule"
          },
          "sorterKey": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "format": "float",
            "type": "number"
          }
        },
        "required": [
          "promotionId",
          "packagerKey",
          "sorterKey",
          "value",
          "createdAt"
        ],
        "type": "object"
      },
      "PromotionSetgroupJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "packagerKey": {
                "type": "string"
              },
              "promotionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "promotion": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b38386d1262e49359399241401f32512",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "promotion",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-setgroup/47ba1e9c31b44127bde732f32447cee7/promotion",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "setGroupRules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cbde7d88576648b5a050cecd29844e6f",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/promotion-setgroup/47ba1e9c31b44127bde732f32447cee7/setGroupRules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sorterKey": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "value": {
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "promotionId",
              "packagerKey",
              "sorterKey",
              "value",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PromotionSetgroupRule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "setgroup": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "setgroupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["setgroupId", "ruleId"],
        "type": "object"
      },
      "PropertyGroup": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "displayType": {
            "type": "string"
          },
          "filterable": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/PropertyGroupOption"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "sortingType": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "visibleOnProductDetailPage": {
            "type": "boolean"
          }
        },
        "required": ["displayType", "sortingType", "createdAt", "name"],
        "type": "object"
      },
      "PropertyGroupJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "displayType": {
                "type": "string"
              },
              "filterable": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "options": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "33fe48b7aa4f4c13a2cf1480b70782d0",
                              "type": "string"
                            },
                            "type": {
                              "example": "property_group_option",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group/36c099b88c5c48caa78f135a83d73cf6/options",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "sortingType": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "visibleOnProductDetailPage": {
                "type": "boolean"
              }
            },
            "required": ["displayType", "sortingType", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "PropertyGroupOption": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "colorHexCode": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "group": {
            "$ref": "#/components/schemas/PropertyGroup"
          },
          "groupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "productConfiguratorSettings": {
            "$ref": "#/components/schemas/ProductConfiguratorSetting"
          },
          "productOptions": {
            "$ref": "#/components/schemas/Product"
          },
          "productProperties": {
            "$ref": "#/components/schemas/Product"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["groupId", "createdAt", "name"],
        "type": "object"
      },
      "PropertyGroupOptionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "colorHexCode": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "groupId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "group": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7f5045e78907479ab17a7a7bd69324ec",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "property_group",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group-option/b35b1b4ed6fa4c3f9f4a16a3cd0d82ab/group",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "77f355e438ac43cba898fa6d00b1cb2f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group-option/b35b1b4ed6fa4c3f9f4a16a3cd0d82ab/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productConfiguratorSettings": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5930b1859e3c40f28a291c7807984854",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_configurator_setting",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group-option/b35b1b4ed6fa4c3f9f4a16a3cd0d82ab/productConfiguratorSettings",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productOptions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3d131d267624438e8cc9ba6104bd6936",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group-option/b35b1b4ed6fa4c3f9f4a16a3cd0d82ab/productOptions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productProperties": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ae4071d74891404d9be623e0565dd504",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/property-group-option/b35b1b4ed6fa4c3f9f4a16a3cd0d82ab/productProperties",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["groupId", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Rule": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "cartPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "conditions": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "eventActions": {
            "$ref": "#/components/schemas/EventAction"
          },
          "flowSequences": {
            "$ref": "#/components/schemas/FlowSequence"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "invalid": {
            "readOnly": true,
            "type": "boolean"
          },
          "moduleTypes": {
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "orderPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "personaPromotions": {
            "$ref": "#/components/schemas/Promotion"
          },
          "priority": {
            "format": "int64",
            "type": "integer"
          },
          "productPrices": {
            "$ref": "#/components/schemas/ProductPrice"
          },
          "promotionDiscounts": {
            "$ref": "#/components/schemas/PromotionDiscount"
          },
          "promotionSetGroups": {
            "$ref": "#/components/schemas/PromotionSetgroup"
          },
          "shippingMethodPriceCalculations": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethodPrices": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "priority", "createdAt"],
        "type": "object"
      },
      "RuleCondition": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "appScriptCondition": {
            "$ref": "#/components/schemas/AppScriptCondition"
          },
          "children": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/RuleCondition"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "scriptId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "required": ["type", "ruleId", "createdAt"],
        "type": "object"
      },
      "RuleConditionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "parentId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "appScriptCondition": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "576c49217b7540bbb908325fbcd84402",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app_script_condition",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule-condition/888fc06706ce4bb49fb3fdd5e94bec8c/appScriptCondition",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f768f1932ea24e7caf3c87bebc397c2f",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule_condition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule-condition/888fc06706ce4bb49fb3fdd5e94bec8c/children",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b35b6415a71e462dacd6a271aa04907a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule_condition",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule-condition/888fc06706ce4bb49fb3fdd5e94bec8c/parent",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b9d9ff8d5b814ca0b6f334c8cfced738",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule-condition/888fc06706ce4bb49fb3fdd5e94bec8c/rule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "ruleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "scriptId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "value": {
                "type": "object"
              }
            },
            "required": ["type", "ruleId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "RuleJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "invalid": {
                "readOnly": true,
                "type": "boolean"
              },
              "moduleTypes": {
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "priority": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "cartPromotions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ae97e7aa1bf04b8884d6cd8e0551e49f",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/cartPromotions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "conditions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5cba83a5517147b9ac987c7329021fa7",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule_condition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/conditions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "eventActions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "91d1faa96d32416bbb71003eb3078a10",
                              "type": "string"
                            },
                            "type": {
                              "example": "event_action",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/eventActions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "flowSequences": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "fb8899b1c5a043209c5a2c584c75c585",
                              "type": "string"
                            },
                            "type": {
                              "example": "flow_sequence",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/flowSequences",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderPromotions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3afe66567c14422cadeec317de5d3773",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/orderPromotions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6f950b26d9bd484fa0718fd890da2cc0",
                              "type": "string"
                            },
                            "type": {
                              "example": "payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/paymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "personaPromotions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "15cc3d851b28453e8cd6379c832a1f8e",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/personaPromotions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productPrices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7e772be06d3f4a53b438b63f3e7df6a3",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_price",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/productPrices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionDiscounts": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "67c869b944054a0eb51fe88057a3e11f",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_discount",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/promotionDiscounts",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionSetGroups": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ea4a47660b3f4eacac0d2f99b7605bfa",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_setgroup",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/promotionSetGroups",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPriceCalculations": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3cecc71b341d4b2d98832c174c072cad",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method_price",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/shippingMethodPriceCalculations",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethodPrices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "190769b449644bf28096ba28a6718e43",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method_price",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/shippingMethodPrices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "303abe98ff154a1b9f566c9d697b6c92",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f436bc60759a46ebaa5e211f42c6eff0",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/rule/7983e6e0b2c84d87901877f3c40b95aa/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "priority", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "RuleTag": {
        "description": "Added since version: 6.5.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["ruleId", "tagId"],
        "type": "object"
      },
      "SalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "analytics": {
            "$ref": "#/components/schemas/SalesChannelAnalytics"
          },
          "analyticsId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "boundCustomers": {
            "$ref": "#/components/schemas/Customer"
          },
          "configuration": {
            "type": "object"
          },
          "countries": {
            "$ref": "#/components/schemas/Country"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currencies": {
            "$ref": "#/components/schemas/Currency"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerGroup": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "customerGroupId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "customerGroupsRegistrations": {
            "$ref": "#/components/schemas/CustomerGroup"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "documentBaseConfigSalesChannels": {
            "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
          },
          "domains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "eventActions": {
            "$ref": "#/components/schemas/EventAction"
          },
          "footerCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "footerCategoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "footerCategoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "homeCmsPage": {
            "$ref": "#/components/schemas/CmsPage"
          },
          "homeCmsPageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "homeCmsPageVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "homeEnabled": {
            "type": "boolean"
          },
          "homeKeywords": {
            "type": "string"
          },
          "homeMetaDescription": {
            "type": "string"
          },
          "homeMetaTitle": {
            "type": "string"
          },
          "homeName": {
            "type": "string"
          },
          "homeSlotConfig": {
            "type": "object"
          },
          "hreflangActive": {
            "type": "boolean"
          },
          "hreflangDefaultDomain": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "hreflangDefaultDomainId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "languages": {
            "$ref": "#/components/schemas/Language"
          },
          "mailHeaderFooter": {
            "$ref": "#/components/schemas/MailHeaderFooter"
          },
          "mailHeaderFooterId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "mainCategories": {
            "$ref": "#/components/schemas/MainCategory"
          },
          "maintenance": {
            "type": "boolean"
          },
          "maintenanceIpWhitelist": {
            "items": {
              "additionalProperties": false
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "navigationCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "navigationCategoryDepth": {
            "format": "int64",
            "type": "integer"
          },
          "navigationCategoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "navigationCategoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "numberRangeSalesChannels": {
            "$ref": "#/components/schemas/NumberRangeSalesChannel"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "paymentMethodIds": {
            "items": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "productReviews": {
            "$ref": "#/components/schemas/ProductReview"
          },
          "productVisibilities": {
            "$ref": "#/components/schemas/ProductVisibility"
          },
          "promotionSalesChannels": {
            "$ref": "#/components/schemas/PromotionSalesChannel"
          },
          "seoUrlTemplates": {
            "$ref": "#/components/schemas/SeoUrlTemplate"
          },
          "seoUrls": {
            "$ref": "#/components/schemas/SeoUrl"
          },
          "serviceCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "serviceCategoryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "serviceCategoryVersionId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shippingMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shortName": {
            "type": "string"
          },
          "systemConfigs": {
            "$ref": "#/components/schemas/SystemConfig"
          },
          "taxCalculationType": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "type": {
            "$ref": "#/components/schemas/SalesChannelType"
          },
          "typeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "wishlists": {
            "$ref": "#/components/schemas/CustomerWishlist"
          }
        },
        "required": [
          "typeId",
          "languageId",
          "customerGroupId",
          "currencyId",
          "paymentMethodId",
          "shippingMethodId",
          "countryId",
          "navigationCategoryId",
          "accessKey",
          "createdAt",
          "name",
          "homeEnabled"
        ],
        "type": "object"
      },
      "SalesChannelAnalytics": {
        "description": "Added since version: 6.2.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "anonymizeIp": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "trackOrders": {
            "type": "boolean"
          },
          "trackingId": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt"],
        "type": "object"
      },
      "SalesChannelAnalyticsJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "anonymizeIp": {
                "type": "boolean"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c0e648010a0340f8ac00ccb8b7ef2af0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-analytics/8283f983b68b43ebbe9670ef8bdef1e0/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "trackOrders": {
                "type": "boolean"
              },
              "trackingId": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.2.0.0"
      },
      "SalesChannelCountry": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "countryId"],
        "type": "object"
      },
      "SalesChannelCurrency": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "currencyId"],
        "type": "object"
      },
      "SalesChannelDomain": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "currencyId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "hreflangUseOnlyLocale": {
            "type": "boolean"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "productExports": {
            "$ref": "#/components/schemas/ProductExport"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelDefaultHreflang": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "snippetSet": {
            "$ref": "#/components/schemas/SnippetSet"
          },
          "snippetSetId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "salesChannelId",
          "languageId",
          "currencyId",
          "snippetSetId",
          "createdAt"
        ],
        "type": "object"
      },
      "SalesChannelDomainJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "hreflangUseOnlyLocale": {
                "type": "boolean"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "16427afbf34c4c248778f8a991639ad2",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "56ebf75a4db247a781661944c7078171",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "87a9085515ad428f889115dd9e2b4818",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_export",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/productExports",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "60bb8ac9624a4fc2b66e92f361a91c97",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultHreflang": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9408bc5686644bbe960588f1b6a79e00",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/salesChannelDefaultHreflang",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "snippetSet": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "27f16731ddef404f816616c0d5f00fbd",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "snippet_set",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-domain/29b0c7ac6b4a4b849ac7880815ee78ea/snippetSet",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "snippetSetId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url",
              "salesChannelId",
              "languageId",
              "currencyId",
              "snippetSetId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "SalesChannelJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "active": {
                "type": "boolean"
              },
              "analyticsId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "configuration": {
                "type": "object"
              },
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "customerGroupId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "footerCategoryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "footerCategoryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "homeCmsPageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "homeCmsPageVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "homeEnabled": {
                "type": "boolean"
              },
              "homeKeywords": {
                "type": "string"
              },
              "homeMetaDescription": {
                "type": "string"
              },
              "homeMetaTitle": {
                "type": "string"
              },
              "homeName": {
                "type": "string"
              },
              "homeSlotConfig": {
                "type": "object"
              },
              "hreflangActive": {
                "type": "boolean"
              },
              "hreflangDefaultDomainId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mailHeaderFooterId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "maintenance": {
                "type": "boolean"
              },
              "maintenanceIpWhitelist": {
                "items": {
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "type": "string"
              },
              "navigationCategoryDepth": {
                "format": "int64",
                "type": "integer"
              },
              "navigationCategoryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "navigationCategoryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "paymentMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "paymentMethodIds": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "relationships": {
                "properties": {
                  "analytics": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "89dc39bf0da245c2aad8ac8e99e0c861",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel_analytics",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/analytics",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "boundCustomers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d550fbd976f24d17b613cd949044cd8a",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/boundCustomers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "countries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1d574badfa104383b3530e3276bb6474",
                              "type": "string"
                            },
                            "type": {
                              "example": "country",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/countries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ef91e2fc33974c1aa967bba544d32304",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "currencies": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9f328301af6b4d9fa3a2b2a4fa1d8dd0",
                              "type": "string"
                            },
                            "type": {
                              "example": "currency",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/currencies",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "currency": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2436c08a4afe477499b434d47172c665",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "currency",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/currency",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customerGroup": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1179d280fe3d4ec39fd08a3e388aff5b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "customer_group",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/customerGroup",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customerGroupsRegistrations": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "cb5b0be4d3e84f3783a8b9254dc902fa",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_group",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/customerGroupsRegistrations",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "18083f4715284741a42ff0b06a537005",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "documentBaseConfigSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a57810d015c546e383bd20b3f04f44a2",
                              "type": "string"
                            },
                            "type": {
                              "example": "document_base_config_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/documentBaseConfigSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "domains": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ea02d5013f70460780c13141813fa8a3",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel_domain",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/domains",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "eventActions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b6ff03375b0749848d207d51c5f9139b",
                              "type": "string"
                            },
                            "type": {
                              "example": "event_action",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/eventActions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "footerCategory": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5607a2e4a1ce49db95ff32e5546ebfa9",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "category",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/footerCategory",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "homeCmsPage": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "51afa22c06b64dacb70102e636cabd9e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "cms_page",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/homeCmsPage",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "hreflangDefaultDomain": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0f49b4e253b342e5acf2e268f8ab5952",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel_domain",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/hreflangDefaultDomain",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b8876d91b2e345eab324497de591d985",
                              "type": "string"
                            },
                            "type": {
                              "example": "landing_page",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/landingPages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "bc433747d03e4456b6e445969b6cbe1b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "languages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "497fda1882344bd09cdebbe4de43080c",
                              "type": "string"
                            },
                            "type": {
                              "example": "language",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/languages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mailHeaderFooter": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ffeedef5188f4e1cae2b9eb1e5e064b7",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "mail_header_footer",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/mailHeaderFooter",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "mainCategories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "2932fe80c3454cef9a6b8d92fb9852fc",
                              "type": "string"
                            },
                            "type": {
                              "example": "main_category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/mainCategories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "navigationCategory": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f48458f2b24a4ddda01fdcb096d2a9c8",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "category",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/navigationCategory",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "99858902324449d1917cafd16dc07d68",
                              "type": "string"
                            },
                            "type": {
                              "example": "newsletter_recipient",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/newsletterRecipients",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "numberRangeSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3a05881a36634a93b2413f815d941d4b",
                              "type": "string"
                            },
                            "type": {
                              "example": "number_range_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/numberRangeSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0e3be6d47fc940a3876ff7f6e2e7bd45",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/orders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "fa74baa53a024e06ae912add8ff38afc",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "payment_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/paymentMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "paymentMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "56bbfac158d5497ba83e2e219f1ab375",
                              "type": "string"
                            },
                            "type": {
                              "example": "payment_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/paymentMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productExports": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1b748ac552d64b47b3816658f5131d82",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_export",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/productExports",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productReviews": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "138e3f66b89b4bb793b88017d03c4e13",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_review",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/productReviews",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "productVisibilities": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9285434a30764ff49e31e27c78b38abb",
                              "type": "string"
                            },
                            "type": {
                              "example": "product_visibility",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/productVisibilities",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "promotionSalesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "130f5c85bedd4e71b753a6674c64f63d",
                              "type": "string"
                            },
                            "type": {
                              "example": "promotion_sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/promotionSalesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "seoUrlTemplates": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f30538f8ae0845a9a1a4c66ebfe728f4",
                              "type": "string"
                            },
                            "type": {
                              "example": "seo_url_template",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/seoUrlTemplates",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "seoUrls": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "32e2980e75bf40639a2fdbef6801cf68",
                              "type": "string"
                            },
                            "type": {
                              "example": "seo_url",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/seoUrls",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "serviceCategory": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "68739f24966f43e59765705d2a2888dd",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "category",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/serviceCategory",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e0b013c341554b8cbde2b6174e5e24a4",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "shipping_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/shippingMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "717e623b6d6a480a90d46365077112b6",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "systemConfigs": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "17172ef834d840859b52a3de5d80a644",
                              "type": "string"
                            },
                            "type": {
                              "example": "system_config",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/systemConfigs",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "59d7ca8cd2ea46de80d64bd2879dd067",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/type",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "wishlists": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "3487c99a8a084d749938a3f5992bb92e",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_wishlist",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel/57f24d4b6a9c46cd8dbc32bc6c3bc3da/wishlists",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "serviceCategoryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "serviceCategoryVersionId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shippingMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shortName": {
                "type": "string"
              },
              "taxCalculationType": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "typeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "typeId",
              "languageId",
              "customerGroupId",
              "currencyId",
              "paymentMethodId",
              "shippingMethodId",
              "countryId",
              "navigationCategoryId",
              "accessKey",
              "createdAt",
              "name",
              "homeEnabled"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "SalesChannelLanguage": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "languageId"],
        "type": "object"
      },
      "SalesChannelPaymentMethod": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "paymentMethodId"],
        "type": "object"
      },
      "SalesChannelShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shippingMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "shippingMethodId"],
        "type": "object"
      },
      "SalesChannelType": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "coverUrl": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "descriptionLong": {
            "type": "string"
          },
          "iconName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "screenshotUrls": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "name"],
        "type": "object"
      },
      "SalesChannelTypeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "coverUrl": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "descriptionLong": {
                "type": "string"
              },
              "iconName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "manufacturer": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "429535327cb3433e955dd4f29445e373",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/sales-channel-type/13fb8c6be01c4d0a893d5ee787b5a48b/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "screenshotUrls": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Salutation": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "customerAddresses": {
            "$ref": "#/components/schemas/CustomerAddress"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "displayName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "letterName": {
            "type": "string"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "orderAddresses": {
            "$ref": "#/components/schemas/OrderAddress"
          },
          "orderCustomers": {
            "$ref": "#/components/schemas/OrderCustomer"
          },
          "salutationKey": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["salutationKey", "createdAt", "displayName", "letterName"],
        "type": "object"
      },
      "SalutationJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "displayName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "letterName": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "customerAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "54da9dfb7c6243c8af740c1ee3dad333",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/salutation/f6a9ddf8f96d4afa8464f86311fb4afc/customerAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "53e68037cd674acdb029d6619c5ce54d",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/salutation/f6a9ddf8f96d4afa8464f86311fb4afc/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0a28c4edd601457b8f059e12801498fb",
                              "type": "string"
                            },
                            "type": {
                              "example": "newsletter_recipient",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/salutation/f6a9ddf8f96d4afa8464f86311fb4afc/newsletterRecipients",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderAddresses": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d4ef210d597248cb91b37f40429ba354",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_address",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/salutation/f6a9ddf8f96d4afa8464f86311fb4afc/orderAddresses",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderCustomers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f0e2f93fc8074135a63f622712e99d77",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/salutation/f6a9ddf8f96d4afa8464f86311fb4afc/orderCustomers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salutationKey": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "salutationKey",
              "createdAt",
              "displayName",
              "letterName"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ScheduledTask": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "deadMessages": {
            "$ref": "#/components/schemas/DeadMessage"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastExecutionTime": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nextExecutionTime": {
            "format": "date-time",
            "type": "string"
          },
          "runInterval": {
            "format": "int64",
            "type": "integer"
          },
          "scheduledTaskClass": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "name",
          "scheduledTaskClass",
          "runInterval",
          "status",
          "nextExecutionTime",
          "createdAt"
        ],
        "type": "object"
      },
      "ScheduledTaskJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastExecutionTime": {
                "format": "date-time",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "nextExecutionTime": {
                "format": "date-time",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "deadMessages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9c4dbdc044824072affe70d0b7c59d32",
                              "type": "string"
                            },
                            "type": {
                              "example": "dead_message",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/scheduled-task/b2b9200677bb48cf8064d5b1184e8514/deadMessages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "runInterval": {
                "format": "int64",
                "type": "integer"
              },
              "scheduledTaskClass": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "name",
              "scheduledTaskClass",
              "runInterval",
              "status",
              "nextExecutionTime",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Script": {
        "description": "Added since version: 6.4.7.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "hook": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["script", "hook", "name", "active", "createdAt"],
        "type": "object"
      },
      "ScriptJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "hook": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "e06eae310b8142b1b8d8193abcf53aaf",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/script/f6c8a28389a74d4ba1fd2a3123e8e732/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "script": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["script", "hook", "name", "active", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.7.0"
      },
      "SeoUrl": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "foreignKey": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "isCanonical": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "isModified": {
            "type": "boolean"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "languageId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "pathInfo": {
            "type": "string"
          },
          "routeName": {
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "seoPathInfo": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "description": "Runtime field, cannot be used as part of the criteria.",
            "type": "string"
          }
        },
        "required": [
          "languageId",
          "foreignKey",
          "routeName",
          "pathInfo",
          "seoPathInfo",
          "createdAt"
        ],
        "type": "object"
      },
      "SeoUrlJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "foreignKey": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "isCanonical": {
                "type": "boolean"
              },
              "isDeleted": {
                "type": "boolean"
              },
              "isModified": {
                "type": "boolean"
              },
              "languageId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "pathInfo": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "language": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "56e448139f8748bd816bb1e0eb6d729c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "language",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/seo-url/fd032e550f82470c9867d705d8c4a600/language",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "61ba95ba9fc94a11a92652a3e372ccd0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/seo-url/fd032e550f82470c9867d705d8c4a600/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "routeName": {
                "type": "string"
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "seoPathInfo": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "description": "Runtime field, cannot be used as part of the criteria.",
                "type": "string"
              }
            },
            "required": [
              "languageId",
              "foreignKey",
              "routeName",
              "pathInfo",
              "seoPathInfo",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "SeoUrlTemplate": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "entityName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "isValid": {
            "type": "boolean"
          },
          "routeName": {
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["entityName", "routeName", "createdAt"],
        "type": "object"
      },
      "SeoUrlTemplateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "entityName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "isValid": {
                "type": "boolean"
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "9fde7e5f12d04adf8d8b32f308162bbf",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/seo-url-template/ef87f87766ec4dbc9fbe2afc963e2881/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "routeName": {
                "type": "string"
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "template": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["entityName", "routeName", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ShippingMethod": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "availabilityRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "availabilityRuleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "deliveryTime": {
            "$ref": "#/components/schemas/DeliveryTime"
          },
          "deliveryTimeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "prices": {
            "$ref": "#/components/schemas/ShippingMethodPrice"
          },
          "salesChannelDefaultAssignments": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "tags": {
            "$ref": "#/components/schemas/Tag"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "taxId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "taxType": {
            "type": "string"
          },
          "trackingUrl": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "availabilityRuleId",
          "deliveryTimeId",
          "taxType",
          "createdAt",
          "name"
        ],
        "type": "object"
      },
      "ShippingMethodJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "availabilityRuleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "deliveryTimeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "mediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "availabilityRule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "53ed43f2ec1447cc865c696055e4043b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/availabilityRule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "deliveryTime": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "96cd0dea8d0245cca8cb2583a13dda1d",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "delivery_time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/deliveryTime",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "69dc6e9950f84d8d809292f3fa2e8d53",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9bc22dd9ea3b482baedf880d1a946120",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/orderDeliveries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "prices": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "1b3c3a4b5ad84717a1910c406f490633",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method_price",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/prices",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannelDefaultAssignments": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "abc0cb8059ba4a8391c4c5cb11425375",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/salesChannelDefaultAssignments",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9c05033ca7bf4bbc9f1771f0be151d99",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tags": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "2df7c5c6b61243309a6637600d3b0844",
                              "type": "string"
                            },
                            "type": {
                              "example": "tag",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/tags",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f73f82c79be24411868aed694be94c14",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "tax",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method/9a6867aa3ccb4ce0929f4178c23abe79/tax",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "taxId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "taxType": {
                "type": "string"
              },
              "trackingUrl": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "availabilityRuleId",
              "deliveryTimeId",
              "taxType",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ShippingMethodPrice": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "calculation": {
            "format": "int64",
            "type": "integer"
          },
          "calculationRule": {
            "$ref": "#/components/schemas/Rule"
          },
          "calculationRuleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currencyPrice": {
            "type": "object"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "quantityEnd": {
            "format": "float",
            "type": "number"
          },
          "quantityStart": {
            "format": "float",
            "type": "number"
          },
          "rule": {
            "$ref": "#/components/schemas/Rule"
          },
          "ruleId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shippingMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["shippingMethodId", "createdAt"],
        "type": "object"
      },
      "ShippingMethodPriceJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "calculation": {
                "format": "int64",
                "type": "integer"
              },
              "calculationRuleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "currencyPrice": {
                "type": "object"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "quantityEnd": {
                "format": "float",
                "type": "number"
              },
              "quantityStart": {
                "format": "float",
                "type": "number"
              },
              "relationships": {
                "properties": {
                  "calculationRule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "7c93c380d70c48b0aa4ba200e287a2cc",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method-price/74a208815065487b97065b9bc17d1fb0/calculationRule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rule": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "06887b2f83f64c7b86eee92d9c8dcc4f",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "rule",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method-price/74a208815065487b97065b9bc17d1fb0/rule",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethod": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "2efd4a224af0421abaa8edd54cfb832c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "shipping_method",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/shipping-method-price/74a208815065487b97065b9bc17d1fb0/shippingMethod",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "ruleId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "shippingMethodId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["shippingMethodId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ShippingMethodTag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "shippingMethodId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "tagId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["shippingMethodId", "tagId"],
        "type": "object"
      },
      "Snippet": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "author": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "set": {
            "$ref": "#/components/schemas/SnippetSet"
          },
          "setId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "translationKey": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["setId", "translationKey", "value", "author", "createdAt"],
        "type": "object"
      },
      "SnippetJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "author": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "set": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1ff15a7b420d422cb357c4486c38f100",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "snippet_set",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/snippet/f3cf8459826e4ed4a71fb0c8eb4a5c09/set",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "setId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "translationKey": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "setId",
              "translationKey",
              "value",
              "author",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "SnippetSet": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "baseFile": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "iso": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salesChannelDomains": {
            "$ref": "#/components/schemas/SalesChannelDomain"
          },
          "snippets": {
            "$ref": "#/components/schemas/Snippet"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "baseFile", "iso", "createdAt"],
        "type": "object"
      },
      "SnippetSetJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "baseFile": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "iso": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "salesChannelDomains": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "c93b6f747dba4d938dcb05d33ff0da0f",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel_domain",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/snippet-set/e8570cb7860649fd815c279f903fab76/salesChannelDomains",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "snippets": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0b2f08dfc47d4f88acc56e1b023e31d0",
                              "type": "string"
                            },
                            "type": {
                              "example": "snippet",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/snippet-set/e8570cb7860649fd815c279f903fab76/snippets",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "baseFile", "iso", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "StateMachine": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "historyEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "initialStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "states": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "technicalName": {
            "type": "string"
          },
          "transitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["technicalName", "createdAt", "name"],
        "type": "object"
      },
      "StateMachineHistory": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "entityId": {
            "type": "object"
          },
          "entityName": {
            "type": "string"
          },
          "fromStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "stateMachineId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "toStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "transitionActionName": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": [
          "stateMachineId",
          "entityName",
          "entityId",
          "fromStateId",
          "toStateId",
          "createdAt"
        ],
        "type": "object"
      },
      "StateMachineHistoryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "entityId": {
                "type": "object"
              },
              "entityName": {
                "type": "string"
              },
              "fromStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "fromStateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "4f0df40ecabd4884bc9976df8fa0aed3",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-history/7825ddbb8af54b5da5652a28251cadcb/fromStateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachine": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "ecbc7a7bc36645e0a9778612a2b31d38",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-history/7825ddbb8af54b5da5652a28251cadcb/stateMachine",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "dc68f2b8caf04a769bc8dbf2bed13221",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-history/7825ddbb8af54b5da5652a28251cadcb/toStateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "1c44deb6ab9f4db983e6cbafa3d1fa19",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-history/7825ddbb8af54b5da5652a28251cadcb/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateMachineId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "toStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "transitionActionName": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": [
              "stateMachineId",
              "entityName",
              "entityId",
              "fromStateId",
              "toStateId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "StateMachineJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "initialStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "historyEntries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e95e12a736be43ac8f898ff7f3558924",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_history",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine/0293993f730a47cbaf092d09609ef6c6/historyEntries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "states": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6e707f94b1fe4d4ab1b2cd2c4f729f7e",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_state",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine/0293993f730a47cbaf092d09609ef6c6/states",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "transitions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "21ac369ade6b46c69c6a413457dc4194",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_transition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine/0293993f730a47cbaf092d09609ef6c6/transitions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["technicalName", "createdAt", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "StateMachineState": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "fromStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "fromStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "orderDeliveries": {
            "$ref": "#/components/schemas/OrderDelivery"
          },
          "orderTransactionCaptureRefunds": {
            "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
          },
          "orderTransactionCaptures": {
            "$ref": "#/components/schemas/OrderTransactionCapture"
          },
          "orderTransactions": {
            "$ref": "#/components/schemas/OrderTransaction"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "stateMachineId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "technicalName": {
            "type": "string"
          },
          "toStateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "toStateMachineTransitions": {
            "$ref": "#/components/schemas/StateMachineTransition"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["technicalName", "stateMachineId", "createdAt", "name"],
        "type": "object"
      },
      "StateMachineStateJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "fromStateMachineHistoryEntries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ec0eb514f7fb43c0b2de8e76828d7092",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_history",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/fromStateMachineHistoryEntries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "fromStateMachineTransitions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "4fcd63d7045b462687df290ceb7a9467",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_transition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/fromStateMachineTransitions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderDeliveries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "679badf598474fe9a0f7c9a106001f15",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_delivery",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/orderDeliveries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptureRefunds": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6b7b01dbee6d45149d4a7c883149ad1a",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture_refund",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/orderTransactionCaptureRefunds",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactionCaptures": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b1d9304fcb594342a842920c972a5bcc",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction_capture",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/orderTransactionCaptures",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orderTransactions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "48aa5298e74d4ac1935d3dd9551b8f51",
                              "type": "string"
                            },
                            "type": {
                              "example": "order_transaction",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/orderTransactions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9b9c68f99a0f4ecb8999c1e552853060",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/orders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachine": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "5f5accdc16e649f89c7b296df5c7aced",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/stateMachine",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineHistoryEntries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5401e14d97e64eee96f6e62ad3639d42",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_history",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/toStateMachineHistoryEntries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineTransitions": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "a926262a7f6147f0bb0bc3a3db5ad344",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_transition",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-state/b58256f5f65d4e30a70e1c7de5a12b0c/toStateMachineTransitions",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateMachineId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "technicalName": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "technicalName",
              "stateMachineId",
              "createdAt",
              "name"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "StateMachineTransition": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "actionName": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "fromStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "fromStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "stateMachine": {
            "$ref": "#/components/schemas/StateMachine"
          },
          "stateMachineId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "toStateId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "toStateMachineState": {
            "$ref": "#/components/schemas/StateMachineState"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "actionName",
          "stateMachineId",
          "fromStateId",
          "toStateId",
          "createdAt"
        ],
        "type": "object"
      },
      "StateMachineTransitionJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "actionName": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "fromStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "fromStateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "601568e0680b4ef48492d767ea652769",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-transition/2a489f761ec944e8a6781ba6fa2af9ae/fromStateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachine": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "fd3813a5050e47949a2ddc233bd71588",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-transition/2a489f761ec944e8a6781ba6fa2af9ae/stateMachine",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "toStateMachineState": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "759af6090ece474f9b0223ea800d62cb",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "state_machine_state",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/state-machine-transition/2a489f761ec944e8a6781ba6fa2af9ae/toStateMachineState",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "stateMachineId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "toStateId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "actionName",
              "stateMachineId",
              "fromStateId",
              "toStateId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "SystemConfig": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "configurationKey": {
            "type": "string"
          },
          "configurationValue": {
            "properties": {
              "_value": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["configurationKey", "configurationValue", "createdAt"],
        "type": "object"
      },
      "SystemConfigJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "configurationKey": {
                "type": "string"
              },
              "configurationValue": {
                "properties": {
                  "_value": {
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "salesChannel": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "917caeb60cc74989ba4dfede7fc7b24b",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "sales_channel",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/system-config/cd804e98e59743bbacbf58c8073d2e19/salesChannel",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "salesChannelId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["configurationKey", "configurationValue", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Tag": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "categories": {
            "$ref": "#/components/schemas/Category"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customers": {
            "$ref": "#/components/schemas/Customer"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "landingPages": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "name": {
            "type": "string"
          },
          "newsletterRecipients": {
            "$ref": "#/components/schemas/NewsletterRecipient"
          },
          "orders": {
            "$ref": "#/components/schemas/Order"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "rules": {
            "$ref": "#/components/schemas/Rule"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "createdAt"],
        "type": "object"
      },
      "TagJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "categories": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "bb22c2f7c5b4475db231fa017d4eb835",
                              "type": "string"
                            },
                            "type": {
                              "example": "category",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/categories",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customers": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9d20a59f55a7429f8ca5c95fde5e72ed",
                              "type": "string"
                            },
                            "type": {
                              "example": "customer",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/customers",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "landingPages": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5c783bf773b64d929ba95975f4b30678",
                              "type": "string"
                            },
                            "type": {
                              "example": "landing_page",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/landingPages",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "255aa8f760ba4e79b063f9039313131c",
                              "type": "string"
                            },
                            "type": {
                              "example": "media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "newsletterRecipients": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "46335274783f4aba900afdefd75c5651",
                              "type": "string"
                            },
                            "type": {
                              "example": "newsletter_recipient",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/newsletterRecipients",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "orders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "6b76e2cb3cf2447aaa706316c02fb10d",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/orders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "589692b41ac74dcdb3e7fe873068bd19",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "ae010ce27de2471681b2f050e89e54d3",
                              "type": "string"
                            },
                            "type": {
                              "example": "rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/rules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "02ff944093164efa9018a521326d0ee5",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tag/49a2393738694294b5a243625011ea78/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Tax": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "description": "Added since version: 6.4.0.0.",
            "format": "int64",
            "type": "integer"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "rules": {
            "$ref": "#/components/schemas/TaxRule"
          },
          "shippingMethods": {
            "$ref": "#/components/schemas/ShippingMethod"
          },
          "taxRate": {
            "format": "float",
            "type": "number"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["taxRate", "name", "position", "createdAt"],
        "type": "object"
      },
      "TaxJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "position": {
                "description": "Added since version: 6.4.0.0.",
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "01dbdd963316407b9c18a2422d0f344c",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax/96c916a7735142fcb8e29762eefd24b4/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "rules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "76f8b38c53f149fbbaa7a0724a090d2f",
                              "type": "string"
                            },
                            "type": {
                              "example": "tax_rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax/96c916a7735142fcb8e29762eefd24b4/rules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "shippingMethods": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "aa194edffd104e8b80c991ef5bafa7d5",
                              "type": "string"
                            },
                            "type": {
                              "example": "shipping_method",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax/96c916a7735142fcb8e29762eefd24b4/shippingMethods",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "taxRate": {
                "format": "float",
                "type": "number"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["taxRate", "name", "position", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "TaxRule": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "countryId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "data": {
            "properties": {
              "fromZipCode": {
                "type": "string"
              },
              "states": {
                "items": {
                  "additionalProperties": false
                },
                "type": "array"
              },
              "toZipCode": {
                "type": "string"
              },
              "zipCode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "taxId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "taxRate": {
            "format": "float",
            "type": "number"
          },
          "taxRuleTypeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/TaxRuleType"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "taxRuleTypeId",
          "countryId",
          "taxRate",
          "taxId",
          "createdAt"
        ],
        "type": "object"
      },
      "TaxRuleJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "countryId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "data": {
                "properties": {
                  "fromZipCode": {
                    "type": "string"
                  },
                  "states": {
                    "items": {
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "toZipCode": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "country": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "8e99d5a2707f44a99f09b7aaecfcfa3e",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "country",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax-rule/3e2e4940361c407ca92ee753e6fae48a/country",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "tax": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "f0fc84004ea648a1a6756802b7b0aeaa",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "tax",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax-rule/3e2e4940361c407ca92ee753e6fae48a/tax",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "c7bbba4bdea44853b0d8a35bd67b5922",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "tax_rule_type",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax-rule/3e2e4940361c407ca92ee753e6fae48a/type",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "taxId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "taxRate": {
                "format": "float",
                "type": "number"
              },
              "taxRuleTypeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": [
              "taxRuleTypeId",
              "countryId",
              "taxRate",
              "taxId",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "TaxRuleType": {
        "description": "Added since version: 6.1.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "position": {
            "format": "int64",
            "type": "integer"
          },
          "rules": {
            "$ref": "#/components/schemas/TaxRule"
          },
          "technicalName": {
            "readOnly": true,
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "typeName": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["technicalName", "position", "createdAt", "typeName"],
        "type": "object"
      },
      "TaxRuleTypeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "position": {
                "format": "int64",
                "type": "integer"
              },
              "relationships": {
                "properties": {
                  "rules": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "5559d086fb9d40349ca2239e442636ab",
                              "type": "string"
                            },
                            "type": {
                              "example": "tax_rule",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/tax-rule-type/127abccee957407e834cb8985f940b71/rules",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "readOnly": true,
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "typeName": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["technicalName", "position", "createdAt", "typeName"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.1.0.0"
      },
      "Theme": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "author": {
            "type": "string"
          },
          "baseConfig": {
            "type": "object"
          },
          "childThemes": {
            "$ref": "#/components/schemas/Theme"
          },
          "configValues": {
            "type": "object"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dependentThemes": {
            "$ref": "#/components/schemas/Theme"
          },
          "description": {
            "type": "string"
          },
          "helpTexts": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "labels": {
            "type": "object"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "name": {
            "type": "string"
          },
          "parentThemeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "previewMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "previewMediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannels": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "technicalName": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["name", "author", "active", "createdAt"],
        "type": "object"
      },
      "ThemeChild": {
        "description": "Added since version: 6.4.8.0",
        "properties": {
          "childId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "childTheme": {
            "$ref": "#/components/schemas/Theme"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parentId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "parentTheme": {
            "$ref": "#/components/schemas/Theme"
          }
        },
        "required": ["parentId", "childId"],
        "type": "object"
      },
      "ThemeJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "author": {
                "type": "string"
              },
              "baseConfig": {
                "type": "object"
              },
              "configValues": {
                "type": "object"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "helpTexts": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "labels": {
                "type": "object"
              },
              "name": {
                "type": "string"
              },
              "parentThemeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "previewMediaId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "childThemes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "181e6be28c624336bcadd4b35599c07d",
                              "type": "string"
                            },
                            "type": {
                              "example": "theme",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/theme/0b1cc364054e4da4ba5e16be86301603/childThemes",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "dependentThemes": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7bd3f256da4d44039f59737ff49f34cc",
                              "type": "string"
                            },
                            "type": {
                              "example": "theme",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/theme/0b1cc364054e4da4ba5e16be86301603/dependentThemes",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "e3bdd8c18dd94cc9bc3ad4c8f1c440f8",
                              "type": "string"
                            },
                            "type": {
                              "example": "media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/theme/0b1cc364054e4da4ba5e16be86301603/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "previewMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "23ffccab7d084e0e99345124600809b5",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/theme/0b1cc364054e4da4ba5e16be86301603/previewMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "salesChannels": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7dafe75fc53e407cb80895c8c9648852",
                              "type": "string"
                            },
                            "type": {
                              "example": "sales_channel",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/theme/0b1cc364054e4da4ba5e16be86301603/salesChannels",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "technicalName": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["name", "author", "active", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "ThemeMedia": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "mediaId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "themeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["themeId", "mediaId"],
        "type": "object"
      },
      "ThemeSalesChannel": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "salesChannel": {
            "$ref": "#/components/schemas/SalesChannel"
          },
          "salesChannelId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "themeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["salesChannelId", "themeId"],
        "type": "object"
      },
      "Unit": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "products": {
            "$ref": "#/components/schemas/Product"
          },
          "shortCode": {
            "type": "string"
          },
          "translated": {
            "type": "object"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": ["createdAt", "shortCode", "name"],
        "type": "object"
      },
      "UnitJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "products": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "8ee8ce6671f547aebf9eb40e88176ec0",
                              "type": "string"
                            },
                            "type": {
                              "example": "product",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/unit/bea9bbe602ea4248804413109bd5c3c1/products",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "shortCode": {
                "type": "string"
              },
              "translated": {
                "type": "object"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "required": ["createdAt", "shortCode", "name"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "User": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "accessKeys": {
            "$ref": "#/components/schemas/UserAccessKey"
          },
          "aclRoles": {
            "$ref": "#/components/schemas/AclRole"
          },
          "active": {
            "type": "boolean"
          },
          "admin": {
            "type": "boolean"
          },
          "avatarId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "avatarMedia": {
            "$ref": "#/components/schemas/Media"
          },
          "configs": {
            "$ref": "#/components/schemas/UserConfig"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdOrders": {
            "$ref": "#/components/schemas/Order"
          },
          "customFields": {
            "type": "object"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "importExportLogEntries": {
            "$ref": "#/components/schemas/ImportExportLog"
          },
          "lastName": {
            "type": "string"
          },
          "lastUpdatedPasswordAt": {
            "format": "date-time",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          },
          "localeId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          },
          "recoveryUser": {
            "$ref": "#/components/schemas/UserRecovery"
          },
          "stateMachineHistoryEntries": {
            "$ref": "#/components/schemas/StateMachineHistory"
          },
          "timeZone": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "updatedOrders": {
            "$ref": "#/components/schemas/Order"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "localeId",
          "username",
          "firstName",
          "lastName",
          "email",
          "timeZone",
          "createdAt"
        ],
        "type": "object"
      },
      "UserAccessKey": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "accessKey": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "lastUsageAt": {
            "format": "date-time",
            "type": "string"
          },
          "secretAccessKey": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "writeAccess": {
            "deprecated": true,
            "type": "boolean"
          }
        },
        "required": ["userId", "accessKey", "secretAccessKey", "createdAt"],
        "type": "object"
      },
      "UserAccessKeyJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "accessKey": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastUsageAt": {
                "format": "date-time",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "73f4ec2a6cd5455fb3a2097a8bf65401",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user-access-key/0b960a25a718497e8ed7fe3d79934052/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "secretAccessKey": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "writeAccess": {
                "deprecated": true,
                "type": "boolean"
              }
            },
            "required": ["userId", "accessKey", "secretAccessKey", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "UserConfig": {
        "description": "Added since version: 6.3.5.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "value": {
            "type": "object"
          }
        },
        "required": ["userId", "key", "createdAt"],
        "type": "object"
      },
      "UserConfigJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "40e986ea6d6046a1a8ab797a3471b42a",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user-config/93572a7a511149eabd69b48f3782900e/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "value": {
                "type": "object"
              }
            },
            "required": ["userId", "key", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.5.0"
      },
      "UserJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              },
              "avatarId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "email": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "lastUpdatedPasswordAt": {
                "format": "date-time",
                "type": "string"
              },
              "localeId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "accessKeys": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d7ac9f4f3bc946dc929c820312dcaed3",
                              "type": "string"
                            },
                            "type": {
                              "example": "user_access_key",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/accessKeys",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "aclRoles": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "b4ab28182a4046ecb444fa9c8c76731e",
                              "type": "string"
                            },
                            "type": {
                              "example": "acl_role",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/aclRoles",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "avatarMedia": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "86ceeea1f6544ae49199330137f9ecef",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "media",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/avatarMedia",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "configs": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "584cbe3a194541eaae59987792b8f07d",
                              "type": "string"
                            },
                            "type": {
                              "example": "user_config",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/configs",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "createdOrders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "0ee85a23186e4d5bb6fb495f72e790b4",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/createdOrders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "importExportLogEntries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "9fa9965e619343159aa73bb646bd60c7",
                              "type": "string"
                            },
                            "type": {
                              "example": "import_export_log",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/importExportLogEntries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "locale": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0d1cfc2377a04d0991a49e65b9da2973",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "locale",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/locale",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "media": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "f031f1eb873d4f57be9a4c99f8d4aebf",
                              "type": "string"
                            },
                            "type": {
                              "example": "media",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/media",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "recoveryUser": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "0633d2833b7f41e0ad01f0e31dece694",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user_recovery",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/recoveryUser",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "stateMachineHistoryEntries": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "7ce1234ee3124cdcaca348a40f99f262",
                              "type": "string"
                            },
                            "type": {
                              "example": "state_machine_history",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/stateMachineHistoryEntries",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "updatedOrders": {
                    "properties": {
                      "data": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": "d0930706e6024529aadb1712371755c5",
                              "type": "string"
                            },
                            "type": {
                              "example": "order",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user/ad627c477019493e85214cc474372fa0/updatedOrders",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "timeZone": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "required": [
              "localeId",
              "username",
              "firstName",
              "lastName",
              "email",
              "timeZone",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "UserRecovery": {
        "description": "Added since version: 6.0.0.0",
        "properties": {
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "userId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          }
        },
        "required": ["hash", "userId", "createdAt"],
        "type": "object"
      },
      "UserRecoveryJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "hash": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "user": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "b9635e1d8e9a4714ae37ccc71425339c",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "user",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/user-recovery/d70f4fe88a1143bc84b31cfd7cad8814/user",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              }
            },
            "required": ["hash", "userId", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.0.0.0"
      },
      "Webhook": {
        "description": "Added since version: 6.3.1.0",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "app": {
            "$ref": "#/components/schemas/App"
          },
          "appId": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "errorCount": {
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "eventName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": ["name", "eventName", "url", "errorCount", "createdAt"],
        "type": "object"
      },
      "WebhookEventLog": {
        "description": "Added since version: 6.4.1.0",
        "properties": {
          "appName": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "deliveryStatus": {
            "type": "string"
          },
          "eventName": {
            "type": "string"
          },
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "processingTime": {
            "format": "int64",
            "type": "integer"
          },
          "requestContent": {
            "type": "object"
          },
          "responseContent": {
            "type": "object"
          },
          "responseReasonPhrase": {
            "type": "string"
          },
          "responseStatusCode": {
            "format": "int64",
            "type": "integer"
          },
          "timestamp": {
            "format": "int64",
            "type": "integer"
          },
          "updatedAt": {
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "webhookName": {
            "type": "string"
          }
        },
        "required": [
          "webhookName",
          "eventName",
          "deliveryStatus",
          "url",
          "createdAt"
        ],
        "type": "object"
      },
      "WebhookEventLogJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "appName": {
                "type": "string"
              },
              "appVersion": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "customFields": {
                "type": "object"
              },
              "deliveryStatus": {
                "type": "string"
              },
              "eventName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "processingTime": {
                "format": "int64",
                "type": "integer"
              },
              "requestContent": {
                "type": "object"
              },
              "responseContent": {
                "type": "object"
              },
              "responseReasonPhrase": {
                "type": "string"
              },
              "responseStatusCode": {
                "format": "int64",
                "type": "integer"
              },
              "timestamp": {
                "format": "int64",
                "type": "integer"
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "webhookName": {
                "type": "string"
              }
            },
            "required": [
              "webhookName",
              "eventName",
              "deliveryStatus",
              "url",
              "createdAt"
            ],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.4.1.0"
      },
      "WebhookJsonApi": {
        "allOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "properties": {
              "active": {
                "type": "boolean"
              },
              "appId": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "errorCount": {
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "eventName": {
                "type": "string"
              },
              "id": {
                "pattern": "^[0-9a-f]{32}$",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "app": {
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "example": "be5512df9f7645d79b7740fd0dde29c0",
                            "pattern": "^[0-9a-f]{32}$",
                            "type": "string"
                          },
                          "type": {
                            "example": "app",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "links": {
                        "properties": {
                          "related": {
                            "example": "/webhook/5de412cd5d8e4dbe87d88f86bbc3e414/app",
                            "format": "uri-reference",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "updatedAt": {
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "required": ["name", "eventName", "url", "errorCount", "createdAt"],
            "type": "object"
          }
        ],
        "description": "Added since version: 6.3.1.0"
      },
      "attributes": {
        "additionalProperties": true,
        "description": "Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.",
        "type": "object"
      },
      "businessEventsResponse": {
        "items": {
          "properties": {
            "aware": {
              "description": "Flow builder will base on awareness to show actions",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "class": {
              "description": "Class name of the event",
              "type": "string"
            },
            "data": {
              "description": "Available data of event",
              "type": "object"
            },
            "extensions": {
              "description": "Extensions data of event",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "description": "Name of the event",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "data": {
        "description": "The document's \"primary data\" is a representation of the resource or collection of resources targeted by a request.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/resource"
          },
          {
            "description": "An array of resource objects, an array of resource identifier objects, or an empty array ([]), for requests that target resource collections.",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "type": "array",
            "uniqueItems": true
          }
        ]
      },
      "error": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "description": "An application-specific error code, expressed as a string value.",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "source": {
            "properties": {
              "parameter": {
                "description": "A string indicating which query parameter caused the error.",
                "type": "string"
              },
              "pointer": {
                "description": "A JSON Pointer [RFC6901] to the associated entity in the request document [e.g. \"/data\" for a primary data object, or \"/data/attributes/title\" for a specific attribute].",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "The HTTP status code applicable to this problem, expressed as a string value.",
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem. It **SHOULD NOT** change from occurrence to occurrence of the problem, except for purposes of localization.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "failure": {
        "additionalProperties": false,
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/error"
            },
            "type": "array",
            "uniqueItems": true
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "required": ["errors"],
        "type": "object"
      },
      "flowBulderActionsResponse": {
        "items": {
          "properties": {
            "extensions": {
              "description": "Extensions data of event",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "description": "Name of the flow action",
              "type": "string"
            },
            "requirements": {
              "description": "When requirement fit with aware from `events.json` actions will be shown",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "type": "array"
      },
      "info": {
        "properties": {
          "jsonapi": {
            "$ref": "#/components/schemas/jsonapi"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "required": ["meta"],
        "type": "object"
      },
      "infoConfigResponse": {
        "properties": {
          "adminWorker": {
            "description": "Information about the admin worker.",
            "properties": {
              "enableAdminWorker": {
                "description": "State of the admin worker.",
                "type": "boolean"
              },
              "transports": {
                "description": "Configured transports.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "bundles": {
            "additionalProperties": {
              "properties": {
                "css": {
                  "items": {
                    "description": "Url to the css file.",
                    "type": "string"
                  },
                  "type": "array"
                },
                "js": {
                  "items": {
                    "description": "Url to the js file.",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            },
            "description": "Asset files of active extensions",
            "type": "object"
          },
          "settings": {
            "properties": {
              "enableUrlFeature": {
                "description": "State of the `urlFeature` setting.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "version": {
            "description": "The Shopware version.",
            "type": "string"
          },
          "versionRevision": {
            "description": "The Shopware version revision.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "jsonapi": {
        "additionalProperties": false,
        "description": "An object describing the server's implementation",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "link": {
        "description": "A link **MUST** be represented as either: a string containing the link's URL or a link object.",
        "oneOf": [
          {
            "description": "A string containing the link's URL.",
            "format": "uri-reference",
            "type": "string"
          },
          {
            "properties": {
              "href": {
                "description": "A string containing the link's URL.",
                "format": "uri-reference",
                "type": "string"
              },
              "meta": {
                "$ref": "#/components/schemas/meta"
              }
            },
            "required": ["href"],
            "type": "object"
          }
        ]
      },
      "linkage": {
        "additionalProperties": false,
        "description": "The \"type\" and \"id\" to non-empty members.",
        "properties": {
          "id": {
            "pattern": "^[0-9a-f]{32}$",
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["type", "id"],
        "type": "object"
      },
      "links": {
        "additionalProperties": {
          "$ref": "#/components/schemas/link"
        },
        "type": "object"
      },
      "meta": {
        "additionalProperties": true,
        "description": "Non-standard meta-information that can not be represented as an attribute or relationship.",
        "type": "object"
      },
      "pagination": {
        "properties": {
          "first": {
            "description": "The first page of data",
            "format": "uri-reference",
            "type": "string"
          },
          "last": {
            "description": "The last page of data",
            "format": "uri-reference",
            "type": "string"
          },
          "next": {
            "description": "The next page of data",
            "format": "uri-reference",
            "type": "string"
          },
          "prev": {
            "description": "The previous page of data",
            "format": "uri-reference",
            "type": "string"
          }
        },
        "type": "object"
      },
      "relationshipLinks": {
        "additionalProperties": true,
        "description": "A resource object **MAY** contain references to other resource objects (\"relationships\"). Relationships may be to-one or to-many. Relationships can be specified by including a member in a resource's links object.",
        "properties": {
          "related": {
            "$ref": "#/components/schemas/link"
          },
          "self": {
            "allOf": [
              {
                "description": "A `self` member, whose value is a URL for the relationship itself (a \"relationship URL\"). This URL allows the client to directly manipulate the relationship. For example, it would allow a client to remove an `author` from an `article` without deleting the people resource itself.",
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "$ref": "#/components/schemas/link"
              }
            ]
          }
        },
        "type": "object"
      },
      "relationshipToMany": {
        "description": "An array of objects each containing \\\"type\\\" and \\\"id\\\" members for to-many relationships.",
        "items": {
          "$ref": "#/components/schemas/linkage"
        },
        "type": "array",
        "uniqueItems": true
      },
      "relationshipToOne": {
        "allOf": [
          {
            "description": "References to other resource objects in a to-one (\"relationship\"). Relationships can be specified by including a member in a resource's links object."
          },
          {
            "$ref": "#/components/schemas/linkage"
          }
        ]
      },
      "relationships": {
        "additionalProperties": false,
        "anyOf": [
          {
            "required": ["data"]
          },
          {
            "required": ["meta"]
          },
          {
            "required": ["links"]
          },
          {
            "properties": {
              "data": {
                "description": "Member, whose value represents \"resource linkage\".",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/relationshipToOne"
                  },
                  {
                    "$ref": "#/components/schemas/relationshipToMany"
                  }
                ]
              },
              "links": {
                "$ref": "#/components/schemas/relationshipLinks"
              }
            },
            "type": "object"
          }
        ],
        "description": "Members of the relationships object (\"relationships\") represent references from the resource object in which it's defined to other resource objects.",
        "type": "object"
      },
      "resource": {
        "description": "\"Resource objects\" appear in a JSON API document to represent resources.",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/attributes"
          },
          "id": {
            "type": "string"
          },
          "links": {
            "$ref": "#/components/schemas/links"
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          },
          "relationships": {
            "$ref": "#/components/schemas/relationships"
          },
          "type": {
            "type": "string"
          }
        },
        "required": ["type", "id"],
        "type": "object"
      },
      "success": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "included": {
            "description": "To reduce the number of HTTP requests, servers **MAY** allow responses that include related resources along with the requested primary resources. Such responses are called \"compound documents\".",
            "items": {
              "$ref": "#/components/schemas/resource"
            },
            "type": "array",
            "uniqueItems": true
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/links"
              },
              {
                "$ref": "#/components/schemas/pagination"
              }
            ],
            "description": "Link members related to the primary data."
          },
          "meta": {
            "$ref": "#/components/schemas/meta"
          }
        },
        "required": ["data"],
        "type": "object"
      }
    },
    "securitySchemes": {
      "oAuth": {
        "description": "Authentication API",
        "flows": {
          "clientCredentials": {
            "scopes": {
              "write": "Full write access"
            },
            "tokenUrl": "http://localhost:8000/api/oauth/token"
          },
          "password": {
            "scopes": {
              "write": "Full write access"
            },
            "tokenUrl": "http://localhost:8000/api/oauth/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "description": "This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.\n\nFor a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints\nadd the query parameter `type=jsonapi`.",
    "title": "Shopware Admin API",
    "version": "6.4.16.1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/_action/cache": {
      "delete": {
        "description": "The cache is immediately cleared synchronously for all used adapters.",
        "operationId": "clearCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared."
          }
        },
        "summary": "Clear caches",
        "tags": ["System Operations"]
      }
    },
    "/_action/cache_info": {
      "get": {
        "description": "Get information about the cache configuration",
        "operationId": "info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cacheAdapter": {
                      "description": "The active cache adapter.",
                      "type": "string"
                    },
                    "environment": {
                      "description": "The active environment.",
                      "type": "string"
                    },
                    "httpCache": {
                      "description": "State of the HTTP cache.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Information about the cache state."
          }
        },
        "summary": "Get cache information",
        "tags": ["System Operations"]
      }
    },
    "/_action/cache_warmup": {
      "delete": {
        "description": "After the cache has been cleared, new cache entries are generated asynchronously.",
        "operationId": "clearCacheAndScheduleWarmUp",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cache has been cleared and generation of new cache has started."
          }
        },
        "summary": "Clear and warm up caches",
        "tags": ["System Operations"]
      }
    },
    "/_action/cleanup": {
      "delete": {
        "description": "Removes cache folders that are not needed anymore.",
        "operationId": "clearOldCacheFolders",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the cleanup finished."
          }
        },
        "summary": "Clear old cache folders",
        "tags": ["System Operations"]
      }
    },
    "/_action/container_cache": {
      "delete": {
        "description": "The container cache is immediately cleared synchronously.",
        "operationId": "clearContainerCache",
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the container cache is cleared."
          }
        },
        "summary": "Clear container caches",
        "tags": ["System Operations"]
      }
    },
    "/_action/database/migrate": {
      "post": {
        "deprecated": true,
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Executes all migrations for the provided bundle name.",
        "operationId": "migrate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "default": "core",
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string"
                  },
                  "limit": {
                    "description": "Limit the amout of migrations to be executed. By default, there is no limit.",
                    "type": "integer"
                  },
                  "until": {
                    "description": "A timestamp that controls until which `creation_date` migrations are executed.\n    By default, all migrations are executed.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        },
        "summary": "Execute migrations",
        "tags": ["Database Migrations"]
      }
    },
    "/_action/database/migrate-destructive": {
      "post": {
        "deprecated": true,
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Executes all destructive migrations for the provided bundle name.",
        "operationId": "migrateDestructive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "default": "core",
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string"
                  },
                  "limit": {
                    "description": "Limit the amout of migrations to be executed. By default, there is no limit.",
                    "type": "integer"
                  },
                  "mode": {
                    "default": "safe",
                    "description": " The mode defines what type of migrations are executed.\n    * Possible values:\n    * `all`: Execute all migrations\n    * `blue-green`: Blue-green safe\n        * update from 6.a.* to 6.(a+1).0 -> migrations for major 6.a are NOT executed\n        * rollback from 6.(a+1).0 to 6.a.* is still possible\n        * update from 6.(a+1).0 to 6.(a+1).1 or higher - migrations for major 6.a are executed\n        * rollback possible from 6.(a+1).1 to 6.(a+1).0 possible\n        * but rollback to 6.a.* not possible anymore!\n    * `safe`: Executing the migrations of the penultimate major. This should always be safe",
                    "enum": ["all", "blue-green", "safe"],
                    "type": "string"
                  },
                  "until": {
                    "description": "A timestamp that controls until which `creation_date` migrations are executed.\n        By default, all migrations are executed.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        },
        "summary": "Execute destructive migrations",
        "tags": ["Database Migrations"]
      }
    },
    "/_action/database/sync-migration": {
      "post": {
        "deprecated": true,
        "description": "Will be removed in v6.5.0.0. Database migrations should only be executed over CLI. Reads all migrations of the provided bundle name and inserts them to the `migration` database table.",
        "operationId": "syncMigrations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "identifier": {
                    "default": "core",
                    "description": "Name of the bundle whose migrations are to be synced.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating a successful sync."
          }
        },
        "summary": "Sync migrations to the database",
        "tags": ["Database Migrations"]
      }
    },
    "/_action/document/{documentId}/upload": {
      "post": {
        "description": "Uploads a file for a document. This prevents the document from being dynamically generated and delivers the uploaded file instead, when the document is downloaded.\n\nNote:\n* The document is required to be `static`\n* A document can only have one media file\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "uploadToDocument",
        "parameters": [
          {
            "description": "Identifier of the document the new file should be added to.",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Name of the uploaded file.",
            "in": "query",
            "name": "fileName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Extension of the uploaded file. For example `pdf`",
            "in": "query",
            "name": "extension",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "url": {
                    "description": "The url of the document that will be downloaded.",
                    "type": "string"
                  }
                },
                "required": ["url"],
                "type": "object"
              }
            },
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documentDeepLink": {
                      "description": "A unique hash code which is required to open the document.",
                      "type": "string"
                    },
                    "documentId": {
                      "description": "Identifier of the document.",
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Document uploaded successful"
          }
        },
        "summary": "Upload a file for a document",
        "tags": ["Document Management"]
      }
    },
    "/_action/document/{documentId}/{deepLinkCode}": {
      "get": {
        "description": "Download a document by its identifier and deep link code.",
        "operationId": "downloadDocument",
        "parameters": [
          {
            "description": "Identifier of the document to be downloaded.",
            "in": "path",
            "name": "documentId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A unique hash code which was generated when the document was created.",
            "in": "path",
            "name": "deepLinkCode",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This parameter controls the `Content-Disposition` header. If set to `true` the header will be set to `attachment` else `inline`.",
            "in": "query",
            "name": "download",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The document."
          }
        },
        "summary": "Download a document",
        "tags": ["Document Management"]
      }
    },
    "/_action/index": {
      "post": {
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "index",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "skip": {
                    "description": "Array of indexers/updaters to be skipped.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating that the indexing progress startet."
          }
        },
        "summary": "Run indexer",
        "tags": ["System Operations"]
      }
    },
    "/_action/index-products": {
      "post": {
        "description": "Dispachtes an product indexing message to the message bus, with the provided ids",
        "operationId": "productIndexing",
        "responses": {
          "204": {
            "description": "Returns an empty response indicating that the message dispatched."
          }
        },
        "summary": "Send product indexing message",
        "tags": ["System Operations"]
      }
    },
    "/_action/indexing": {
      "post": {
        "description": "Runs all registered indexer in the shop asynchronously.",
        "operationId": "indexing",
        "responses": {
          "200": {
            "description": "Returns an empty response indicating that the indexing process started."
          }
        },
        "summary": "Run indexer",
        "tags": ["System Operations"]
      }
    },
    "/_action/indexing/{indexer}": {
      "post": {
        "description": "Starts a defined indexer with an offset.\n\nfor the next request. `finish: true` in the response indicates that the indexer is finished",
        "operationId": "iterate",
        "parameters": [
          {
            "description": "Name of the indexer to iterate.",
            "in": "path",
            "name": "indexer",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "offset": {
                    "description": "The offset for the iteration.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "finish": {
                      "description": "Indicates if the indexing process finished.",
                      "type": "boolean"
                    },
                    "offset": {
                      "description": "Offset to be used for the next iteration.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns information about the iteration."
          }
        },
        "summary": "Iterate an indexer",
        "tags": ["System Operations"]
      }
    },
    "/_action/mail-template/build": {
      "post": {
        "description": "Generates a preview of a mail template.",
        "operationId": "build",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mailTemplate": {
                    "description": "The content of the mail as plain text.",
                    "properties": {
                      "contentHtml": {
                        "description": "The content of mail mail template in html format.",
                        "example": "Hello {{ order.customerName }}, this is example mail content, the current date is {{ 'now'|date('d/m/Y') }}",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "mailTemplateType": {
                    "description": "Only the property `templateData` is used. It provides additional variables to the templating engine.",
                    "properties": {
                      "templateData": {
                        "additionalProperties": true,
                        "description": "An associative array that is handed over to the templating engine and can be used as variables in the mail content.",
                        "example": {
                          "messageOfTheDay": "An apple a day keeps the doctor away!",
                          "order": {
                            "customerName": "Example Customer",
                            "orderNumber": 5000
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "required": ["mailTemplateType", "mailTemplate"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The rendered preview of the mail template."
          }
        },
        "summary": "Preview a mail template",
        "tags": ["Mail Operations"]
      }
    },
    "/_action/mail-template/send": {
      "post": {
        "description": "Generates a mail from a mail template and sends it to the customer.\n\nTake a look at the `salesChannel` entity for possible values. For example `{{ salesChannel.name }}` can be used.",
        "operationId": "send",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "binAttachments": {
                    "description": "A list of binary attachments which should be added to the mail.",
                    "items": {
                      "properties": {
                        "content": {
                          "description": "Binary content of the attachment.",
                          "type": "string"
                        },
                        "fileName": {
                          "description": "File name of the attachment.",
                          "type": "string"
                        },
                        "mimeType": {
                          "description": "Mime type of the attachment.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "required": ["content", "fileName", "mimeType"],
                    "type": "array"
                  },
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  },
                  "mediaIds": {
                    "description": "List of media identifiers which should be attached to the mail.",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "recipients": {
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    },
                    "description": "A list of recipients with name and mail address.",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "type": "object"
                  },
                  "recipientsBcc": {
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    },
                    "description": "A list of recipients with name and mail address to be set in BCC.",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "type": "object"
                  },
                  "recipientsCc": {
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    },
                    "description": "A list of recipients with name and mail address to be set in CC.",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "type": "object"
                  },
                  "replyTo": {
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    },
                    "description": "A list of mail addresses with name and mail address to be set in reply to.",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "type": "object"
                  },
                  "returnPath": {
                    "additionalProperties": {
                      "description": "Name of the recipient.",
                      "type": "string"
                    },
                    "description": "A list of mail addresses with name and mail address to be set in return path.",
                    "example": {
                      "test1@example.com": "Test user 1",
                      "test2@example.com": "Test user 2"
                    },
                    "type": "object"
                  },
                  "salesChannelId": {
                    "description": "Identifier of the sales channel from which the mail should be send.",
                    "pattern": "^[0-9a-f]{32}$",
                    "type": "string"
                  },
                  "senderEmail": {
                    "description": "Mail address of the sender. If not set, `core.basicInformation.email` or `core.mailerSettings.senderAddress` will be used from the shop configuration.",
                    "type": "string"
                  },
                  "senderName": {
                    "description": "Name of the sender.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Subject of the mail.",
                    "type": "string"
                  }
                },
                "required": [
                  "recipients",
                  "salesChannelId",
                  "contentHtml",
                  "contentPlain",
                  "subject",
                  "senderName"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "size": {
                      "description": "Length of the email message",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The mail was sent successful"
          }
        },
        "summary": "Send a mail",
        "tags": ["Mail Operations"]
      }
    },
    "/_action/mail-template/validate": {
      "post": {
        "description": "Validates if content for a mail can be rendered without sending an email.",
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contentHtml": {
                    "description": "The content of the mail in HTML format.",
                    "type": "string"
                  },
                  "contentPlain": {
                    "description": "The content of the mail as plain text.",
                    "type": "string"
                  }
                },
                "required": ["contentHtml", "contentPlain"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Returns a no content response indicating the mail content was rendered successfully."
          }
        },
        "summary": "Validate a mail content",
        "tags": ["Mail Operations"]
      }
    },
    "/_action/media/{mediaId}/upload": {
      "post": {
        "description": "Adds a new file to a media entity. If the entity has an existing file, it will be replaced.\n\nThe are two methods of providing a file to this route:\n * Use a typical file upload and provide the file in the request\n * Fetch the file from an url. This only works if the `shopware.media.enable_url_upload_feature` variable is set to true in the shop environment.\nTo use file upload via url, the content type has to be `application/json` and the parameter `url` has to be provided.",
        "operationId": "upload",
        "parameters": [
          {
            "description": "Identifier of the media entity.",
            "in": "path",
            "name": "mediaId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "Name of the uploaded file. If not provided the media identifier will be used as name",
            "in": "query",
            "name": "fileName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Extension of the uploaded file. For example `png`",
            "in": "query",
            "name": "extension",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "url": {
                    "description": "The url of the media file that will be downloaded.",
                    "type": "string"
                  }
                },
                "required": ["url"],
                "type": "object"
              }
            },
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Media file uploaded successful",
            "headers": {
              "Location": {
                "description": "Contains the url to the uploaded media for a redirect.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "summary": "Upload a file to a media entity",
        "tags": ["Asset Management"]
      }
    },
    "/_action/message-queue/consume": {
      "post": {
        "description": "This route can be used to consume messenges from the message queue. It is intended to be used if\nno cronjob is configured to consume messages regulary.",
        "operationId": "consumeMessages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "receiver": {
                    "description": "The name of the transport in the messenger that should be processed.\nSee the [Symfony Messenger documentation](https://symfony.com/doc/current/messenger.html) for more information",
                    "type": "string"
                  }
                },
                "required": ["receiver"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "handledMessages": {
                      "description": "The number of messages processed.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns information about handled messages"
          }
        },
        "summary": "Consume messages from the message queue.",
        "tags": ["System Operations"]
      }
    },
    "/_action/number-range/reserve/{type}/{saleschannel}": {
      "get": {
        "description": "This endpoint provides functionality to reserve or preview a document number which can be used to create a new document using the `/_action/order/{orderId}/document/{documentTypeName}` endpoint.\n\nThe number generated by the endpoint will be reserved and the number pointer will be incremented with every call. For preview purposes, you can add the `?preview=1` parameter to the request. In that case, the number will not be incremented.",
        "operationId": "numberRangeReserve",
        "parameters": [
          {
            "description": "`technicalName` of the document type (e.g. `document_invoice`). Available types can be fetched with the `/api/document-type endpoint`.",
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sales channel for the number range. Number ranges can be defined per sales channel, so you can pass a sales channel ID here.",
            "in": "path",
            "name": "saleschannel",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If this parameter has a true value, the number will not actually be incremented, but only previewed.",
            "in": "query",
            "name": "preview",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "number": {
                      "description": "The generated (or previewed) document number.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The generated number"
          },
          "400": {
            "description": "Number range not found"
          }
        },
        "summary": "Reserve or preview a document number",
        "tags": ["Document Management"]
      }
    },
    "/_action/order/document/download": {
      "post": {
        "description": "Download a multiple documents in one pdf file.",
        "operationId": "downloadDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "pattern": "^[0-9a-f]{32}$",
                  "type": "string"
                },
                "type": "array"
              }
            }
          },
          "description": "documentIds"
        },
        "responses": {
          "200": {
            "content": {
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The documents."
          }
        },
        "summary": "Download a documents",
        "tags": ["Document Management"]
      }
    },
    "/_action/order/document/{documentTypeName}/create": {
      "post": {
        "description": "Creates documents for orders. Documents can for example be an invoice or a delivery note.",
        "operationId": "createDocuments",
        "parameters": [
          {
            "description": "The type of document to create",
            "in": "path",
            "name": "documentTypeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "config": {
                      "description": "Document specific configuration, like documentNumber, documentDate, documentComment.",
                      "type": "object"
                    },
                    "fileType": {
                      "default": "pdf",
                      "description": "Type of document file to be generated.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "Identifier of the order.",
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "referencedDocumentId": {
                      "default": "null",
                      "description": "Identifier of the reverenced document.",
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "static": {
                      "default": false,
                      "description": "Indicate if the document should be static or not.",
                      "type": "boolean"
                    },
                    "type": {
                      "description": "Type of the document to be generated.",
                      "type": "string"
                    }
                  },
                  "required": ["orderId", "type"],
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "description": "test",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Documents created successfully. The `api/_action/order/document/create` route can be used to download the document."
          }
        },
        "summary": "Create documents for orders",
        "tags": ["Document Management"]
      }
    },
    "/_action/order/{orderId}/document/{documentTypeName}": {
      "post": {
        "deprecated": true,
        "description": "Creates a document for an order. A document can for example be an invoice or a delivery note.",
        "operationId": "createOrderDocument",
        "parameters": [
          {
            "description": "Identifier of the order the document should be generated for",
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "`technicalName` of the document type. Available types can be fetched with the `/api/document-type` endpoint.",
            "in": "path",
            "name": "documentTypeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filetype of the document beeing created",
            "in": "query",
            "name": "fileType",
            "schema": {
              "default": "pdf",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "config": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Additional configuration. At least a unique `documentNumber` should be provided",
                    "properties": {
                      "documentNumber": {
                        "description": "A unique incremental number for the document. The `api.action.number-range.reserve` route can be used to fetch a free number. The type parameter for that route should match the document type, for example `document_invoice`, check the `number_range_type` entity for more types.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "referenced_document_id": {
                    "description": "Identifier of the referenced document."
                  },
                  "static": {
                    "description": "Static has to be set to `true` if a custom document is uploaded. This prevents the generation of a document and links to the uploaded media file"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documentDeepLink": {
                      "description": "A unique hash code which is required to open the document.",
                      "type": "string"
                    },
                    "documentId": {
                      "description": "Identifier of the document.",
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Document created successfully. The `api/_action/document/{documentId}/{deepLinkCode}` route can be used to download the document."
          }
        },
        "summary": "Create a document for an order",
        "tags": ["Document Management"]
      }
    },
    "/_action/order/{orderId}/state/{transition}": {
      "post": {
        "description": "Changes the order state and informs the customer via email if configured.",
        "operationId": "orderStateTransition",
        "parameters": [
          {
            "description": "Identifier of the order.",
            "in": "path",
            "name": "orderId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "in": "path",
            "name": "transition",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "stateFieldName": {
                    "default": "stateId",
                    "description": "This is the state column within the order database table. There should be no need to change it from the default.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        },
        "summary": "Transition an order to a new state",
        "tags": ["Order Management"]
      }
    },
    "/_action/order_delivery/{orderDeliveryId}/state/{transition}": {
      "post": {
        "description": "Changes the order delivery state and informs the customer via email if configured.",
        "operationId": "orderDeliveryStateTransition",
        "parameters": [
          {
            "description": "Identifier of the order delivery.",
            "in": "path",
            "name": "orderDeliveryId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition which is not possible, you will get an error that lists possible transition for the actual state.",
            "in": "path",
            "name": "transition",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sendMail": {
                    "description": "Controls if a mail should be send to the customer."
                  },
                  "stateFieldName": {
                    "default": "stateId",
                    "description": "This is the state column within the order delivery database table. There should be no need to change it from the default.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Todo: Use ref of `state_machine_transition` here"
          }
        },
        "summary": "Transition an order delivery to a new state",
        "tags": ["Order Management"]
      }
    },
    "/_action/order_transaction/{orderTransactionId}/state/{transition}": {
      "post": {
        "description": "Changes the order transaction state and informs the customer via email if configured.",
        "operationId": "orderTransactionStateTransition",
        "parameters": [
          {
            "description": "Identifier of the order transaction.",
            "in": "path",
            "name": "orderTransactionId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The `action_name` of the `state_machine_transition`. For example `process` if the order state should change from open to in progress.\n\nNote: If you choose a transition that is not available, you will get an error that lists possible transitions for the current state.",
            "in": "path",
            "name": "transition",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "documentIds": {
                    "description": "A list of document identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "mediaIds": {
                    "description": "A list of media identifiers that should be attached",
                    "items": {
                      "pattern": "^[0-9a-f]{32}$",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sendMail": {
                    "description": "Controls if a mail should be sent to the customer."
                  },
                  "stateFieldName": {
                    "default": "stateId",
                    "description": "This is the state column within the order transaction database table. There should be no need to change it from the default.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Returns information about the transition that was made. `#/components/schemas/StateMachineTransition`"
          }
        },
        "summary": "Transition an order transaction to a new state",
        "tags": ["Order Management"]
      }
    },
    "/_action/order_transaction_capture_refund/{refundId}": {
      "post": {
        "description": "Refunds an order transaction capture.",
        "operationId": "orderTransactionCaptureRefund",
        "parameters": [
          {
            "description": "Identifier of the order transaction capture refund.",
            "in": "path",
            "name": "refundId",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Refund was successful"
          },
          "400": {
            "description": "Something went wrong, while processing the refund"
          },
          "404": {
            "description": "Refund with id not found"
          }
        },
        "summary": "Refund an order transaction capture",
        "tags": ["Order Management"]
      }
    },
    "/_action/scheduled-task/min-run-interval": {
      "get": {
        "description": "Fetches the smallest interval that a scheduled task uses.",
        "operationId": "getMinRunInterval",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minRunInterval": {
                      "description": "Minimal interval in seconds.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns the minimum interval."
          }
        },
        "summary": "Get the minimum schedules task interval",
        "tags": ["System Operations"]
      }
    },
    "/_action/scheduled-task/run": {
      "post": {
        "description": "Starts the scheduled task worker to handle the next scheduled tasks.",
        "operationId": "runScheduledTasks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "description": "Success message",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns a success message indicating a successful run."
          }
        },
        "summary": "Run scheduled tasks.",
        "tags": ["System Operations"]
      }
    },
    "/_action/sync": {
      "post": {
        "description": "Starts a sync process for the list of provided actions. This can be inserts, upserts, updates and deletes on different entities. to an asynchronous process in the background. You can control the behaviour with the `single-operation` and `indexing-behavior` header.",
        "operationId": "sync",
        "parameters": [
          {
            "description": "To continue upcoming actions on errors, set the `fail-on-error` header to `false`.",
            "in": "header",
            "name": "fail-on-error",
            "schema": {
              "default": true,
              "type": "boolean"
            }
          },
          {
            "description": "Controls weather the data is written at once or in seperate transactions.\n    - `true`: Data will be written in a single transaction",
            "in": "header",
            "name": "single-operation",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Controls the indexing behavior.\n    - `disable-indexing`: Data indexing is completely disabled",
            "in": "header",
            "name": "indexing-behavior",
            "schema": {
              "enum": ["use-queue-indexing", "disable-indexing"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "properties": {
                    "action": {
                      "description": "The action indicates what should happen with the provided payload.\n    * `upsert`: The Sync API does not differ between create and update operations,\n    but always performs an upsert operation. During an upsert, the system checks whether the entity already exists in the\n    system and updates it if an identifier has been passed, otherwise a new entity is created with this identifier.\n    * `delete`: Deletes entites with the provided identifiers",
                      "enum": ["upsert", "delete"],
                      "type": "string"
                    },
                    "entity": {
                      "description": "The entity that should be processed with the payload.",
                      "example": "product",
                      "type": "string"
                    },
                    "payload": {
                      "description": "Contains a list of changesets for an entity. If the action type is `delete`,\n    a list of identifiers can be provided.",
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": ["action", "entity", "payload"],
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "description": "Object with information about the updated entites",
                      "type": "object"
                    },
                    "success": {
                      "description": "Indicator if the sync was successful.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns a sync result containing information about the updated entities"
          }
        },
        "summary": "Bulk edit entities",
        "tags": ["Bulk Operations"]
      }
    },
    "/_info/config": {
      "get": {
        "description": "Get information about the API",
        "operationId": "config",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/infoConfigResponse"
                }
              }
            },
            "description": "Returns information about the API."
          }
        },
        "summary": "Get API information",
        "tags": ["System Info & Healthcheck"]
      }
    },
    "/_info/events.json": {
      "get": {
        "description": "Get a list of about the business events.",
        "operationId": "business-events",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/businessEventsResponse"
                }
              }
            },
            "description": "Returns a list of about the business events."
          }
        },
        "summary": "Get Business events",
        "tags": ["System Info & Healthcheck"]
      }
    },
    "/_info/flow-actions.json": {
      "get": {
        "description": "Get a list of action for flow builder.",
        "operationId": "flow-actions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/flowBulderActionsResponse"
                }
              }
            },
            "description": "Returns a list of action for flow builder."
          }
        },
        "summary": "Get actions for flow builder",
        "tags": ["System Info & Healthcheck"]
      }
    },
    "/_info/openapi3.json": {
      "get": {
        "description": "Get information about the API in OpenAPI format.",
        "operationId": "api-info",
        "parameters": [
          {
            "description": "Type of the api",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": ["jsonapi", "json"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns information about the API."
          }
        },
        "summary": "Get OpenAPI Specification",
        "tags": ["System Info & Healthcheck"]
      }
    },
    "/_info/version": {
      "get": {
        "description": "Get the version of the Shopware instance",
        "operationId": "infoShopwareVersion",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "version": {
                      "description": "The Shopware version.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns the version of the Shopware instance."
          }
        },
        "summary": "Get the Shopware version",
        "tags": ["System Info & Healthcheck"]
      }
    },
    "/acl-role": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRoleList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AclRole"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AclRole"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/acl-role?limit=25"
                                },
                                "last": {
                                  "example": "/acl-role?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/acl-role?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/acl-role?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Acl Role resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Acl Role resources",
        "tags": ["Acl Role"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createAclRole",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AclRole"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AclRole"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AclRole"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Acl Role resources",
        "tags": ["Acl Role"]
      }
    },
    "/acl-role/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteAclRole",
        "parameters": [
          {
            "description": "Identifier for the acl_role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Acl Role resource",
        "tags": ["Acl Role"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getAclRole",
        "parameters": [
          {
            "description": "Identifier for the acl_role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AclRole"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Acl Role resource",
        "tags": ["Acl Role"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateAclRole",
        "parameters": [
          {
            "description": "Identifier for the acl_role",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AclRole"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AclRole"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Acl Role resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AclRole"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AclRole"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AclRole"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Acl Role resource",
        "tags": ["Acl Role"]
      }
    },
    "/app": {
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/App"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/App"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app?limit=25"
                                },
                                "last": {
                                  "example": "/app?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App resources",
        "tags": ["App"],
        "x-zuplo-route": {
          "corsPolicy": "none",
          "handler": {
            "export": "default",
            "module": "$import(./modules/hello-world)",
            "options": {}
          },
          "policies": {
            "inbound": []
          }
        }
      },
      "post": {
        "description": "Available since: 6.3.1.0",
        "operationId": "createApp",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/App"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of App"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App resources",
        "tags": ["App"]
      }
    },
    "/app-action-button": {
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButtonList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppActionButton"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppActionButton"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-action-button?limit=25"
                                },
                                "last": {
                                  "example": "/app-action-button?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-action-button?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-action-button?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Action Button resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Action Button resources",
        "tags": ["App Action Button"]
      },
      "post": {
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppActionButton",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppActionButton"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppActionButton"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppActionButton"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Action Button resources",
        "tags": ["App Action Button"]
      }
    },
    "/app-action-button/{id}": {
      "delete": {
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppActionButton",
        "parameters": [
          {
            "description": "Identifier for the app_action_button",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Action Button resource",
        "tags": ["App Action Button"]
      },
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppActionButton",
        "parameters": [
          {
            "description": "Identifier for the app_action_button",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppActionButton"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Action Button resource",
        "tags": ["App Action Button"]
      },
      "patch": {
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppActionButton",
        "parameters": [
          {
            "description": "Identifier for the app_action_button",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppActionButton"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppActionButton"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Action Button resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppActionButton"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppActionButton"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppActionButton"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Action Button resource",
        "tags": ["App Action Button"]
      }
    },
    "/app-administration-snippet": {
      "get": {
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippetList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppAdministrationSnippet"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppAdministrationSnippet"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-administration-snippet?limit=25"
                                },
                                "last": {
                                  "example": "/app-administration-snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-administration-snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-administration-snippet?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Administration Snippet resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Administration Snippet resources",
        "tags": ["App Administration Snippet"]
      },
      "post": {
        "description": "Available since: 6.4.15.0",
        "operationId": "createAppAdministrationSnippet",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppAdministrationSnippet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Administration Snippet resources",
        "tags": ["App Administration Snippet"]
      }
    },
    "/app-administration-snippet/{id}": {
      "delete": {
        "description": "Available since: 6.4.15.0",
        "operationId": "deleteAppAdministrationSnippet",
        "parameters": [
          {
            "description": "Identifier for the app_administration_snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Administration Snippet resource",
        "tags": ["App Administration Snippet"]
      },
      "get": {
        "description": "Available since: 6.4.15.0",
        "operationId": "getAppAdministrationSnippet",
        "parameters": [
          {
            "description": "Identifier for the app_administration_snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppAdministrationSnippet"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Administration Snippet resource",
        "tags": ["App Administration Snippet"]
      },
      "patch": {
        "description": "Available since: 6.4.15.0",
        "operationId": "updateAppAdministrationSnippet",
        "parameters": [
          {
            "description": "Identifier for the app_administration_snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAdministrationSnippet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppAdministrationSnippet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Administration Snippet resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAdministrationSnippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppAdministrationSnippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppAdministrationSnippet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Administration Snippet resource",
        "tags": ["App Administration Snippet"]
      }
    },
    "/app-cms-block": {
      "get": {
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlockList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppCmsBlock"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppCmsBlock"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-cms-block?limit=25"
                                },
                                "last": {
                                  "example": "/app-cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-cms-block?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Cms Block resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Cms Block resources",
        "tags": ["App Cms Block"]
      },
      "post": {
        "description": "Available since: 6.4.2.0",
        "operationId": "createAppCmsBlock",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCmsBlock"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppCmsBlock"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppCmsBlock"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Cms Block resources",
        "tags": ["App Cms Block"]
      }
    },
    "/app-cms-block/{id}": {
      "delete": {
        "description": "Available since: 6.4.2.0",
        "operationId": "deleteAppCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the app_cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Cms Block resource",
        "tags": ["App Cms Block"]
      },
      "get": {
        "description": "Available since: 6.4.2.0",
        "operationId": "getAppCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the app_cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppCmsBlock"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Cms Block resource",
        "tags": ["App Cms Block"]
      },
      "patch": {
        "description": "Available since: 6.4.2.0",
        "operationId": "updateAppCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the app_cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppCmsBlock"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppCmsBlock"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Cms Block resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppCmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppCmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppCmsBlock"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Cms Block resource",
        "tags": ["App Cms Block"]
      }
    },
    "/app-flow-action": {
      "get": {
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowActionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppFlowAction"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppFlowAction"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-flow-action?limit=25"
                                },
                                "last": {
                                  "example": "/app-flow-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-flow-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-flow-action?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Flow Action resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Flow Action resources",
        "tags": ["App Flow Action"]
      },
      "post": {
        "description": "Available since: 6.4.10.0",
        "operationId": "createAppFlowAction",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFlowAction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppFlowAction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppFlowAction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Flow Action resources",
        "tags": ["App Flow Action"]
      }
    },
    "/app-flow-action/{id}": {
      "delete": {
        "description": "Available since: 6.4.10.0",
        "operationId": "deleteAppFlowAction",
        "parameters": [
          {
            "description": "Identifier for the app_flow_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Flow Action resource",
        "tags": ["App Flow Action"]
      },
      "get": {
        "description": "Available since: 6.4.10.0",
        "operationId": "getAppFlowAction",
        "parameters": [
          {
            "description": "Identifier for the app_flow_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppFlowAction"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Flow Action resource",
        "tags": ["App Flow Action"]
      },
      "patch": {
        "description": "Available since: 6.4.10.0",
        "operationId": "updateAppFlowAction",
        "parameters": [
          {
            "description": "Identifier for the app_flow_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppFlowAction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppFlowAction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Flow Action resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppFlowAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppFlowAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppFlowAction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Flow Action resource",
        "tags": ["App Flow Action"]
      }
    },
    "/app-payment-method": {
      "get": {
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethodList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppPaymentMethod"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppPaymentMethod"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/app-payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-payment-method?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Payment Method resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Payment Method resources",
        "tags": ["App Payment Method"]
      },
      "post": {
        "description": "Available since: 6.4.1.0",
        "operationId": "createAppPaymentMethod",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPaymentMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppPaymentMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppPaymentMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Payment Method resources",
        "tags": ["App Payment Method"]
      }
    },
    "/app-payment-method/{id}": {
      "delete": {
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteAppPaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the app_payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Payment Method resource",
        "tags": ["App Payment Method"]
      },
      "get": {
        "description": "Available since: 6.4.1.0",
        "operationId": "getAppPaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the app_payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppPaymentMethod"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Payment Method resource",
        "tags": ["App Payment Method"]
      },
      "patch": {
        "description": "Available since: 6.4.1.0",
        "operationId": "updateAppPaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the app_payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppPaymentMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppPaymentMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Payment Method resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppPaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppPaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppPaymentMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Payment Method resource",
        "tags": ["App Payment Method"]
      }
    },
    "/app-script-condition": {
      "get": {
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptConditionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppScriptCondition"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppScriptCondition"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-script-condition?limit=25"
                                },
                                "last": {
                                  "example": "/app-script-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-script-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-script-condition?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Script Condition resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Script Condition resources",
        "tags": ["App Script Condition"]
      },
      "post": {
        "description": "Available since: 6.4.10.3",
        "operationId": "createAppScriptCondition",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScriptCondition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppScriptCondition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppScriptCondition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Script Condition resources",
        "tags": ["App Script Condition"]
      }
    },
    "/app-script-condition/{id}": {
      "delete": {
        "description": "Available since: 6.4.10.3",
        "operationId": "deleteAppScriptCondition",
        "parameters": [
          {
            "description": "Identifier for the app_script_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Script Condition resource",
        "tags": ["App Script Condition"]
      },
      "get": {
        "description": "Available since: 6.4.10.3",
        "operationId": "getAppScriptCondition",
        "parameters": [
          {
            "description": "Identifier for the app_script_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppScriptCondition"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Script Condition resource",
        "tags": ["App Script Condition"]
      },
      "patch": {
        "description": "Available since: 6.4.10.3",
        "operationId": "updateAppScriptCondition",
        "parameters": [
          {
            "description": "Identifier for the app_script_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppScriptCondition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppScriptCondition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Script Condition resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppScriptCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppScriptCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppScriptCondition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Script Condition resource",
        "tags": ["App Script Condition"]
      }
    },
    "/app-template": {
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/AppTemplate"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/AppTemplate"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/app-template?limit=25"
                                },
                                "last": {
                                  "example": "/app-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/app-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/app-template?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of App Template resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of App Template resources",
        "tags": ["App Template"]
      },
      "post": {
        "description": "Available since: 6.3.1.0",
        "operationId": "createAppTemplate",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new App Template resources",
        "tags": ["App Template"]
      }
    },
    "/app-template/{id}": {
      "delete": {
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteAppTemplate",
        "parameters": [
          {
            "description": "Identifier for the app_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App Template resource",
        "tags": ["App Template"]
      },
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getAppTemplate",
        "parameters": [
          {
            "description": "Identifier for the app_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppTemplate"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App Template resource",
        "tags": ["App Template"]
      },
      "patch": {
        "description": "Available since: 6.3.1.0",
        "operationId": "updateAppTemplate",
        "parameters": [
          {
            "description": "Identifier for the app_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/AppTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App Template resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AppTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of AppTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App Template resource",
        "tags": ["App Template"]
      }
    },
    "/app/{id}": {
      "delete": {
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteApp",
        "parameters": [
          {
            "description": "Identifier for the app",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a App resource",
        "tags": ["App"]
      },
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getApp",
        "parameters": [
          {
            "description": "Identifier for the app",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of App"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a App resource",
        "tags": ["App"]
      },
      "patch": {
        "description": "Available since: 6.3.1.0",
        "operationId": "updateApp",
        "parameters": [
          {
            "description": "Identifier for the app",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/App"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/App"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a App resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/App"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/App"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of App"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a App resource",
        "tags": ["App"]
      }
    },
    "/category": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategoryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Category"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Category"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/category?limit=25"
                                },
                                "last": {
                                  "example": "/category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/category?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Category resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Category resources",
        "tags": ["Category"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCategory",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Category"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Category resources",
        "tags": ["Category"]
      }
    },
    "/category/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCategory",
        "parameters": [
          {
            "description": "Identifier for the category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Category resource",
        "tags": ["Category"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCategory",
        "parameters": [
          {
            "description": "Identifier for the category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Category"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Category resource",
        "tags": ["Category"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCategory",
        "parameters": [
          {
            "description": "Identifier for the category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Category"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Category resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Category"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Category"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Category resource",
        "tags": ["Category"]
      }
    },
    "/cms-block": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlockList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CmsBlock"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CmsBlock"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/cms-block?limit=25"
                                },
                                "last": {
                                  "example": "/cms-block?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-block?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-block?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Cms Block resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Cms Block resources",
        "tags": ["Cms Block"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsBlock",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsBlock"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsBlock"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsBlock"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Cms Block resources",
        "tags": ["Cms Block"]
      }
    },
    "/cms-block/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Cms Block resource",
        "tags": ["Cms Block"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsBlock"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Cms Block resource",
        "tags": ["Cms Block"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsBlock",
        "parameters": [
          {
            "description": "Identifier for the cms_block",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsBlock"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsBlock"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Cms Block resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsBlock"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsBlock"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsBlock"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Cms Block resource",
        "tags": ["Cms Block"]
      }
    },
    "/cms-page": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPageList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CmsPage"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CmsPage"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/cms-page?limit=25"
                                },
                                "last": {
                                  "example": "/cms-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-page?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Cms Page resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Cms Page resources",
        "tags": ["Cms Page"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsPage",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsPage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsPage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsPage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Cms Page resources",
        "tags": ["Cms Page"]
      }
    },
    "/cms-page/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsPage",
        "parameters": [
          {
            "description": "Identifier for the cms_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Cms Page resource",
        "tags": ["Cms Page"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsPage",
        "parameters": [
          {
            "description": "Identifier for the cms_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsPage"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Cms Page resource",
        "tags": ["Cms Page"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsPage",
        "parameters": [
          {
            "description": "Identifier for the cms_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsPage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsPage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Cms Page resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsPage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Cms Page resource",
        "tags": ["Cms Page"]
      }
    },
    "/cms-section": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSectionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CmsSection"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CmsSection"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/cms-section?limit=25"
                                },
                                "last": {
                                  "example": "/cms-section?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-section?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-section?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Cms Section resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Cms Section resources",
        "tags": ["Cms Section"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSection",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSection"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSection"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSection"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Cms Section resources",
        "tags": ["Cms Section"]
      }
    },
    "/cms-section/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSection",
        "parameters": [
          {
            "description": "Identifier for the cms_section",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Cms Section resource",
        "tags": ["Cms Section"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSection",
        "parameters": [
          {
            "description": "Identifier for the cms_section",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSection"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Cms Section resource",
        "tags": ["Cms Section"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSection",
        "parameters": [
          {
            "description": "Identifier for the cms_section",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSection"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSection"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Cms Section resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSection"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSection"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSection"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Cms Section resource",
        "tags": ["Cms Section"]
      }
    },
    "/cms-slot": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlotList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CmsSlot"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CmsSlot"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/cms-slot?limit=25"
                                },
                                "last": {
                                  "example": "/cms-slot?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/cms-slot?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/cms-slot?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Cms Slot resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Cms Slot resources",
        "tags": ["Cms Slot"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCmsSlot",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSlot"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSlot"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSlot"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Cms Slot resources",
        "tags": ["Cms Slot"]
      }
    },
    "/cms-slot/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCmsSlot",
        "parameters": [
          {
            "description": "Identifier for the cms_slot",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Cms Slot resource",
        "tags": ["Cms Slot"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCmsSlot",
        "parameters": [
          {
            "description": "Identifier for the cms_slot",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSlot"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Cms Slot resource",
        "tags": ["Cms Slot"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCmsSlot",
        "parameters": [
          {
            "description": "Identifier for the cms_slot",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CmsSlot"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CmsSlot"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Cms Slot resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CmsSlot"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CmsSlot"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CmsSlot"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Cms Slot resource",
        "tags": ["Cms Slot"]
      }
    },
    "/country": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Country"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Country"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/country?limit=25"
                                },
                                "last": {
                                  "example": "/country?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Country resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Country resources",
        "tags": ["Country"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountry",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Country"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Country resources",
        "tags": ["Country"]
      }
    },
    "/country-state": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryStateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CountryState"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CountryState"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/country-state?limit=25"
                                },
                                "last": {
                                  "example": "/country-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/country-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/country-state?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Country State resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Country State resources",
        "tags": ["Country State"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCountryState",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CountryState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CountryState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Country State resources",
        "tags": ["Country State"]
      }
    },
    "/country-state/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountryState",
        "parameters": [
          {
            "description": "Identifier for the country_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Country State resource",
        "tags": ["Country State"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountryState",
        "parameters": [
          {
            "description": "Identifier for the country_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CountryState"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Country State resource",
        "tags": ["Country State"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountryState",
        "parameters": [
          {
            "description": "Identifier for the country_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CountryState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CountryState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Country State resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CountryState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CountryState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Country State resource",
        "tags": ["Country State"]
      }
    },
    "/country/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCountry",
        "parameters": [
          {
            "description": "Identifier for the country",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Country resource",
        "tags": ["Country"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCountry",
        "parameters": [
          {
            "description": "Identifier for the country",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Country"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Country resource",
        "tags": ["Country"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCountry",
        "parameters": [
          {
            "description": "Identifier for the country",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Country"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Country"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Country resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Country"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Country"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Country resource",
        "tags": ["Country"]
      }
    },
    "/currency": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrencyList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Currency"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/currency?limit=25"
                                },
                                "last": {
                                  "example": "/currency?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Currency resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Currency resources",
        "tags": ["Currency"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCurrency",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Currency"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Currency"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Currency resources",
        "tags": ["Currency"]
      }
    },
    "/currency-country-rounding": {
      "get": {
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRoundingList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CurrencyCountryRounding"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CurrencyCountryRounding"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/currency-country-rounding?limit=25"
                                },
                                "last": {
                                  "example": "/currency-country-rounding?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/currency-country-rounding?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/currency-country-rounding?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Currency Country Rounding resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Currency Country Rounding resources",
        "tags": ["Currency Country Rounding"]
      },
      "post": {
        "description": "Available since: 6.4.0.0",
        "operationId": "createCurrencyCountryRounding",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CurrencyCountryRounding"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Currency Country Rounding resources",
        "tags": ["Currency Country Rounding"]
      }
    },
    "/currency-country-rounding/{id}": {
      "delete": {
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteCurrencyCountryRounding",
        "parameters": [
          {
            "description": "Identifier for the currency_country_rounding",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Currency Country Rounding resource",
        "tags": ["Currency Country Rounding"]
      },
      "get": {
        "description": "Available since: 6.4.0.0",
        "operationId": "getCurrencyCountryRounding",
        "parameters": [
          {
            "description": "Identifier for the currency_country_rounding",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CurrencyCountryRounding"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Currency Country Rounding resource",
        "tags": ["Currency Country Rounding"]
      },
      "patch": {
        "description": "Available since: 6.4.0.0",
        "operationId": "updateCurrencyCountryRounding",
        "parameters": [
          {
            "description": "Identifier for the currency_country_rounding",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCountryRounding"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CurrencyCountryRounding"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Currency Country Rounding resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyCountryRounding"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyCountryRounding"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CurrencyCountryRounding"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Currency Country Rounding resource",
        "tags": ["Currency Country Rounding"]
      }
    },
    "/currency/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCurrency",
        "parameters": [
          {
            "description": "Identifier for the currency",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Currency resource",
        "tags": ["Currency"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCurrency",
        "parameters": [
          {
            "description": "Identifier for the currency",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Currency"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Currency resource",
        "tags": ["Currency"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCurrency",
        "parameters": [
          {
            "description": "Identifier for the currency",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Currency"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Currency"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Currency resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Currency"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Currency"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Currency"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Currency resource",
        "tags": ["Currency"]
      }
    },
    "/custom-entity": {
      "get": {
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntityList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomEntity"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomEntity"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/custom-entity?limit=25"
                                },
                                "last": {
                                  "example": "/custom-entity?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-entity?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-entity?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Custom Entity resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Custom Entity resources",
        "tags": ["Custom Entity"]
      },
      "post": {
        "description": "Available since: 6.4.9.0",
        "operationId": "createCustomEntity",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEntity"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomEntity"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomEntity"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Custom Entity resources",
        "tags": ["Custom Entity"]
      }
    },
    "/custom-entity/{id}": {
      "delete": {
        "description": "Available since: 6.4.9.0",
        "operationId": "deleteCustomEntity",
        "parameters": [
          {
            "description": "Identifier for the custom_entity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Custom Entity resource",
        "tags": ["Custom Entity"]
      },
      "get": {
        "description": "Available since: 6.4.9.0",
        "operationId": "getCustomEntity",
        "parameters": [
          {
            "description": "Identifier for the custom_entity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomEntity"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Custom Entity resource",
        "tags": ["Custom Entity"]
      },
      "patch": {
        "description": "Available since: 6.4.9.0",
        "operationId": "updateCustomEntity",
        "parameters": [
          {
            "description": "Identifier for the custom_entity",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomEntity"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomEntity"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Custom Entity resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomEntity"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomEntity"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomEntity"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Custom Entity resource",
        "tags": ["Custom Entity"]
      }
    },
    "/custom-field": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomField"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomField"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/custom-field?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Custom Field resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Custom Field resources",
        "tags": ["Custom Field"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomField",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomField"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomField"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Custom Field resources",
        "tags": ["Custom Field"]
      }
    },
    "/custom-field-set": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomFieldSet"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSet"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Custom Field Set resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Custom Field Set resources",
        "tags": ["Custom Field Set"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSet",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Custom Field Set resources",
        "tags": ["Custom Field Set"]
      }
    },
    "/custom-field-set-relation": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelationList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomFieldSetRelation"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomFieldSetRelation"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/custom-field-set-relation?limit=25"
                                },
                                "last": {
                                  "example": "/custom-field-set-relation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/custom-field-set-relation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/custom-field-set-relation?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Custom Field Set Relation resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Custom Field Set Relation resources",
        "tags": ["Custom Field Set Relation"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomFieldSetRelation",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSetRelation"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Custom Field Set Relation resources",
        "tags": ["Custom Field Set Relation"]
      }
    },
    "/custom-field-set-relation/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSetRelation",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set_relation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Custom Field Set Relation resource",
        "tags": ["Custom Field Set Relation"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSetRelation",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set_relation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSetRelation"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Custom Field Set Relation resource",
        "tags": ["Custom Field Set Relation"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSetRelation",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set_relation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSetRelation"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSetRelation"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Custom Field Set Relation resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSetRelation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSetRelation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSetRelation"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Custom Field Set Relation resource",
        "tags": ["Custom Field Set Relation"]
      }
    },
    "/custom-field-set/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomFieldSet",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Custom Field Set resource",
        "tags": ["Custom Field Set"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomFieldSet",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSet"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Custom Field Set resource",
        "tags": ["Custom Field Set"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomFieldSet",
        "parameters": [
          {
            "description": "Identifier for the custom_field_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFieldSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomFieldSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Custom Field Set resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomFieldSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomFieldSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Custom Field Set resource",
        "tags": ["Custom Field Set"]
      }
    },
    "/custom-field/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomField",
        "parameters": [
          {
            "description": "Identifier for the custom_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Custom Field resource",
        "tags": ["Custom Field"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomField",
        "parameters": [
          {
            "description": "Identifier for the custom_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomField"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Custom Field resource",
        "tags": ["Custom Field"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomField",
        "parameters": [
          {
            "description": "Identifier for the custom_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomField"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Custom Field resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomField"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Custom Field resource",
        "tags": ["Custom Field"]
      }
    },
    "/customer": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Customer"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer?limit=25"
                                },
                                "last": {
                                  "example": "/customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer resources",
        "tags": ["Customer"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomer",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Customer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer resources",
        "tags": ["Customer"]
      }
    },
    "/customer-address": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddressList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomerAddress"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomerAddress"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer-address?limit=25"
                                },
                                "last": {
                                  "example": "/customer-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-address?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer Address resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer Address resources",
        "tags": ["Customer Address"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerAddress",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerAddress"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer Address resources",
        "tags": ["Customer Address"]
      }
    },
    "/customer-address/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerAddress",
        "parameters": [
          {
            "description": "Identifier for the customer_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer Address resource",
        "tags": ["Customer Address"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerAddress",
        "parameters": [
          {
            "description": "Identifier for the customer_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerAddress"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer Address resource",
        "tags": ["Customer Address"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerAddress",
        "parameters": [
          {
            "description": "Identifier for the customer_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerAddress"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerAddress"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer Address resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerAddress"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer Address resource",
        "tags": ["Customer Address"]
      }
    },
    "/customer-group": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroupList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomerGroup"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomerGroup"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer-group?limit=25"
                                },
                                "last": {
                                  "example": "/customer-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-group?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer Group resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer Group resources",
        "tags": ["Customer Group"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createCustomerGroup",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer Group resources",
        "tags": ["Customer Group"]
      }
    },
    "/customer-group/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomerGroup",
        "parameters": [
          {
            "description": "Identifier for the customer_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer Group resource",
        "tags": ["Customer Group"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomerGroup",
        "parameters": [
          {
            "description": "Identifier for the customer_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerGroup"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer Group resource",
        "tags": ["Customer Group"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomerGroup",
        "parameters": [
          {
            "description": "Identifier for the customer_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer Group resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer Group resource",
        "tags": ["Customer Group"]
      }
    },
    "/customer-recovery": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecoveryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomerRecovery"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomerRecovery"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/customer-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-recovery?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer Recovery resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer Recovery resources",
        "tags": ["Customer Recovery"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createCustomerRecovery",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRecovery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerRecovery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerRecovery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer Recovery resources",
        "tags": ["Customer Recovery"]
      }
    },
    "/customer-recovery/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteCustomerRecovery",
        "parameters": [
          {
            "description": "Identifier for the customer_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer Recovery resource",
        "tags": ["Customer Recovery"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getCustomerRecovery",
        "parameters": [
          {
            "description": "Identifier for the customer_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerRecovery"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer Recovery resource",
        "tags": ["Customer Recovery"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateCustomerRecovery",
        "parameters": [
          {
            "description": "Identifier for the customer_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerRecovery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerRecovery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer Recovery resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerRecovery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer Recovery resource",
        "tags": ["Customer Recovery"]
      }
    },
    "/customer-wishlist": {
      "get": {
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlist"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlist"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer Wishlist resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer Wishlist resources",
        "tags": ["Customer Wishlist"]
      },
      "post": {
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlist",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlist"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlist"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlist"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer Wishlist resources",
        "tags": ["Customer Wishlist"]
      }
    },
    "/customer-wishlist-product": {
      "get": {
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProductList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/CustomerWishlistProduct"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/CustomerWishlistProduct"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/customer-wishlist-product?limit=25"
                                },
                                "last": {
                                  "example": "/customer-wishlist-product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/customer-wishlist-product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/customer-wishlist-product?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Customer Wishlist Product resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Customer Wishlist Product resources",
        "tags": ["Customer Wishlist Product"]
      },
      "post": {
        "description": "Available since: 6.3.4.0",
        "operationId": "createCustomerWishlistProduct",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlistProduct"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Customer Wishlist Product resources",
        "tags": ["Customer Wishlist Product"]
      }
    },
    "/customer-wishlist-product/{id}": {
      "delete": {
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlistProduct",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist_product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer Wishlist Product resource",
        "tags": ["Customer Wishlist Product"]
      },
      "get": {
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlistProduct",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist_product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlistProduct"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer Wishlist Product resource",
        "tags": ["Customer Wishlist Product"]
      },
      "patch": {
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlistProduct",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist_product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlistProduct"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlistProduct"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer Wishlist Product resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlistProduct"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlistProduct"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlistProduct"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer Wishlist Product resource",
        "tags": ["Customer Wishlist Product"]
      }
    },
    "/customer-wishlist/{id}": {
      "delete": {
        "description": "Available since: 6.3.4.0",
        "operationId": "deleteCustomerWishlist",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer Wishlist resource",
        "tags": ["Customer Wishlist"]
      },
      "get": {
        "description": "Available since: 6.3.4.0",
        "operationId": "getCustomerWishlist",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlist"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer Wishlist resource",
        "tags": ["Customer Wishlist"]
      },
      "patch": {
        "description": "Available since: 6.3.4.0",
        "operationId": "updateCustomerWishlist",
        "parameters": [
          {
            "description": "Identifier for the customer_wishlist",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerWishlist"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/CustomerWishlist"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer Wishlist resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerWishlist"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CustomerWishlist"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of CustomerWishlist"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer Wishlist resource",
        "tags": ["Customer Wishlist"]
      }
    },
    "/customer/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "description": "Identifier for the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Customer resource",
        "tags": ["Customer"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getCustomer",
        "parameters": [
          {
            "description": "Identifier for the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Customer"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Customer resource",
        "tags": ["Customer"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateCustomer",
        "parameters": [
          {
            "description": "Identifier for the customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Customer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Customer resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Customer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Customer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Customer resource",
        "tags": ["Customer"]
      }
    },
    "/dead-message": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeadMessageList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/DeadMessage"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/DeadMessage"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/dead-message?limit=25"
                                },
                                "last": {
                                  "example": "/dead-message?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/dead-message?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/dead-message?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Dead Message resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Dead Message resources",
        "tags": ["Dead Message"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDeadMessage",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeadMessage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeadMessage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeadMessage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Dead Message resources",
        "tags": ["Dead Message"]
      }
    },
    "/dead-message/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDeadMessage",
        "parameters": [
          {
            "description": "Identifier for the dead_message",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Dead Message resource",
        "tags": ["Dead Message"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeadMessage",
        "parameters": [
          {
            "description": "Identifier for the dead_message",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeadMessage"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Dead Message resource",
        "tags": ["Dead Message"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDeadMessage",
        "parameters": [
          {
            "description": "Identifier for the dead_message",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeadMessage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeadMessage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Dead Message resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeadMessage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeadMessage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeadMessage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Dead Message resource",
        "tags": ["Dead Message"]
      }
    },
    "/delivery-time": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTimeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/DeliveryTime"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/DeliveryTime"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/delivery-time?limit=25"
                                },
                                "last": {
                                  "example": "/delivery-time?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/delivery-time?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/delivery-time?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Delivery Time resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Delivery Time resources",
        "tags": ["Delivery Time"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDeliveryTime",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryTime"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeliveryTime"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeliveryTime"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Delivery Time resources",
        "tags": ["Delivery Time"]
      }
    },
    "/delivery-time/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDeliveryTime",
        "parameters": [
          {
            "description": "Identifier for the delivery_time",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Delivery Time resource",
        "tags": ["Delivery Time"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDeliveryTime",
        "parameters": [
          {
            "description": "Identifier for the delivery_time",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeliveryTime"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Delivery Time resource",
        "tags": ["Delivery Time"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDeliveryTime",
        "parameters": [
          {
            "description": "Identifier for the delivery_time",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryTime"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DeliveryTime"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Delivery Time resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryTime"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DeliveryTime"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DeliveryTime"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Delivery Time resource",
        "tags": ["Delivery Time"]
      }
    },
    "/document": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Document"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/document?limit=25"
                                },
                                "last": {
                                  "example": "/document?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Document resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Document resources",
        "tags": ["Document"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocument",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Document"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Document resources",
        "tags": ["Document"]
      }
    },
    "/document-base-config": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfig"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfig"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/document-base-config?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Document Base Config resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Document Base Config resources",
        "tags": ["Document Base Config"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfig",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Document Base Config resources",
        "tags": ["Document Base Config"]
      }
    },
    "/document-base-config-sales-channel": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannelList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/document-base-config-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-base-config-sales-channel?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Document Base Config Sales Channel resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Document Base Config Sales Channel resources",
        "tags": ["Document Base Config Sales Channel"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfigSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Document Base Config Sales Channel resources",
        "tags": ["Document Base Config Sales Channel"]
      }
    },
    "/document-base-config-sales-channel/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the document_base_config_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Document Base Config Sales Channel resource",
        "tags": ["Document Base Config Sales Channel"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the document_base_config_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfigSalesChannel"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Document Base Config Sales Channel resource",
        "tags": ["Document Base Config Sales Channel"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfigSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the document_base_config_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Document Base Config Sales Channel resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfigSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfigSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Document Base Config Sales Channel resource",
        "tags": ["Document Base Config Sales Channel"]
      }
    },
    "/document-base-config/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentBaseConfig",
        "parameters": [
          {
            "description": "Identifier for the document_base_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Document Base Config resource",
        "tags": ["Document Base Config"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentBaseConfig",
        "parameters": [
          {
            "description": "Identifier for the document_base_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfig"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Document Base Config resource",
        "tags": ["Document Base Config"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentBaseConfig",
        "parameters": [
          {
            "description": "Identifier for the document_base_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBaseConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentBaseConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Document Base Config resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentBaseConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentBaseConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentBaseConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Document Base Config resource",
        "tags": ["Document Base Config"]
      }
    },
    "/document-type": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentTypeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/DocumentType"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/DocumentType"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/document-type?limit=25"
                                },
                                "last": {
                                  "example": "/document-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/document-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/document-type?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Document Type resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Document Type resources",
        "tags": ["Document Type"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createDocumentType",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Document Type resources",
        "tags": ["Document Type"]
      }
    },
    "/document-type/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocumentType",
        "parameters": [
          {
            "description": "Identifier for the document_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Document Type resource",
        "tags": ["Document Type"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocumentType",
        "parameters": [
          {
            "description": "Identifier for the document_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentType"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Document Type resource",
        "tags": ["Document Type"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocumentType",
        "parameters": [
          {
            "description": "Identifier for the document_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/DocumentType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Document Type resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DocumentType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of DocumentType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Document Type resource",
        "tags": ["Document Type"]
      }
    },
    "/document/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "description": "Identifier for the document",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Document resource",
        "tags": ["Document"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getDocument",
        "parameters": [
          {
            "description": "Identifier for the document",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Document"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Document resource",
        "tags": ["Document"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateDocument",
        "parameters": [
          {
            "description": "Identifier for the document",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Document"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Document resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Document"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Document resource",
        "tags": ["Document"]
      }
    },
    "/event-action": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getEventActionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/EventAction"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/EventAction"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/event-action?limit=25"
                                },
                                "last": {
                                  "example": "/event-action?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/event-action?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/event-action?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Event Action resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Event Action resources",
        "tags": ["Event Action"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createEventAction",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventAction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of EventAction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Event Action resources",
        "tags": ["Event Action"]
      }
    },
    "/event-action/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteEventAction",
        "parameters": [
          {
            "description": "Identifier for the event_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Event Action resource",
        "tags": ["Event Action"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getEventAction",
        "parameters": [
          {
            "description": "Identifier for the event_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of EventAction"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Event Action resource",
        "tags": ["Event Action"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateEventAction",
        "parameters": [
          {
            "description": "Identifier for the event_action",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/EventAction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Event Action resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventAction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EventAction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of EventAction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Event Action resource",
        "tags": ["Event Action"]
      }
    },
    "/flow": {
      "get": {
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Flow"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Flow"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/flow?limit=25"
                                },
                                "last": {
                                  "example": "/flow?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Flow resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Flow resources",
        "tags": ["Flow"]
      },
      "post": {
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlow",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flow"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Flow"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Flow"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Flow resources",
        "tags": ["Flow"]
      }
    },
    "/flow-sequence": {
      "get": {
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequenceList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/FlowSequence"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/FlowSequence"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/flow-sequence?limit=25"
                                },
                                "last": {
                                  "example": "/flow-sequence?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/flow-sequence?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/flow-sequence?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Flow Sequence resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Flow Sequence resources",
        "tags": ["Flow Sequence"]
      },
      "post": {
        "description": "Available since: 6.4.6.0",
        "operationId": "createFlowSequence",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSequence"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowSequence"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of FlowSequence"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Flow Sequence resources",
        "tags": ["Flow Sequence"]
      }
    },
    "/flow-sequence/{id}": {
      "delete": {
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlowSequence",
        "parameters": [
          {
            "description": "Identifier for the flow_sequence",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Flow Sequence resource",
        "tags": ["Flow Sequence"]
      },
      "get": {
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlowSequence",
        "parameters": [
          {
            "description": "Identifier for the flow_sequence",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of FlowSequence"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Flow Sequence resource",
        "tags": ["Flow Sequence"]
      },
      "patch": {
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlowSequence",
        "parameters": [
          {
            "description": "Identifier for the flow_sequence",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowSequence"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FlowSequence"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Flow Sequence resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowSequence"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/FlowSequence"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of FlowSequence"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Flow Sequence resource",
        "tags": ["Flow Sequence"]
      }
    },
    "/flow/{id}": {
      "delete": {
        "description": "Available since: 6.4.6.0",
        "operationId": "deleteFlow",
        "parameters": [
          {
            "description": "Identifier for the flow",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Flow resource",
        "tags": ["Flow"]
      },
      "get": {
        "description": "Available since: 6.4.6.0",
        "operationId": "getFlow",
        "parameters": [
          {
            "description": "Identifier for the flow",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Flow"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Flow resource",
        "tags": ["Flow"]
      },
      "patch": {
        "description": "Available since: 6.4.6.0",
        "operationId": "updateFlow",
        "parameters": [
          {
            "description": "Identifier for the flow",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Flow"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Flow"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Flow resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flow"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Flow"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Flow"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Flow resource",
        "tags": ["Flow"]
      }
    },
    "/import-export-file": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFileList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ImportExportFile"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ImportExportFile"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/import-export-file?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-file?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-file?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-file?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Import Export File resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Import Export File resources",
        "tags": ["Import Export File"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportFile",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportFile"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportFile"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportFile"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Import Export File resources",
        "tags": ["Import Export File"]
      }
    },
    "/import-export-file/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportFile",
        "parameters": [
          {
            "description": "Identifier for the import_export_file",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Import Export File resource",
        "tags": ["Import Export File"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportFile",
        "parameters": [
          {
            "description": "Identifier for the import_export_file",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportFile"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Import Export File resource",
        "tags": ["Import Export File"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportFile",
        "parameters": [
          {
            "description": "Identifier for the import_export_file",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportFile"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportFile"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Import Export File resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportFile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportFile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportFile"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Import Export File resource",
        "tags": ["Import Export File"]
      }
    },
    "/import-export-log": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLogList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ImportExportLog"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ImportExportLog"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/import-export-log?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-log?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Import Export Log resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Import Export Log resources",
        "tags": ["Import Export Log"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportLog",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportLog"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportLog"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportLog"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Import Export Log resources",
        "tags": ["Import Export Log"]
      }
    },
    "/import-export-log/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportLog",
        "parameters": [
          {
            "description": "Identifier for the import_export_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Import Export Log resource",
        "tags": ["Import Export Log"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportLog",
        "parameters": [
          {
            "description": "Identifier for the import_export_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportLog"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Import Export Log resource",
        "tags": ["Import Export Log"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportLog",
        "parameters": [
          {
            "description": "Identifier for the import_export_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportLog"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportLog"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Import Export Log resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportLog"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Import Export Log resource",
        "tags": ["Import Export Log"]
      }
    },
    "/import-export-profile": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfileList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ImportExportProfile"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ImportExportProfile"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/import-export-profile?limit=25"
                                },
                                "last": {
                                  "example": "/import-export-profile?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/import-export-profile?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/import-export-profile?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Import Export Profile resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Import Export Profile resources",
        "tags": ["Import Export Profile"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createImportExportProfile",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportProfile"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportProfile"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Import Export Profile resources",
        "tags": ["Import Export Profile"]
      }
    },
    "/import-export-profile/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteImportExportProfile",
        "parameters": [
          {
            "description": "Identifier for the import_export_profile",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Import Export Profile resource",
        "tags": ["Import Export Profile"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getImportExportProfile",
        "parameters": [
          {
            "description": "Identifier for the import_export_profile",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportProfile"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Import Export Profile resource",
        "tags": ["Import Export Profile"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateImportExportProfile",
        "parameters": [
          {
            "description": "Identifier for the import_export_profile",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExportProfile"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ImportExportProfile"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Import Export Profile resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportExportProfile"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ImportExportProfile"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ImportExportProfile"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Import Export Profile resource",
        "tags": ["Import Export Profile"]
      }
    },
    "/integration": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegrationList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Integration"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Integration"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/integration?limit=25"
                                },
                                "last": {
                                  "example": "/integration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/integration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/integration?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Integration resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Integration resources",
        "tags": ["Integration"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createIntegration",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Integration"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Integration resources",
        "tags": ["Integration"]
      }
    },
    "/integration/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "description": "Identifier for the integration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Integration resource",
        "tags": ["Integration"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getIntegration",
        "parameters": [
          {
            "description": "Identifier for the integration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Integration"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Integration resource",
        "tags": ["Integration"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateIntegration",
        "parameters": [
          {
            "description": "Identifier for the integration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Integration"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Integration resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Integration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Integration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Integration"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Integration resource",
        "tags": ["Integration"]
      }
    },
    "/landing-page": {
      "get": {
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPageList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/LandingPage"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/LandingPage"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/landing-page?limit=25"
                                },
                                "last": {
                                  "example": "/landing-page?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/landing-page?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/landing-page?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Landing Page resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Landing Page resources",
        "tags": ["Landing Page"]
      },
      "post": {
        "description": "Available since: 6.4.0.0",
        "operationId": "createLandingPage",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LandingPage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LandingPage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LandingPage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Landing Page resources",
        "tags": ["Landing Page"]
      }
    },
    "/landing-page/{id}": {
      "delete": {
        "description": "Available since: 6.4.0.0",
        "operationId": "deleteLandingPage",
        "parameters": [
          {
            "description": "Identifier for the landing_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Landing Page resource",
        "tags": ["Landing Page"]
      },
      "get": {
        "description": "Available since: 6.4.0.0",
        "operationId": "getLandingPage",
        "parameters": [
          {
            "description": "Identifier for the landing_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LandingPage"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Landing Page resource",
        "tags": ["Landing Page"]
      },
      "patch": {
        "description": "Available since: 6.4.0.0",
        "operationId": "updateLandingPage",
        "parameters": [
          {
            "description": "Identifier for the landing_page",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LandingPage"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LandingPage"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Landing Page resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LandingPage"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LandingPage"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LandingPage"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Landing Page resource",
        "tags": ["Landing Page"]
      }
    },
    "/language": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguageList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Language"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Language"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/language?limit=25"
                                },
                                "last": {
                                  "example": "/language?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/language?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/language?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Language resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Language resources",
        "tags": ["Language"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createLanguage",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Language"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Language"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Language resources",
        "tags": ["Language"]
      }
    },
    "/language/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLanguage",
        "parameters": [
          {
            "description": "Identifier for the language",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Language resource",
        "tags": ["Language"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLanguage",
        "parameters": [
          {
            "description": "Identifier for the language",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Language"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Language resource",
        "tags": ["Language"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLanguage",
        "parameters": [
          {
            "description": "Identifier for the language",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Language"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Language"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Language resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Language"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Language"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Language resource",
        "tags": ["Language"]
      }
    },
    "/locale": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocaleList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Locale"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Locale"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/locale?limit=25"
                                },
                                "last": {
                                  "example": "/locale?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/locale?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/locale?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Locale resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Locale resources",
        "tags": ["Locale"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createLocale",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Locale"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Locale"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Locale"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Locale resources",
        "tags": ["Locale"]
      }
    },
    "/locale/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLocale",
        "parameters": [
          {
            "description": "Identifier for the locale",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Locale resource",
        "tags": ["Locale"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLocale",
        "parameters": [
          {
            "description": "Identifier for the locale",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Locale"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Locale resource",
        "tags": ["Locale"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLocale",
        "parameters": [
          {
            "description": "Identifier for the locale",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Locale"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Locale"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Locale resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Locale"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Locale"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Locale"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Locale resource",
        "tags": ["Locale"]
      }
    },
    "/log-entry": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/LogEntry"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/LogEntry"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/log-entry?limit=25"
                                },
                                "last": {
                                  "example": "/log-entry?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/log-entry?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/log-entry?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Log Entry resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Log Entry resources",
        "tags": ["Log Entry"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createLogEntry",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogEntry"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LogEntry"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Log Entry resources",
        "tags": ["Log Entry"]
      }
    },
    "/log-entry/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteLogEntry",
        "parameters": [
          {
            "description": "Identifier for the log_entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Log Entry resource",
        "tags": ["Log Entry"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getLogEntry",
        "parameters": [
          {
            "description": "Identifier for the log_entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LogEntry"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Log Entry resource",
        "tags": ["Log Entry"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateLogEntry",
        "parameters": [
          {
            "description": "Identifier for the log_entry",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogEntry"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/LogEntry"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Log Entry resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogEntry"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LogEntry"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of LogEntry"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Log Entry resource",
        "tags": ["Log Entry"]
      }
    },
    "/mail-header-footer": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooterList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MailHeaderFooter"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MailHeaderFooter"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/mail-header-footer?limit=25"
                                },
                                "last": {
                                  "example": "/mail-header-footer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-header-footer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-header-footer?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Mail Header Footer resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Mail Header Footer resources",
        "tags": ["Mail Header Footer"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailHeaderFooter",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailHeaderFooter"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailHeaderFooter"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailHeaderFooter"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Mail Header Footer resources",
        "tags": ["Mail Header Footer"]
      }
    },
    "/mail-header-footer/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailHeaderFooter",
        "parameters": [
          {
            "description": "Identifier for the mail_header_footer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Mail Header Footer resource",
        "tags": ["Mail Header Footer"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailHeaderFooter",
        "parameters": [
          {
            "description": "Identifier for the mail_header_footer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailHeaderFooter"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Mail Header Footer resource",
        "tags": ["Mail Header Footer"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailHeaderFooter",
        "parameters": [
          {
            "description": "Identifier for the mail_header_footer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailHeaderFooter"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailHeaderFooter"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Mail Header Footer resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailHeaderFooter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailHeaderFooter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailHeaderFooter"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Mail Header Footer resource",
        "tags": ["Mail Header Footer"]
      }
    },
    "/mail-template": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MailTemplate"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MailTemplate"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/mail-template?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Mail Template resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Mail Template resources",
        "tags": ["Mail Template"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplate",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Mail Template resources",
        "tags": ["Mail Template"]
      }
    },
    "/mail-template-type": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateTypeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MailTemplateType"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MailTemplateType"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/mail-template-type?limit=25"
                                },
                                "last": {
                                  "example": "/mail-template-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/mail-template-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/mail-template-type?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Mail Template Type resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Mail Template Type resources",
        "tags": ["Mail Template Type"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMailTemplateType",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplateType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplateType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplateType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Mail Template Type resources",
        "tags": ["Mail Template Type"]
      }
    },
    "/mail-template-type/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplateType",
        "parameters": [
          {
            "description": "Identifier for the mail_template_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Mail Template Type resource",
        "tags": ["Mail Template Type"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplateType",
        "parameters": [
          {
            "description": "Identifier for the mail_template_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplateType"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Mail Template Type resource",
        "tags": ["Mail Template Type"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplateType",
        "parameters": [
          {
            "description": "Identifier for the mail_template_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplateType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplateType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Mail Template Type resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplateType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplateType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplateType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Mail Template Type resource",
        "tags": ["Mail Template Type"]
      }
    },
    "/mail-template/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMailTemplate",
        "parameters": [
          {
            "description": "Identifier for the mail_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Mail Template resource",
        "tags": ["Mail Template"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMailTemplate",
        "parameters": [
          {
            "description": "Identifier for the mail_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplate"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Mail Template resource",
        "tags": ["Mail Template"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMailTemplate",
        "parameters": [
          {
            "description": "Identifier for the mail_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MailTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Mail Template resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MailTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MailTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Mail Template resource",
        "tags": ["Mail Template"]
      }
    },
    "/main-category": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategoryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MainCategory"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MainCategory"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/main-category?limit=25"
                                },
                                "last": {
                                  "example": "/main-category?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/main-category?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/main-category?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Main Category resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Main Category resources",
        "tags": ["Main Category"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createMainCategory",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainCategory"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MainCategory"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MainCategory"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Main Category resources",
        "tags": ["Main Category"]
      }
    },
    "/main-category/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteMainCategory",
        "parameters": [
          {
            "description": "Identifier for the main_category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Main Category resource",
        "tags": ["Main Category"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getMainCategory",
        "parameters": [
          {
            "description": "Identifier for the main_category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MainCategory"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Main Category resource",
        "tags": ["Main Category"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateMainCategory",
        "parameters": [
          {
            "description": "Identifier for the main_category",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MainCategory"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MainCategory"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Main Category resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainCategory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MainCategory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MainCategory"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Main Category resource",
        "tags": ["Main Category"]
      }
    },
    "/media": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Media"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Media"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media?limit=25"
                                },
                                "last": {
                                  "example": "/media?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media resources",
        "tags": ["Media"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMedia",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Media"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Media"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media resources",
        "tags": ["Media"]
      }
    },
    "/media-default-folder": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolderList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MediaDefaultFolder"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MediaDefaultFolder"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media-default-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-default-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-default-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-default-folder?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media Default Folder resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media Default Folder resources",
        "tags": ["Media Default Folder"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaDefaultFolder",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaDefaultFolder"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaDefaultFolder"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaDefaultFolder"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media Default Folder resources",
        "tags": ["Media Default Folder"]
      }
    },
    "/media-default-folder/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaDefaultFolder",
        "parameters": [
          {
            "description": "Identifier for the media_default_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media Default Folder resource",
        "tags": ["Media Default Folder"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaDefaultFolder",
        "parameters": [
          {
            "description": "Identifier for the media_default_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaDefaultFolder"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media Default Folder resource",
        "tags": ["Media Default Folder"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaDefaultFolder",
        "parameters": [
          {
            "description": "Identifier for the media_default_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaDefaultFolder"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaDefaultFolder"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media Default Folder resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaDefaultFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaDefaultFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaDefaultFolder"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media Default Folder resource",
        "tags": ["Media Default Folder"]
      }
    },
    "/media-folder": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MediaFolder"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MediaFolder"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media-folder?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media Folder resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media Folder resources",
        "tags": ["Media Folder"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolder",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolder"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolder"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media Folder resources",
        "tags": ["Media Folder"]
      }
    },
    "/media-folder-configuration": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfigurationList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MediaFolderConfiguration"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MediaFolderConfiguration"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media-folder-configuration?limit=25"
                                },
                                "last": {
                                  "example": "/media-folder-configuration?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-folder-configuration?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-folder-configuration?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media Folder Configuration resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media Folder Configuration resources",
        "tags": ["Media Folder Configuration"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaFolderConfiguration",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolderConfiguration"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media Folder Configuration resources",
        "tags": ["Media Folder Configuration"]
      }
    },
    "/media-folder-configuration/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolderConfiguration",
        "parameters": [
          {
            "description": "Identifier for the media_folder_configuration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media Folder Configuration resource",
        "tags": ["Media Folder Configuration"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolderConfiguration",
        "parameters": [
          {
            "description": "Identifier for the media_folder_configuration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolderConfiguration"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media Folder Configuration resource",
        "tags": ["Media Folder Configuration"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolderConfiguration",
        "parameters": [
          {
            "description": "Identifier for the media_folder_configuration",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolderConfiguration"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolderConfiguration"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media Folder Configuration resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolderConfiguration"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolderConfiguration"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolderConfiguration"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media Folder Configuration resource",
        "tags": ["Media Folder Configuration"]
      }
    },
    "/media-folder/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaFolder",
        "parameters": [
          {
            "description": "Identifier for the media_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media Folder resource",
        "tags": ["Media Folder"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaFolder",
        "parameters": [
          {
            "description": "Identifier for the media_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolder"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media Folder resource",
        "tags": ["Media Folder"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaFolder",
        "parameters": [
          {
            "description": "Identifier for the media_folder",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaFolder"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaFolder"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media Folder resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaFolder"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaFolder"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaFolder"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media Folder resource",
        "tags": ["Media Folder"]
      }
    },
    "/media-thumbnail": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MediaThumbnail"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnail"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media Thumbnail resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media Thumbnail resources",
        "tags": ["Media Thumbnail"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnail",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnail"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnail"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnail"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media Thumbnail resources",
        "tags": ["Media Thumbnail"]
      }
    },
    "/media-thumbnail-size": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSizeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MediaThumbnailSize"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MediaThumbnailSize"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/media-thumbnail-size?limit=25"
                                },
                                "last": {
                                  "example": "/media-thumbnail-size?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/media-thumbnail-size?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/media-thumbnail-size?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Media Thumbnail Size resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Media Thumbnail Size resources",
        "tags": ["Media Thumbnail Size"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMediaThumbnailSize",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnailSize"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnailSize"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnailSize"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Media Thumbnail Size resources",
        "tags": ["Media Thumbnail Size"]
      }
    },
    "/media-thumbnail-size/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnailSize",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail_size",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media Thumbnail Size resource",
        "tags": ["Media Thumbnail Size"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnailSize",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail_size",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnailSize"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media Thumbnail Size resource",
        "tags": ["Media Thumbnail Size"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnailSize",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail_size",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnailSize"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnailSize"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media Thumbnail Size resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnailSize"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnailSize"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnailSize"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media Thumbnail Size resource",
        "tags": ["Media Thumbnail Size"]
      }
    },
    "/media-thumbnail/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMediaThumbnail",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media Thumbnail resource",
        "tags": ["Media Thumbnail"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMediaThumbnail",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnail"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media Thumbnail resource",
        "tags": ["Media Thumbnail"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMediaThumbnail",
        "parameters": [
          {
            "description": "Identifier for the media_thumbnail",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaThumbnail"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MediaThumbnail"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media Thumbnail resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediaThumbnail"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MediaThumbnail"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MediaThumbnail"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media Thumbnail resource",
        "tags": ["Media Thumbnail"]
      }
    },
    "/media/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMedia",
        "parameters": [
          {
            "description": "Identifier for the media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Media resource",
        "tags": ["Media"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMedia",
        "parameters": [
          {
            "description": "Identifier for the media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Media"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Media resource",
        "tags": ["Media"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMedia",
        "parameters": [
          {
            "description": "Identifier for the media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Media"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Media resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Media"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Media"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Media resource",
        "tags": ["Media"]
      }
    },
    "/message-queue-stats": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMessageQueueStatsList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/MessageQueueStats"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/MessageQueueStats"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/message-queue-stats?limit=25"
                                },
                                "last": {
                                  "example": "/message-queue-stats?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/message-queue-stats?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/message-queue-stats?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Message Queue Stats resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Message Queue Stats resources",
        "tags": ["Message Queue Stats"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createMessageQueueStats",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageQueueStats"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MessageQueueStats"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MessageQueueStats"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Message Queue Stats resources",
        "tags": ["Message Queue Stats"]
      }
    },
    "/message-queue-stats/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteMessageQueueStats",
        "parameters": [
          {
            "description": "Identifier for the message_queue_stats",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Message Queue Stats resource",
        "tags": ["Message Queue Stats"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getMessageQueueStats",
        "parameters": [
          {
            "description": "Identifier for the message_queue_stats",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MessageQueueStats"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Message Queue Stats resource",
        "tags": ["Message Queue Stats"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateMessageQueueStats",
        "parameters": [
          {
            "description": "Identifier for the message_queue_stats",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageQueueStats"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/MessageQueueStats"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Message Queue Stats resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageQueueStats"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MessageQueueStats"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of MessageQueueStats"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Message Queue Stats resource",
        "tags": ["Message Queue Stats"]
      }
    },
    "/newsletter-recipient": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipientList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/NewsletterRecipient"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/NewsletterRecipient"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/newsletter-recipient?limit=25"
                                },
                                "last": {
                                  "example": "/newsletter-recipient?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/newsletter-recipient?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/newsletter-recipient?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Newsletter Recipient resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Newsletter Recipient resources",
        "tags": ["Newsletter Recipient"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createNewsletterRecipient",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterRecipient"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NewsletterRecipient"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Newsletter Recipient resources",
        "tags": ["Newsletter Recipient"]
      }
    },
    "/newsletter-recipient/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNewsletterRecipient",
        "parameters": [
          {
            "description": "Identifier for the newsletter_recipient",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Newsletter Recipient resource",
        "tags": ["Newsletter Recipient"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNewsletterRecipient",
        "parameters": [
          {
            "description": "Identifier for the newsletter_recipient",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NewsletterRecipient"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Newsletter Recipient resource",
        "tags": ["Newsletter Recipient"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNewsletterRecipient",
        "parameters": [
          {
            "description": "Identifier for the newsletter_recipient",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewsletterRecipient"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NewsletterRecipient"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Newsletter Recipient resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsletterRecipient"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NewsletterRecipient"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NewsletterRecipient"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Newsletter Recipient resource",
        "tags": ["Newsletter Recipient"]
      }
    },
    "/notification": {
      "get": {
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotificationList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Notification"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/notification?limit=25"
                                },
                                "last": {
                                  "example": "/notification?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/notification?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/notification?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Notification resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Notification resources",
        "tags": ["Notification"]
      },
      "post": {
        "description": "Available since: 6.4.7.0",
        "operationId": "createNotification",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Notification"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Notification"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Notification resources",
        "tags": ["Notification"]
      }
    },
    "/notification/{id}": {
      "delete": {
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteNotification",
        "parameters": [
          {
            "description": "Identifier for the notification",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Notification resource",
        "tags": ["Notification"]
      },
      "get": {
        "description": "Available since: 6.4.7.0",
        "operationId": "getNotification",
        "parameters": [
          {
            "description": "Identifier for the notification",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Notification"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Notification resource",
        "tags": ["Notification"]
      },
      "patch": {
        "description": "Available since: 6.4.7.0",
        "operationId": "updateNotification",
        "parameters": [
          {
            "description": "Identifier for the notification",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Notification"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Notification resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Notification"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Notification"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Notification resource",
        "tags": ["Notification"]
      }
    },
    "/number-range": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/NumberRange"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/NumberRange"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/number-range?limit=25"
                                },
                                "last": {
                                  "example": "/number-range?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Number Range resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Number Range resources",
        "tags": ["Number Range"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRange",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRange"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRange"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRange"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Number Range resources",
        "tags": ["Number Range"]
      }
    },
    "/number-range-sales-channel": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannelList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeSalesChannel"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeSalesChannel"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/number-range-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-sales-channel?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Number Range Sales Channel resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Number Range Sales Channel resources",
        "tags": ["Number Range Sales Channel"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeSalesChannel",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Number Range Sales Channel resources",
        "tags": ["Number Range Sales Channel"]
      }
    },
    "/number-range-sales-channel/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the number_range_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Number Range Sales Channel resource",
        "tags": ["Number Range Sales Channel"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the number_range_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeSalesChannel"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Number Range Sales Channel resource",
        "tags": ["Number Range Sales Channel"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the number_range_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Number Range Sales Channel resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Number Range Sales Channel resource",
        "tags": ["Number Range Sales Channel"]
      }
    },
    "/number-range-state": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeStateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeState"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeState"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/number-range-state?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-state?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Number Range State resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Number Range State resources",
        "tags": ["Number Range State"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeState",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Number Range State resources",
        "tags": ["Number Range State"]
      }
    },
    "/number-range-state/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeState",
        "parameters": [
          {
            "description": "Identifier for the number_range_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Number Range State resource",
        "tags": ["Number Range State"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeState",
        "parameters": [
          {
            "description": "Identifier for the number_range_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeState"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Number Range State resource",
        "tags": ["Number Range State"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeState",
        "parameters": [
          {
            "description": "Identifier for the number_range_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Number Range State resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Number Range State resource",
        "tags": ["Number Range State"]
      }
    },
    "/number-range-type": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeTypeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/NumberRangeType"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/NumberRangeType"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/number-range-type?limit=25"
                                },
                                "last": {
                                  "example": "/number-range-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/number-range-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/number-range-type?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Number Range Type resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Number Range Type resources",
        "tags": ["Number Range Type"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createNumberRangeType",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Number Range Type resources",
        "tags": ["Number Range Type"]
      }
    },
    "/number-range-type/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRangeType",
        "parameters": [
          {
            "description": "Identifier for the number_range_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Number Range Type resource",
        "tags": ["Number Range Type"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRangeType",
        "parameters": [
          {
            "description": "Identifier for the number_range_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeType"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Number Range Type resource",
        "tags": ["Number Range Type"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRangeType",
        "parameters": [
          {
            "description": "Identifier for the number_range_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRangeType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRangeType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Number Range Type resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRangeType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRangeType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRangeType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Number Range Type resource",
        "tags": ["Number Range Type"]
      }
    },
    "/number-range/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteNumberRange",
        "parameters": [
          {
            "description": "Identifier for the number_range",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Number Range resource",
        "tags": ["Number Range"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getNumberRange",
        "parameters": [
          {
            "description": "Identifier for the number_range",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRange"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Number Range resource",
        "tags": ["Number Range"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateNumberRange",
        "parameters": [
          {
            "description": "Identifier for the number_range",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NumberRange"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/NumberRange"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Number Range resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberRange"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NumberRange"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of NumberRange"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Number Range resource",
        "tags": ["Number Range"]
      }
    },
    "/oauth/token": {
      "post": {
        "description": "Fetch a access token that can be used to perform authenticated requests",
        "operationId": "token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "For more information take a look at the [Authentication documentation](https://shopware.stoplight.io/docs/admin-api/docs/concepts/authentication-authorisation.md).",
                "properties": {
                  "grant_type": {
                    "description": "The grant type that should be used. See [OAuth 2.0 grant](https://oauth2.thephpleague.com/authorization-server/which-grant/) for more information.",
                    "enum": ["password", "refresh_token", "client_credentials"],
                    "type": "string"
                  }
                },
                "required": ["grant_type"],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "access_token": {
                      "description": "The access token that can be used for subsequent requests",
                      "type": "string"
                    },
                    "expires_in": {
                      "description": "Token lifetime in seconds.",
                      "type": "integer"
                    },
                    "token_type": {
                      "description": "Type of the token.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Authorized successfully."
          }
        },
        "summary": "Fetch an access token",
        "tags": ["Authorization & Authentication"]
      }
    },
    "/order": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Order"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order?limit=25"
                                },
                                "last": {
                                  "example": "/order?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order resources",
        "tags": ["Order"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrder",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Order"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order resources",
        "tags": ["Order"]
      }
    },
    "/order-address": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddressList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderAddress"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderAddress"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-address?limit=25"
                                },
                                "last": {
                                  "example": "/order-address?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-address?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-address?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Address resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Address resources",
        "tags": ["Order Address"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderAddress",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddress"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderAddress"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderAddress"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Address resources",
        "tags": ["Order Address"]
      }
    },
    "/order-address/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderAddress",
        "parameters": [
          {
            "description": "Identifier for the order_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Address resource",
        "tags": ["Order Address"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderAddress",
        "parameters": [
          {
            "description": "Identifier for the order_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderAddress"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Address resource",
        "tags": ["Order Address"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderAddress",
        "parameters": [
          {
            "description": "Identifier for the order_address",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderAddress"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderAddress"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Address resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderAddress"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderAddress"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderAddress"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Address resource",
        "tags": ["Order Address"]
      }
    },
    "/order-customer": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomerList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderCustomer"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderCustomer"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-customer?limit=25"
                                },
                                "last": {
                                  "example": "/order-customer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-customer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-customer?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Customer resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Customer resources",
        "tags": ["Order Customer"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderCustomer",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCustomer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderCustomer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderCustomer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Customer resources",
        "tags": ["Order Customer"]
      }
    },
    "/order-customer/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderCustomer",
        "parameters": [
          {
            "description": "Identifier for the order_customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Customer resource",
        "tags": ["Order Customer"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderCustomer",
        "parameters": [
          {
            "description": "Identifier for the order_customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderCustomer"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Customer resource",
        "tags": ["Order Customer"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderCustomer",
        "parameters": [
          {
            "description": "Identifier for the order_customer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCustomer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderCustomer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Customer resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderCustomer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderCustomer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderCustomer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Customer resource",
        "tags": ["Order Customer"]
      }
    },
    "/order-delivery": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderDelivery"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderDelivery"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-delivery?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Delivery resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Delivery resources",
        "tags": ["Order Delivery"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDelivery",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDelivery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDelivery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDelivery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Delivery resources",
        "tags": ["Order Delivery"]
      }
    },
    "/order-delivery-position": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPositionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderDeliveryPosition"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderDeliveryPosition"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-delivery-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-delivery-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-delivery-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-delivery-position?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Delivery Position resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Delivery Position resources",
        "tags": ["Order Delivery Position"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderDeliveryPosition",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeliveryPosition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDeliveryPosition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Delivery Position resources",
        "tags": ["Order Delivery Position"]
      }
    },
    "/order-delivery-position/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDeliveryPosition",
        "parameters": [
          {
            "description": "Identifier for the order_delivery_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Delivery Position resource",
        "tags": ["Order Delivery Position"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDeliveryPosition",
        "parameters": [
          {
            "description": "Identifier for the order_delivery_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDeliveryPosition"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Delivery Position resource",
        "tags": ["Order Delivery Position"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDeliveryPosition",
        "parameters": [
          {
            "description": "Identifier for the order_delivery_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeliveryPosition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDeliveryPosition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Delivery Position resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDeliveryPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDeliveryPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDeliveryPosition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Delivery Position resource",
        "tags": ["Order Delivery Position"]
      }
    },
    "/order-delivery/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderDelivery",
        "parameters": [
          {
            "description": "Identifier for the order_delivery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Delivery resource",
        "tags": ["Order Delivery"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderDelivery",
        "parameters": [
          {
            "description": "Identifier for the order_delivery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDelivery"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Delivery resource",
        "tags": ["Order Delivery"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderDelivery",
        "parameters": [
          {
            "description": "Identifier for the order_delivery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDelivery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderDelivery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Delivery resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDelivery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDelivery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderDelivery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Delivery resource",
        "tags": ["Order Delivery"]
      }
    },
    "/order-line-item": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItemList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderLineItem"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderLineItem"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-line-item?limit=25"
                                },
                                "last": {
                                  "example": "/order-line-item?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-line-item?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-line-item?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Line Item resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Line Item resources",
        "tags": ["Order Line Item"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderLineItem",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItem"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItem"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderLineItem"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Line Item resources",
        "tags": ["Order Line Item"]
      }
    },
    "/order-line-item/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderLineItem",
        "parameters": [
          {
            "description": "Identifier for the order_line_item",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Line Item resource",
        "tags": ["Order Line Item"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderLineItem",
        "parameters": [
          {
            "description": "Identifier for the order_line_item",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderLineItem"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Line Item resource",
        "tags": ["Order Line Item"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderLineItem",
        "parameters": [
          {
            "description": "Identifier for the order_line_item",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderLineItem"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderLineItem"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Line Item resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderLineItem"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderLineItem"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderLineItem"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Line Item resource",
        "tags": ["Order Line Item"]
      }
    },
    "/order-transaction": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransactionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderTransaction"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderTransaction"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-transaction?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Transaction resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Transaction resources",
        "tags": ["Order Transaction"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createOrderTransaction",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransaction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransaction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransaction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Transaction resources",
        "tags": ["Order Transaction"]
      }
    },
    "/order-transaction-capture": {
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCapture"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCapture"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Transaction Capture resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Transaction Capture resources",
        "tags": ["Order Transaction Capture"]
      },
      "post": {
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCapture",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCapture"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Transaction Capture resources",
        "tags": ["Order Transaction Capture"]
      }
    },
    "/order-transaction-capture-refund": {
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Transaction Capture Refund resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Transaction Capture Refund resources",
        "tags": ["Order Transaction Capture Refund"]
      },
      "post": {
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefund",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefund"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Transaction Capture Refund resources",
        "tags": ["Order Transaction Capture Refund"]
      }
    },
    "/order-transaction-capture-refund-position": {
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPositionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/order-transaction-capture-refund-position?limit=25"
                                },
                                "last": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/order-transaction-capture-refund-position?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Order Transaction Capture Refund Position resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Order Transaction Capture Refund Position resources",
        "tags": ["Order Transaction Capture Refund Position"]
      },
      "post": {
        "description": "Available since: 6.4.12.0",
        "operationId": "createOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefundPosition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Order Transaction Capture Refund Position resources",
        "tags": ["Order Transaction Capture Refund Position"]
      }
    },
    "/order-transaction-capture-refund-position/{id}": {
      "delete": {
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Transaction Capture Refund Position resource",
        "tags": ["Order Transaction Capture Refund Position"]
      },
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefundPosition"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Transaction Capture Refund Position resource",
        "tags": ["Order Transaction Capture Refund Position"]
      },
      "patch": {
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefundPosition",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund_position",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Transaction Capture Refund Position resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefundPosition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefundPosition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Transaction Capture Refund Position resource",
        "tags": ["Order Transaction Capture Refund Position"]
      }
    },
    "/order-transaction-capture-refund/{id}": {
      "delete": {
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCaptureRefund",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Transaction Capture Refund resource",
        "tags": ["Order Transaction Capture Refund"]
      },
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCaptureRefund",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefund"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Transaction Capture Refund resource",
        "tags": ["Order Transaction Capture Refund"]
      },
      "patch": {
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCaptureRefund",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture_refund",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Transaction Capture Refund resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCaptureRefund"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCaptureRefund"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Transaction Capture Refund resource",
        "tags": ["Order Transaction Capture Refund"]
      }
    },
    "/order-transaction-capture/{id}": {
      "delete": {
        "description": "Available since: 6.4.12.0",
        "operationId": "deleteOrderTransactionCapture",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Transaction Capture resource",
        "tags": ["Order Transaction Capture"]
      },
      "get": {
        "description": "Available since: 6.4.12.0",
        "operationId": "getOrderTransactionCapture",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCapture"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Transaction Capture resource",
        "tags": ["Order Transaction Capture"]
      },
      "patch": {
        "description": "Available since: 6.4.12.0",
        "operationId": "updateOrderTransactionCapture",
        "parameters": [
          {
            "description": "Identifier for the order_transaction_capture",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransactionCapture"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransactionCapture"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Transaction Capture resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransactionCapture"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransactionCapture"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransactionCapture"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Transaction Capture resource",
        "tags": ["Order Transaction Capture"]
      }
    },
    "/order-transaction/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrderTransaction",
        "parameters": [
          {
            "description": "Identifier for the order_transaction",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order Transaction resource",
        "tags": ["Order Transaction"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrderTransaction",
        "parameters": [
          {
            "description": "Identifier for the order_transaction",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransaction"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order Transaction resource",
        "tags": ["Order Transaction"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrderTransaction",
        "parameters": [
          {
            "description": "Identifier for the order_transaction",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderTransaction"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/OrderTransaction"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order Transaction resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderTransaction"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderTransaction"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of OrderTransaction"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order Transaction resource",
        "tags": ["Order Transaction"]
      }
    },
    "/order/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "description": "Identifier for the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Order resource",
        "tags": ["Order"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getOrder",
        "parameters": [
          {
            "description": "Identifier for the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Order"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Order resource",
        "tags": ["Order"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateOrder",
        "parameters": [
          {
            "description": "Identifier for the order",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Order resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Order"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Order"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Order resource",
        "tags": ["Order"]
      }
    },
    "/payment-method": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethodList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PaymentMethod"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PaymentMethod"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/payment-method?limit=25"
                                },
                                "last": {
                                  "example": "/payment-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/payment-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/payment-method?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Payment Method resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Payment Method resources",
        "tags": ["Payment Method"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPaymentMethod",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PaymentMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Payment Method resources",
        "tags": ["Payment Method"]
      }
    },
    "/payment-method/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Payment Method resource",
        "tags": ["Payment Method"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PaymentMethod"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Payment Method resource",
        "tags": ["Payment Method"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePaymentMethod",
        "parameters": [
          {
            "description": "Identifier for the payment_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Payment Method resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PaymentMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Payment Method resource",
        "tags": ["Payment Method"]
      }
    },
    "/plugin": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPluginList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Plugin"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Plugin"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/plugin?limit=25"
                                },
                                "last": {
                                  "example": "/plugin?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/plugin?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/plugin?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Plugin resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Plugin resources",
        "tags": ["Plugin"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPlugin",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plugin"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Plugin"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Plugin"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Plugin resources",
        "tags": ["Plugin"]
      }
    },
    "/plugin/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePlugin",
        "parameters": [
          {
            "description": "Identifier for the plugin",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Plugin resource",
        "tags": ["Plugin"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPlugin",
        "parameters": [
          {
            "description": "Identifier for the plugin",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Plugin"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Plugin resource",
        "tags": ["Plugin"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePlugin",
        "parameters": [
          {
            "description": "Identifier for the plugin",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plugin"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Plugin"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Plugin resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plugin"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Plugin"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Plugin"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Plugin resource",
        "tags": ["Plugin"]
      }
    },
    "/product": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Product"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product?limit=25"
                                },
                                "last": {
                                  "example": "/product?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product resources",
        "tags": ["Product"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProduct",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Product"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product resources",
        "tags": ["Product"]
      }
    },
    "/product-configurator-setting": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSettingList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductConfiguratorSetting"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductConfiguratorSetting"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-configurator-setting?limit=25"
                                },
                                "last": {
                                  "example": "/product-configurator-setting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-configurator-setting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-configurator-setting?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Configurator Setting resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Configurator Setting resources",
        "tags": ["Product Configurator Setting"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductConfiguratorSetting",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductConfiguratorSetting"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Configurator Setting resources",
        "tags": ["Product Configurator Setting"]
      }
    },
    "/product-configurator-setting/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductConfiguratorSetting",
        "parameters": [
          {
            "description": "Identifier for the product_configurator_setting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Configurator Setting resource",
        "tags": ["Product Configurator Setting"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductConfiguratorSetting",
        "parameters": [
          {
            "description": "Identifier for the product_configurator_setting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductConfiguratorSetting"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Configurator Setting resource",
        "tags": ["Product Configurator Setting"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductConfiguratorSetting",
        "parameters": [
          {
            "description": "Identifier for the product_configurator_setting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductConfiguratorSetting"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductConfiguratorSetting"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Configurator Setting resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductConfiguratorSetting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductConfiguratorSetting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductConfiguratorSetting"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Configurator Setting resource",
        "tags": ["Product Configurator Setting"]
      }
    },
    "/product-cross-selling": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSellingList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSelling"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSelling"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Cross Selling resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Cross Selling resources",
        "tags": ["Product Cross Selling"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductCrossSelling",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSelling"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSelling"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Cross Selling resources",
        "tags": ["Product Cross Selling"]
      }
    },
    "/product-cross-selling-assigned-products": {
      "get": {
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProductsList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-cross-selling-assigned-products?limit=25"
                                },
                                "last": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-cross-selling-assigned-products?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Cross Selling Assigned Products resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Cross Selling Assigned Products resources",
        "tags": ["Product Cross Selling Assigned Products"]
      },
      "post": {
        "description": "Available since: 6.2.0.0",
        "operationId": "createProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSellingAssignedProducts"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Cross Selling Assigned Products resources",
        "tags": ["Product Cross Selling Assigned Products"]
      }
    },
    "/product-cross-selling-assigned-products/{id}": {
      "delete": {
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling_assigned_products",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Cross Selling Assigned Products resource",
        "tags": ["Product Cross Selling Assigned Products"]
      },
      "get": {
        "description": "Available since: 6.2.0.0",
        "operationId": "getProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling_assigned_products",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSellingAssignedProducts"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Cross Selling Assigned Products resource",
        "tags": ["Product Cross Selling Assigned Products"]
      },
      "patch": {
        "description": "Available since: 6.2.0.0",
        "operationId": "updateProductCrossSellingAssignedProducts",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling_assigned_products",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Cross Selling Assigned Products resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSellingAssignedProducts"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSellingAssignedProducts"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Cross Selling Assigned Products resource",
        "tags": ["Product Cross Selling Assigned Products"]
      }
    },
    "/product-cross-selling/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductCrossSelling",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Cross Selling resource",
        "tags": ["Product Cross Selling"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductCrossSelling",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSelling"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Cross Selling resource",
        "tags": ["Product Cross Selling"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductCrossSelling",
        "parameters": [
          {
            "description": "Identifier for the product_cross_selling",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCrossSelling"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductCrossSelling"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Cross Selling resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCrossSelling"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductCrossSelling"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductCrossSelling"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Cross Selling resource",
        "tags": ["Product Cross Selling"]
      }
    },
    "/product-export": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExportList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductExport"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductExport"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-export?limit=25"
                                },
                                "last": {
                                  "example": "/product-export?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-export?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-export?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Export resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Export resources",
        "tags": ["Product Export"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createProductExport",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductExport"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductExport"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductExport"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Export resources",
        "tags": ["Product Export"]
      }
    },
    "/product-export/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteProductExport",
        "parameters": [
          {
            "description": "Identifier for the product_export",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Export resource",
        "tags": ["Product Export"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getProductExport",
        "parameters": [
          {
            "description": "Identifier for the product_export",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductExport"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Export resource",
        "tags": ["Product Export"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateProductExport",
        "parameters": [
          {
            "description": "Identifier for the product_export",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductExport"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductExport"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Export resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductExport"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductExport"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductExport"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Export resource",
        "tags": ["Product Export"]
      }
    },
    "/product-feature-set": {
      "get": {
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSetList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductFeatureSet"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductFeatureSet"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-feature-set?limit=25"
                                },
                                "last": {
                                  "example": "/product-feature-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-feature-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-feature-set?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Feature Set resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Feature Set resources",
        "tags": ["Product Feature Set"]
      },
      "post": {
        "description": "Available since: 6.3.0.0",
        "operationId": "createProductFeatureSet",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFeatureSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductFeatureSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductFeatureSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Feature Set resources",
        "tags": ["Product Feature Set"]
      }
    },
    "/product-feature-set/{id}": {
      "delete": {
        "description": "Available since: 6.3.0.0",
        "operationId": "deleteProductFeatureSet",
        "parameters": [
          {
            "description": "Identifier for the product_feature_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Feature Set resource",
        "tags": ["Product Feature Set"]
      },
      "get": {
        "description": "Available since: 6.3.0.0",
        "operationId": "getProductFeatureSet",
        "parameters": [
          {
            "description": "Identifier for the product_feature_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductFeatureSet"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Feature Set resource",
        "tags": ["Product Feature Set"]
      },
      "patch": {
        "description": "Available since: 6.3.0.0",
        "operationId": "updateProductFeatureSet",
        "parameters": [
          {
            "description": "Identifier for the product_feature_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductFeatureSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductFeatureSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Feature Set resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductFeatureSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductFeatureSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductFeatureSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Feature Set resource",
        "tags": ["Product Feature Set"]
      }
    },
    "/product-keyword-dictionary": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionaryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductKeywordDictionary"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductKeywordDictionary"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-keyword-dictionary?limit=25"
                                },
                                "last": {
                                  "example": "/product-keyword-dictionary?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-keyword-dictionary?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-keyword-dictionary?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Keyword Dictionary resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Keyword Dictionary resources",
        "tags": ["Product Keyword Dictionary"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductKeywordDictionary",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductKeywordDictionary"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Keyword Dictionary resources",
        "tags": ["Product Keyword Dictionary"]
      }
    },
    "/product-keyword-dictionary/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductKeywordDictionary",
        "parameters": [
          {
            "description": "Identifier for the product_keyword_dictionary",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Keyword Dictionary resource",
        "tags": ["Product Keyword Dictionary"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductKeywordDictionary",
        "parameters": [
          {
            "description": "Identifier for the product_keyword_dictionary",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductKeywordDictionary"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Keyword Dictionary resource",
        "tags": ["Product Keyword Dictionary"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductKeywordDictionary",
        "parameters": [
          {
            "description": "Identifier for the product_keyword_dictionary",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductKeywordDictionary"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductKeywordDictionary"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Keyword Dictionary resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductKeywordDictionary"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductKeywordDictionary"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductKeywordDictionary"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Keyword Dictionary resource",
        "tags": ["Product Keyword Dictionary"]
      }
    },
    "/product-manufacturer": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturerList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductManufacturer"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductManufacturer"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-manufacturer?limit=25"
                                },
                                "last": {
                                  "example": "/product-manufacturer?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-manufacturer?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-manufacturer?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Manufacturer resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Manufacturer resources",
        "tags": ["Product Manufacturer"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductManufacturer",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductManufacturer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductManufacturer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Manufacturer resources",
        "tags": ["Product Manufacturer"]
      }
    },
    "/product-manufacturer/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductManufacturer",
        "parameters": [
          {
            "description": "Identifier for the product_manufacturer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Manufacturer resource",
        "tags": ["Product Manufacturer"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductManufacturer",
        "parameters": [
          {
            "description": "Identifier for the product_manufacturer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductManufacturer"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Manufacturer resource",
        "tags": ["Product Manufacturer"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductManufacturer",
        "parameters": [
          {
            "description": "Identifier for the product_manufacturer",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductManufacturer"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductManufacturer"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Manufacturer resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductManufacturer"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductManufacturer"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductManufacturer"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Manufacturer resource",
        "tags": ["Product Manufacturer"]
      }
    },
    "/product-media": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMediaList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductMedia"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductMedia"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-media?limit=25"
                                },
                                "last": {
                                  "example": "/product-media?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-media?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-media?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Media resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Media resources",
        "tags": ["Product Media"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductMedia",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMedia"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductMedia"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductMedia"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Media resources",
        "tags": ["Product Media"]
      }
    },
    "/product-media/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductMedia",
        "parameters": [
          {
            "description": "Identifier for the product_media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Media resource",
        "tags": ["Product Media"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductMedia",
        "parameters": [
          {
            "description": "Identifier for the product_media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductMedia"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Media resource",
        "tags": ["Product Media"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductMedia",
        "parameters": [
          {
            "description": "Identifier for the product_media",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMedia"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductMedia"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Media resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMedia"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductMedia"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductMedia"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Media resource",
        "tags": ["Product Media"]
      }
    },
    "/product-price": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPriceList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductPrice"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductPrice"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-price?limit=25"
                                },
                                "last": {
                                  "example": "/product-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-price?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Price resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Price resources",
        "tags": ["Product Price"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductPrice",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPrice"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductPrice"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductPrice"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Price resources",
        "tags": ["Product Price"]
      }
    },
    "/product-price/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductPrice",
        "parameters": [
          {
            "description": "Identifier for the product_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Price resource",
        "tags": ["Product Price"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductPrice",
        "parameters": [
          {
            "description": "Identifier for the product_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductPrice"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Price resource",
        "tags": ["Product Price"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductPrice",
        "parameters": [
          {
            "description": "Identifier for the product_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPrice"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductPrice"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Price resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductPrice"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Price resource",
        "tags": ["Product Price"]
      }
    },
    "/product-review": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReviewList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductReview"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductReview"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-review?limit=25"
                                },
                                "last": {
                                  "example": "/product-review?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-review?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-review?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Review resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Review resources",
        "tags": ["Product Review"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductReview",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReview"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReview"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductReview"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Review resources",
        "tags": ["Product Review"]
      }
    },
    "/product-review/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductReview",
        "parameters": [
          {
            "description": "Identifier for the product_review",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Review resource",
        "tags": ["Product Review"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductReview",
        "parameters": [
          {
            "description": "Identifier for the product_review",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductReview"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Review resource",
        "tags": ["Product Review"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductReview",
        "parameters": [
          {
            "description": "Identifier for the product_review",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductReview"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductReview"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Review resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReview"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductReview"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductReview"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Review resource",
        "tags": ["Product Review"]
      }
    },
    "/product-search-config": {
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfig"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfig"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-search-config?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Search Config resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Search Config resources",
        "tags": ["Product Search Config"]
      },
      "post": {
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfig",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Search Config resources",
        "tags": ["Product Search Config"]
      }
    },
    "/product-search-config-field": {
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigFieldList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchConfigField"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchConfigField"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-search-config-field?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-config-field?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-config-field?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-config-field?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Search Config Field resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Search Config Field resources",
        "tags": ["Product Search Config Field"]
      },
      "post": {
        "description": "Available since: 6.3.5.0",
        "operationId": "createProductSearchConfigField",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfigField"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Search Config Field resources",
        "tags": ["Product Search Config Field"]
      }
    },
    "/product-search-config-field/{id}": {
      "delete": {
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfigField",
        "parameters": [
          {
            "description": "Identifier for the product_search_config_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Search Config Field resource",
        "tags": ["Product Search Config Field"]
      },
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfigField",
        "parameters": [
          {
            "description": "Identifier for the product_search_config_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfigField"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Search Config Field resource",
        "tags": ["Product Search Config Field"]
      },
      "patch": {
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfigField",
        "parameters": [
          {
            "description": "Identifier for the product_search_config_field",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfigField"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfigField"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Search Config Field resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfigField"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfigField"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfigField"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Search Config Field resource",
        "tags": ["Product Search Config Field"]
      }
    },
    "/product-search-config/{id}": {
      "delete": {
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteProductSearchConfig",
        "parameters": [
          {
            "description": "Identifier for the product_search_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Search Config resource",
        "tags": ["Product Search Config"]
      },
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getProductSearchConfig",
        "parameters": [
          {
            "description": "Identifier for the product_search_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfig"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Search Config resource",
        "tags": ["Product Search Config"]
      },
      "patch": {
        "description": "Available since: 6.3.5.0",
        "operationId": "updateProductSearchConfig",
        "parameters": [
          {
            "description": "Identifier for the product_search_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Search Config resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Search Config resource",
        "tags": ["Product Search Config"]
      }
    },
    "/product-search-keyword": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeywordList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductSearchKeyword"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductSearchKeyword"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-search-keyword?limit=25"
                                },
                                "last": {
                                  "example": "/product-search-keyword?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-search-keyword?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-search-keyword?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Search Keyword resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Search Keyword resources",
        "tags": ["Product Search Keyword"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductSearchKeyword",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchKeyword"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchKeyword"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Search Keyword resources",
        "tags": ["Product Search Keyword"]
      }
    },
    "/product-search-keyword/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductSearchKeyword",
        "parameters": [
          {
            "description": "Identifier for the product_search_keyword",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Search Keyword resource",
        "tags": ["Product Search Keyword"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductSearchKeyword",
        "parameters": [
          {
            "description": "Identifier for the product_search_keyword",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchKeyword"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Search Keyword resource",
        "tags": ["Product Search Keyword"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductSearchKeyword",
        "parameters": [
          {
            "description": "Identifier for the product_search_keyword",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSearchKeyword"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSearchKeyword"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Search Keyword resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSearchKeyword"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSearchKeyword"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSearchKeyword"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Search Keyword resource",
        "tags": ["Product Search Keyword"]
      }
    },
    "/product-sorting": {
      "get": {
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSortingList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductSorting"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductSorting"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-sorting?limit=25"
                                },
                                "last": {
                                  "example": "/product-sorting?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-sorting?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-sorting?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Sorting resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Sorting resources",
        "tags": ["Product Sorting"]
      },
      "post": {
        "description": "Available since: 6.3.2.0",
        "operationId": "createProductSorting",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSorting"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSorting"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSorting"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Sorting resources",
        "tags": ["Product Sorting"]
      }
    },
    "/product-sorting/{id}": {
      "delete": {
        "description": "Available since: 6.3.2.0",
        "operationId": "deleteProductSorting",
        "parameters": [
          {
            "description": "Identifier for the product_sorting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Sorting resource",
        "tags": ["Product Sorting"]
      },
      "get": {
        "description": "Available since: 6.3.2.0",
        "operationId": "getProductSorting",
        "parameters": [
          {
            "description": "Identifier for the product_sorting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSorting"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Sorting resource",
        "tags": ["Product Sorting"]
      },
      "patch": {
        "description": "Available since: 6.3.2.0",
        "operationId": "updateProductSorting",
        "parameters": [
          {
            "description": "Identifier for the product_sorting",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSorting"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductSorting"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Sorting resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSorting"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductSorting"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductSorting"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Sorting resource",
        "tags": ["Product Sorting"]
      }
    },
    "/product-stream": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductStream"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductStream"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-stream?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Stream resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Stream resources",
        "tags": ["Product Stream"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStream",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStream"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStream"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStream"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Stream resources",
        "tags": ["Product Stream"]
      }
    },
    "/product-stream-filter": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilterList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductStreamFilter"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductStreamFilter"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-stream-filter?limit=25"
                                },
                                "last": {
                                  "example": "/product-stream-filter?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-stream-filter?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-stream-filter?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Stream Filter resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Stream Filter resources",
        "tags": ["Product Stream Filter"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductStreamFilter",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStreamFilter"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStreamFilter"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Stream Filter resources",
        "tags": ["Product Stream Filter"]
      }
    },
    "/product-stream-filter/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStreamFilter",
        "parameters": [
          {
            "description": "Identifier for the product_stream_filter",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Stream Filter resource",
        "tags": ["Product Stream Filter"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStreamFilter",
        "parameters": [
          {
            "description": "Identifier for the product_stream_filter",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStreamFilter"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Stream Filter resource",
        "tags": ["Product Stream Filter"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStreamFilter",
        "parameters": [
          {
            "description": "Identifier for the product_stream_filter",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStreamFilter"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStreamFilter"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Stream Filter resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStreamFilter"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStreamFilter"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStreamFilter"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Stream Filter resource",
        "tags": ["Product Stream Filter"]
      }
    },
    "/product-stream/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductStream",
        "parameters": [
          {
            "description": "Identifier for the product_stream",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Stream resource",
        "tags": ["Product Stream"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductStream",
        "parameters": [
          {
            "description": "Identifier for the product_stream",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStream"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Stream resource",
        "tags": ["Product Stream"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductStream",
        "parameters": [
          {
            "description": "Identifier for the product_stream",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductStream"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductStream"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Stream resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductStream"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStream"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductStream"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Stream resource",
        "tags": ["Product Stream"]
      }
    },
    "/product-visibility": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibilityList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ProductVisibility"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ProductVisibility"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/product-visibility?limit=25"
                                },
                                "last": {
                                  "example": "/product-visibility?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/product-visibility?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/product-visibility?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Product Visibility resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Product Visibility resources",
        "tags": ["Product Visibility"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createProductVisibility",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVisibility"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductVisibility"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductVisibility"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Product Visibility resources",
        "tags": ["Product Visibility"]
      }
    },
    "/product-visibility/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProductVisibility",
        "parameters": [
          {
            "description": "Identifier for the product_visibility",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product Visibility resource",
        "tags": ["Product Visibility"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProductVisibility",
        "parameters": [
          {
            "description": "Identifier for the product_visibility",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductVisibility"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product Visibility resource",
        "tags": ["Product Visibility"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProductVisibility",
        "parameters": [
          {
            "description": "Identifier for the product_visibility",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVisibility"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ProductVisibility"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product Visibility resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVisibility"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductVisibility"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ProductVisibility"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product Visibility resource",
        "tags": ["Product Visibility"]
      }
    },
    "/product/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "description": "Identifier for the product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Product resource",
        "tags": ["Product"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getProduct",
        "parameters": [
          {
            "description": "Identifier for the product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Product"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Product resource",
        "tags": ["Product"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateProduct",
        "parameters": [
          {
            "description": "Identifier for the product",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Product"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Product resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Product"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Product"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Product resource",
        "tags": ["Product"]
      }
    },
    "/promotion": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Promotion"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Promotion"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion?limit=25"
                                },
                                "last": {
                                  "example": "/promotion?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion resources",
        "tags": ["Promotion"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotion",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Promotion"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Promotion"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion resources",
        "tags": ["Promotion"]
      }
    },
    "/promotion-discount": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscount"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscount"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion Discount resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion Discount resources",
        "tags": ["Promotion Discount"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscount",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscount"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscount"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscount"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion Discount resources",
        "tags": ["Promotion Discount"]
      }
    },
    "/promotion-discount-prices": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPricesList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PromotionDiscountPrices"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PromotionDiscountPrices"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion-discount-prices?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-discount-prices?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-discount-prices?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-discount-prices?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion Discount Prices resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion Discount Prices resources",
        "tags": ["Promotion Discount Prices"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionDiscountPrices",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscountPrices"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion Discount Prices resources",
        "tags": ["Promotion Discount Prices"]
      }
    },
    "/promotion-discount-prices/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscountPrices",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount_prices",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion Discount Prices resource",
        "tags": ["Promotion Discount Prices"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscountPrices",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount_prices",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscountPrices"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion Discount Prices resource",
        "tags": ["Promotion Discount Prices"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscountPrices",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount_prices",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscountPrices"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscountPrices"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion Discount Prices resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscountPrices"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscountPrices"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscountPrices"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion Discount Prices resource",
        "tags": ["Promotion Discount Prices"]
      }
    },
    "/promotion-discount/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionDiscount",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion Discount resource",
        "tags": ["Promotion Discount"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionDiscount",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscount"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion Discount resource",
        "tags": ["Promotion Discount"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionDiscount",
        "parameters": [
          {
            "description": "Identifier for the promotion_discount",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionDiscount"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionDiscount"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion Discount resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDiscount"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionDiscount"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionDiscount"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion Discount resource",
        "tags": ["Promotion Discount"]
      }
    },
    "/promotion-individual-code": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCodeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PromotionIndividualCode"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PromotionIndividualCode"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion-individual-code?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-individual-code?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-individual-code?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-individual-code?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion Individual Code resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion Individual Code resources",
        "tags": ["Promotion Individual Code"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionIndividualCode",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionIndividualCode"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion Individual Code resources",
        "tags": ["Promotion Individual Code"]
      }
    },
    "/promotion-individual-code/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionIndividualCode",
        "parameters": [
          {
            "description": "Identifier for the promotion_individual_code",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion Individual Code resource",
        "tags": ["Promotion Individual Code"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionIndividualCode",
        "parameters": [
          {
            "description": "Identifier for the promotion_individual_code",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionIndividualCode"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion Individual Code resource",
        "tags": ["Promotion Individual Code"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionIndividualCode",
        "parameters": [
          {
            "description": "Identifier for the promotion_individual_code",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionIndividualCode"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionIndividualCode"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion Individual Code resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionIndividualCode"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionIndividualCode"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionIndividualCode"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion Individual Code resource",
        "tags": ["Promotion Individual Code"]
      }
    },
    "/promotion-sales-channel": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannelList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PromotionSalesChannel"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PromotionSalesChannel"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion-sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-sales-channel?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion Sales Channel resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion Sales Channel resources",
        "tags": ["Promotion Sales Channel"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSalesChannel",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion Sales Channel resources",
        "tags": ["Promotion Sales Channel"]
      }
    },
    "/promotion-sales-channel/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the promotion_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion Sales Channel resource",
        "tags": ["Promotion Sales Channel"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the promotion_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSalesChannel"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion Sales Channel resource",
        "tags": ["Promotion Sales Channel"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the promotion_sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion Sales Channel resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion Sales Channel resource",
        "tags": ["Promotion Sales Channel"]
      }
    },
    "/promotion-setgroup": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroupList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PromotionSetgroup"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PromotionSetgroup"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/promotion-setgroup?limit=25"
                                },
                                "last": {
                                  "example": "/promotion-setgroup?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/promotion-setgroup?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/promotion-setgroup?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Promotion Setgroup resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Promotion Setgroup resources",
        "tags": ["Promotion Setgroup"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPromotionSetgroup",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSetgroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSetgroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSetgroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Promotion Setgroup resources",
        "tags": ["Promotion Setgroup"]
      }
    },
    "/promotion-setgroup/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotionSetgroup",
        "parameters": [
          {
            "description": "Identifier for the promotion_setgroup",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion Setgroup resource",
        "tags": ["Promotion Setgroup"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotionSetgroup",
        "parameters": [
          {
            "description": "Identifier for the promotion_setgroup",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSetgroup"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion Setgroup resource",
        "tags": ["Promotion Setgroup"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotionSetgroup",
        "parameters": [
          {
            "description": "Identifier for the promotion_setgroup",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromotionSetgroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PromotionSetgroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion Setgroup resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionSetgroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PromotionSetgroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PromotionSetgroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion Setgroup resource",
        "tags": ["Promotion Setgroup"]
      }
    },
    "/promotion/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePromotion",
        "parameters": [
          {
            "description": "Identifier for the promotion",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Promotion resource",
        "tags": ["Promotion"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPromotion",
        "parameters": [
          {
            "description": "Identifier for the promotion",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Promotion"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Promotion resource",
        "tags": ["Promotion"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePromotion",
        "parameters": [
          {
            "description": "Identifier for the promotion",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Promotion"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Promotion"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Promotion resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Promotion"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Promotion"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Promotion"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Promotion resource",
        "tags": ["Promotion"]
      }
    },
    "/property-group": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PropertyGroup"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroup"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/property-group?limit=25"
                                },
                                "last": {
                                  "example": "/property-group?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Property Group resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Property Group resources",
        "tags": ["Property Group"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroup",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Property Group resources",
        "tags": ["Property Group"]
      }
    },
    "/property-group-option": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOptionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/PropertyGroupOption"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/PropertyGroupOption"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/property-group-option?limit=25"
                                },
                                "last": {
                                  "example": "/property-group-option?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/property-group-option?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/property-group-option?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Property Group Option resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Property Group Option resources",
        "tags": ["Property Group Option"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createPropertyGroupOption",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroupOption"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroupOption"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Property Group Option resources",
        "tags": ["Property Group Option"]
      }
    },
    "/property-group-option/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroupOption",
        "parameters": [
          {
            "description": "Identifier for the property_group_option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Property Group Option resource",
        "tags": ["Property Group Option"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroupOption",
        "parameters": [
          {
            "description": "Identifier for the property_group_option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroupOption"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Property Group Option resource",
        "tags": ["Property Group Option"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroupOption",
        "parameters": [
          {
            "description": "Identifier for the property_group_option",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroupOption"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroupOption"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Property Group Option resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroupOption"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroupOption"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroupOption"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Property Group Option resource",
        "tags": ["Property Group Option"]
      }
    },
    "/property-group/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deletePropertyGroup",
        "parameters": [
          {
            "description": "Identifier for the property_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Property Group resource",
        "tags": ["Property Group"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getPropertyGroup",
        "parameters": [
          {
            "description": "Identifier for the property_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroup"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Property Group resource",
        "tags": ["Property Group"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updatePropertyGroup",
        "parameters": [
          {
            "description": "Identifier for the property_group",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertyGroup"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/PropertyGroup"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Property Group resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyGroup"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PropertyGroup"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of PropertyGroup"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Property Group resource",
        "tags": ["Property Group"]
      }
    },
    "/rule": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Rule"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Rule"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/rule?limit=25"
                                },
                                "last": {
                                  "example": "/rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/rule?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Rule resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Rule resources",
        "tags": ["Rule"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createRule",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Rule"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Rule"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Rule resources",
        "tags": ["Rule"]
      }
    },
    "/rule-condition": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleConditionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/RuleCondition"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/RuleCondition"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/rule-condition?limit=25"
                                },
                                "last": {
                                  "example": "/rule-condition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/rule-condition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/rule-condition?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Rule Condition resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Rule Condition resources",
        "tags": ["Rule Condition"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createRuleCondition",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleCondition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/RuleCondition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of RuleCondition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Rule Condition resources",
        "tags": ["Rule Condition"]
      }
    },
    "/rule-condition/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRuleCondition",
        "parameters": [
          {
            "description": "Identifier for the rule_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Rule Condition resource",
        "tags": ["Rule Condition"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getRuleCondition",
        "parameters": [
          {
            "description": "Identifier for the rule_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of RuleCondition"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Rule Condition resource",
        "tags": ["Rule Condition"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRuleCondition",
        "parameters": [
          {
            "description": "Identifier for the rule_condition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleCondition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/RuleCondition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Rule Condition resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RuleCondition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RuleCondition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of RuleCondition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Rule Condition resource",
        "tags": ["Rule Condition"]
      }
    },
    "/rule/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteRule",
        "parameters": [
          {
            "description": "Identifier for the rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Rule resource",
        "tags": ["Rule"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getRule",
        "parameters": [
          {
            "description": "Identifier for the rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Rule"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Rule resource",
        "tags": ["Rule"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateRule",
        "parameters": [
          {
            "description": "Identifier for the rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rule"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Rule"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Rule resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Rule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Rule"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Rule resource",
        "tags": ["Rule"]
      }
    },
    "/sales-channel": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SalesChannel"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SalesChannel"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/sales-channel?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Sales Channel resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Sales Channel resources",
        "tags": ["Sales Channel"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannel",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Sales Channel resources",
        "tags": ["Sales Channel"]
      }
    },
    "/sales-channel-analytics": {
      "get": {
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalyticsList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelAnalytics"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelAnalytics"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-analytics?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-analytics?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-analytics?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-analytics?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Sales Channel Analytics resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Sales Channel Analytics resources",
        "tags": ["Sales Channel Analytics"]
      },
      "post": {
        "description": "Available since: 6.2.0.0",
        "operationId": "createSalesChannelAnalytics",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelAnalytics"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelAnalytics"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Sales Channel Analytics resources",
        "tags": ["Sales Channel Analytics"]
      }
    },
    "/sales-channel-analytics/{id}": {
      "delete": {
        "description": "Available since: 6.2.0.0",
        "operationId": "deleteSalesChannelAnalytics",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_analytics",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Sales Channel Analytics resource",
        "tags": ["Sales Channel Analytics"]
      },
      "get": {
        "description": "Available since: 6.2.0.0",
        "operationId": "getSalesChannelAnalytics",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_analytics",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelAnalytics"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Sales Channel Analytics resource",
        "tags": ["Sales Channel Analytics"]
      },
      "patch": {
        "description": "Available since: 6.2.0.0",
        "operationId": "updateSalesChannelAnalytics",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_analytics",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelAnalytics"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelAnalytics"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Sales Channel Analytics resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelAnalytics"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelAnalytics"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelAnalytics"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Sales Channel Analytics resource",
        "tags": ["Sales Channel Analytics"]
      }
    },
    "/sales-channel-domain": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomainList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelDomain"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelDomain"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-domain?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-domain?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-domain?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-domain?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Sales Channel Domain resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Sales Channel Domain resources",
        "tags": ["Sales Channel Domain"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelDomain",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelDomain"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelDomain"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelDomain"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Sales Channel Domain resources",
        "tags": ["Sales Channel Domain"]
      }
    },
    "/sales-channel-domain/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelDomain",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_domain",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Sales Channel Domain resource",
        "tags": ["Sales Channel Domain"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelDomain",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_domain",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelDomain"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Sales Channel Domain resource",
        "tags": ["Sales Channel Domain"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelDomain",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_domain",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelDomain"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelDomain"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Sales Channel Domain resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelDomain"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelDomain"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelDomain"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Sales Channel Domain resource",
        "tags": ["Sales Channel Domain"]
      }
    },
    "/sales-channel-type": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelTypeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SalesChannelType"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SalesChannelType"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/sales-channel-type?limit=25"
                                },
                                "last": {
                                  "example": "/sales-channel-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/sales-channel-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/sales-channel-type?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Sales Channel Type resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Sales Channel Type resources",
        "tags": ["Sales Channel Type"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalesChannelType",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Sales Channel Type resources",
        "tags": ["Sales Channel Type"]
      }
    },
    "/sales-channel-type/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannelType",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Sales Channel Type resource",
        "tags": ["Sales Channel Type"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannelType",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelType"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Sales Channel Type resource",
        "tags": ["Sales Channel Type"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannelType",
        "parameters": [
          {
            "description": "Identifier for the sales_channel_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannelType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannelType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Sales Channel Type resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannelType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannelType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannelType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Sales Channel Type resource",
        "tags": ["Sales Channel Type"]
      }
    },
    "/sales-channel/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Sales Channel resource",
        "tags": ["Sales Channel"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannel"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Sales Channel resource",
        "tags": ["Sales Channel"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalesChannel",
        "parameters": [
          {
            "description": "Identifier for the sales_channel",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SalesChannel"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SalesChannel"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Sales Channel resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesChannel"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SalesChannel"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SalesChannel"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Sales Channel resource",
        "tags": ["Sales Channel"]
      }
    },
    "/salutation": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutationList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Salutation"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Salutation"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/salutation?limit=25"
                                },
                                "last": {
                                  "example": "/salutation?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/salutation?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/salutation?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Salutation resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Salutation resources",
        "tags": ["Salutation"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSalutation",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Salutation"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Salutation"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Salutation"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Salutation resources",
        "tags": ["Salutation"]
      }
    },
    "/salutation/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSalutation",
        "parameters": [
          {
            "description": "Identifier for the salutation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Salutation resource",
        "tags": ["Salutation"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSalutation",
        "parameters": [
          {
            "description": "Identifier for the salutation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Salutation"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Salutation resource",
        "tags": ["Salutation"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSalutation",
        "parameters": [
          {
            "description": "Identifier for the salutation",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Salutation"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Salutation"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Salutation resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Salutation"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Salutation"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Salutation"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Salutation resource",
        "tags": ["Salutation"]
      }
    },
    "/scheduled-task": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTaskList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ScheduledTask"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ScheduledTask"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/scheduled-task?limit=25"
                                },
                                "last": {
                                  "example": "/scheduled-task?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/scheduled-task?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/scheduled-task?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Scheduled Task resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Scheduled Task resources",
        "tags": ["Scheduled Task"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createScheduledTask",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ScheduledTask"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ScheduledTask"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Scheduled Task resources",
        "tags": ["Scheduled Task"]
      }
    },
    "/scheduled-task/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteScheduledTask",
        "parameters": [
          {
            "description": "Identifier for the scheduled_task",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Scheduled Task resource",
        "tags": ["Scheduled Task"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getScheduledTask",
        "parameters": [
          {
            "description": "Identifier for the scheduled_task",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ScheduledTask"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Scheduled Task resource",
        "tags": ["Scheduled Task"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateScheduledTask",
        "parameters": [
          {
            "description": "Identifier for the scheduled_task",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ScheduledTask"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Scheduled Task resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ScheduledTask"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ScheduledTask"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Scheduled Task resource",
        "tags": ["Scheduled Task"]
      }
    },
    "/script": {
      "get": {
        "description": "Available since: 6.4.7.0",
        "operationId": "getScriptList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Script"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Script"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/script?limit=25"
                                },
                                "last": {
                                  "example": "/script?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/script?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/script?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Script resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Script resources",
        "tags": ["Script"]
      },
      "post": {
        "description": "Available since: 6.4.7.0",
        "operationId": "createScript",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Script"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Script"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Script resources",
        "tags": ["Script"]
      }
    },
    "/script/{id}": {
      "delete": {
        "description": "Available since: 6.4.7.0",
        "operationId": "deleteScript",
        "parameters": [
          {
            "description": "Identifier for the script",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Script resource",
        "tags": ["Script"]
      },
      "get": {
        "description": "Available since: 6.4.7.0",
        "operationId": "getScript",
        "parameters": [
          {
            "description": "Identifier for the script",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Script"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Script resource",
        "tags": ["Script"]
      },
      "patch": {
        "description": "Available since: 6.4.7.0",
        "operationId": "updateScript",
        "parameters": [
          {
            "description": "Identifier for the script",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Script"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Script"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Script resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Script"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Script"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Script"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Script resource",
        "tags": ["Script"]
      }
    },
    "/seo-url": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SeoUrl"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SeoUrl"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/seo-url?limit=25"
                                },
                                "last": {
                                  "example": "/seo-url?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Seo Url resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Seo Url resources",
        "tags": ["Seo Url"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrl",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrl"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrl"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrl"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Seo Url resources",
        "tags": ["Seo Url"]
      }
    },
    "/seo-url-template": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SeoUrlTemplate"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SeoUrlTemplate"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/seo-url-template?limit=25"
                                },
                                "last": {
                                  "example": "/seo-url-template?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/seo-url-template?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/seo-url-template?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Seo Url Template resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Seo Url Template resources",
        "tags": ["Seo Url Template"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSeoUrlTemplate",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrlTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrlTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrlTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Seo Url Template resources",
        "tags": ["Seo Url Template"]
      }
    },
    "/seo-url-template/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrlTemplate",
        "parameters": [
          {
            "description": "Identifier for the seo_url_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Seo Url Template resource",
        "tags": ["Seo Url Template"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrlTemplate",
        "parameters": [
          {
            "description": "Identifier for the seo_url_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrlTemplate"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Seo Url Template resource",
        "tags": ["Seo Url Template"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrlTemplate",
        "parameters": [
          {
            "description": "Identifier for the seo_url_template",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrlTemplate"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrlTemplate"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Seo Url Template resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrlTemplate"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrlTemplate"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrlTemplate"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Seo Url Template resource",
        "tags": ["Seo Url Template"]
      }
    },
    "/seo-url/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSeoUrl",
        "parameters": [
          {
            "description": "Identifier for the seo_url",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Seo Url resource",
        "tags": ["Seo Url"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSeoUrl",
        "parameters": [
          {
            "description": "Identifier for the seo_url",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrl"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Seo Url resource",
        "tags": ["Seo Url"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSeoUrl",
        "parameters": [
          {
            "description": "Identifier for the seo_url",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeoUrl"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SeoUrl"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Seo Url resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeoUrl"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SeoUrl"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SeoUrl"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Seo Url resource",
        "tags": ["Seo Url"]
      }
    },
    "/shipping-method": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethod"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethod"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/shipping-method?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Shipping Method resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Shipping Method resources",
        "tags": ["Shipping Method"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethod",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Shipping Method resources",
        "tags": ["Shipping Method"]
      }
    },
    "/shipping-method-price": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPriceList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/ShippingMethodPrice"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/ShippingMethodPrice"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/shipping-method-price?limit=25"
                                },
                                "last": {
                                  "example": "/shipping-method-price?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/shipping-method-price?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/shipping-method-price?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Shipping Method Price resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Shipping Method Price resources",
        "tags": ["Shipping Method Price"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createShippingMethodPrice",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodPrice"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethodPrice"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Shipping Method Price resources",
        "tags": ["Shipping Method Price"]
      }
    },
    "/shipping-method-price/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethodPrice",
        "parameters": [
          {
            "description": "Identifier for the shipping_method_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Shipping Method Price resource",
        "tags": ["Shipping Method Price"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethodPrice",
        "parameters": [
          {
            "description": "Identifier for the shipping_method_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethodPrice"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Shipping Method Price resource",
        "tags": ["Shipping Method Price"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethodPrice",
        "parameters": [
          {
            "description": "Identifier for the shipping_method_price",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethodPrice"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethodPrice"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Shipping Method Price resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethodPrice"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethodPrice"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethodPrice"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Shipping Method Price resource",
        "tags": ["Shipping Method Price"]
      }
    },
    "/shipping-method/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteShippingMethod",
        "parameters": [
          {
            "description": "Identifier for the shipping_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Shipping Method resource",
        "tags": ["Shipping Method"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getShippingMethod",
        "parameters": [
          {
            "description": "Identifier for the shipping_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethod"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Shipping Method resource",
        "tags": ["Shipping Method"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateShippingMethod",
        "parameters": [
          {
            "description": "Identifier for the shipping_method",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingMethod"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/ShippingMethod"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Shipping Method resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShippingMethod"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingMethod"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of ShippingMethod"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Shipping Method resource",
        "tags": ["Shipping Method"]
      }
    },
    "/snippet": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Snippet"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Snippet"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/snippet?limit=25"
                                },
                                "last": {
                                  "example": "/snippet?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Snippet resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Snippet resources",
        "tags": ["Snippet"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippet",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snippet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Snippet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Snippet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Snippet resources",
        "tags": ["Snippet"]
      }
    },
    "/snippet-set": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSetList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SnippetSet"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SnippetSet"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/snippet-set?limit=25"
                                },
                                "last": {
                                  "example": "/snippet-set?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/snippet-set?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/snippet-set?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Snippet Set resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Snippet Set resources",
        "tags": ["Snippet Set"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSnippetSet",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnippetSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SnippetSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SnippetSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Snippet Set resources",
        "tags": ["Snippet Set"]
      }
    },
    "/snippet-set/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippetSet",
        "parameters": [
          {
            "description": "Identifier for the snippet_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Snippet Set resource",
        "tags": ["Snippet Set"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippetSet",
        "parameters": [
          {
            "description": "Identifier for the snippet_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SnippetSet"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Snippet Set resource",
        "tags": ["Snippet Set"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippetSet",
        "parameters": [
          {
            "description": "Identifier for the snippet_set",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnippetSet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SnippetSet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Snippet Set resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnippetSet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SnippetSet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SnippetSet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Snippet Set resource",
        "tags": ["Snippet Set"]
      }
    },
    "/snippet/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSnippet",
        "parameters": [
          {
            "description": "Identifier for the snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Snippet resource",
        "tags": ["Snippet"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSnippet",
        "parameters": [
          {
            "description": "Identifier for the snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Snippet"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Snippet resource",
        "tags": ["Snippet"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSnippet",
        "parameters": [
          {
            "description": "Identifier for the snippet",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Snippet"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Snippet"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Snippet resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snippet"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Snippet"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Snippet"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Snippet resource",
        "tags": ["Snippet"]
      }
    },
    "/state-machine": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/StateMachine"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/StateMachine"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/state-machine?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of State Machine resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of State Machine resources",
        "tags": ["State Machine"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachine",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachine"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachine"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachine"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new State Machine resources",
        "tags": ["State Machine"]
      }
    },
    "/state-machine-history": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistoryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/StateMachineHistory"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/StateMachineHistory"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/state-machine-history?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-history?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-history?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-history?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of State Machine History resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of State Machine History resources",
        "tags": ["State Machine History"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineHistory",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineHistory"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineHistory"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new State Machine History resources",
        "tags": ["State Machine History"]
      }
    },
    "/state-machine-history/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineHistory",
        "parameters": [
          {
            "description": "Identifier for the state_machine_history",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a State Machine History resource",
        "tags": ["State Machine History"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineHistory",
        "parameters": [
          {
            "description": "Identifier for the state_machine_history",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineHistory"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a State Machine History resource",
        "tags": ["State Machine History"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineHistory",
        "parameters": [
          {
            "description": "Identifier for the state_machine_history",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineHistory"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineHistory"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a State Machine History resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineHistory"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineHistory"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineHistory"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a State Machine History resource",
        "tags": ["State Machine History"]
      }
    },
    "/state-machine-state": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineStateList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/StateMachineState"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/StateMachineState"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/state-machine-state?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-state?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-state?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-state?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of State Machine State resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of State Machine State resources",
        "tags": ["State Machine State"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineState",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new State Machine State resources",
        "tags": ["State Machine State"]
      }
    },
    "/state-machine-state/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineState",
        "parameters": [
          {
            "description": "Identifier for the state_machine_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a State Machine State resource",
        "tags": ["State Machine State"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineState",
        "parameters": [
          {
            "description": "Identifier for the state_machine_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineState"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a State Machine State resource",
        "tags": ["State Machine State"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineState",
        "parameters": [
          {
            "description": "Identifier for the state_machine_state",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineState"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineState"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a State Machine State resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineState"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineState"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineState"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a State Machine State resource",
        "tags": ["State Machine State"]
      }
    },
    "/state-machine-transition": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransitionList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/StateMachineTransition"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/StateMachineTransition"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/state-machine-transition?limit=25"
                                },
                                "last": {
                                  "example": "/state-machine-transition?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/state-machine-transition?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/state-machine-transition?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of State Machine Transition resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of State Machine Transition resources",
        "tags": ["State Machine Transition"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createStateMachineTransition",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineTransition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new State Machine Transition resources",
        "tags": ["State Machine Transition"]
      }
    },
    "/state-machine-transition/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachineTransition",
        "parameters": [
          {
            "description": "Identifier for the state_machine_transition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a State Machine Transition resource",
        "tags": ["State Machine Transition"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachineTransition",
        "parameters": [
          {
            "description": "Identifier for the state_machine_transition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineTransition"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a State Machine Transition resource",
        "tags": ["State Machine Transition"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachineTransition",
        "parameters": [
          {
            "description": "Identifier for the state_machine_transition",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachineTransition"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachineTransition"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a State Machine Transition resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachineTransition"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachineTransition"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachineTransition"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a State Machine Transition resource",
        "tags": ["State Machine Transition"]
      }
    },
    "/state-machine/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteStateMachine",
        "parameters": [
          {
            "description": "Identifier for the state_machine",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a State Machine resource",
        "tags": ["State Machine"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getStateMachine",
        "parameters": [
          {
            "description": "Identifier for the state_machine",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachine"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a State Machine resource",
        "tags": ["State Machine"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateStateMachine",
        "parameters": [
          {
            "description": "Identifier for the state_machine",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateMachine"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/StateMachine"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a State Machine resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateMachine"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/StateMachine"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of StateMachine"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a State Machine resource",
        "tags": ["State Machine"]
      }
    },
    "/system-config": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfigList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/SystemConfig"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/SystemConfig"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/system-config?limit=25"
                                },
                                "last": {
                                  "example": "/system-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/system-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/system-config?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of System Config resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of System Config resources",
        "tags": ["System Config"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createSystemConfig",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SystemConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SystemConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new System Config resources",
        "tags": ["System Config"]
      }
    },
    "/system-config/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteSystemConfig",
        "parameters": [
          {
            "description": "Identifier for the system_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a System Config resource",
        "tags": ["System Config"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getSystemConfig",
        "parameters": [
          {
            "description": "Identifier for the system_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SystemConfig"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a System Config resource",
        "tags": ["System Config"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateSystemConfig",
        "parameters": [
          {
            "description": "Identifier for the system_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/SystemConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a System Config resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SystemConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of SystemConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a System Config resource",
        "tags": ["System Config"]
      }
    },
    "/tag": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getTagList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Tag"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Tag"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/tag?limit=25"
                                },
                                "last": {
                                  "example": "/tag?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tag?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tag?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Tag resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Tag resources",
        "tags": ["Tag"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createTag",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tag"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tag"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Tag resources",
        "tags": ["Tag"]
      }
    },
    "/tag/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTag",
        "parameters": [
          {
            "description": "Identifier for the tag",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Tag resource",
        "tags": ["Tag"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getTag",
        "parameters": [
          {
            "description": "Identifier for the tag",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tag"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Tag resource",
        "tags": ["Tag"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTag",
        "parameters": [
          {
            "description": "Identifier for the tag",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tag"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Tag resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tag"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tag"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tag"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Tag resource",
        "tags": ["Tag"]
      }
    },
    "/tax": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getTaxList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Tax"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Tax"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/tax?limit=25"
                                },
                                "last": {
                                  "example": "/tax?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Tax resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Tax resources",
        "tags": ["Tax"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createTax",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tax"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tax"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Tax resources",
        "tags": ["Tax"]
      }
    },
    "/tax-rule": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/TaxRule"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/TaxRule"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/tax-rule?limit=25"
                                },
                                "last": {
                                  "example": "/tax-rule?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Tax Rule resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Tax Rule resources",
        "tags": ["Tax Rule"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRule",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRule"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRule"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRule"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Tax Rule resources",
        "tags": ["Tax Rule"]
      }
    },
    "/tax-rule-type": {
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleTypeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/TaxRuleType"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/TaxRuleType"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/tax-rule-type?limit=25"
                                },
                                "last": {
                                  "example": "/tax-rule-type?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/tax-rule-type?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/tax-rule-type?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Tax Rule Type resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Tax Rule Type resources",
        "tags": ["Tax Rule Type"]
      },
      "post": {
        "description": "Available since: 6.1.0.0",
        "operationId": "createTaxRuleType",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRuleType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRuleType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRuleType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Tax Rule Type resources",
        "tags": ["Tax Rule Type"]
      }
    },
    "/tax-rule-type/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRuleType",
        "parameters": [
          {
            "description": "Identifier for the tax_rule_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Tax Rule Type resource",
        "tags": ["Tax Rule Type"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRuleType",
        "parameters": [
          {
            "description": "Identifier for the tax_rule_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRuleType"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Tax Rule Type resource",
        "tags": ["Tax Rule Type"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRuleType",
        "parameters": [
          {
            "description": "Identifier for the tax_rule_type",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRuleType"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRuleType"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Tax Rule Type resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRuleType"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRuleType"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRuleType"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Tax Rule Type resource",
        "tags": ["Tax Rule Type"]
      }
    },
    "/tax-rule/{id}": {
      "delete": {
        "description": "Available since: 6.1.0.0",
        "operationId": "deleteTaxRule",
        "parameters": [
          {
            "description": "Identifier for the tax_rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Tax Rule resource",
        "tags": ["Tax Rule"]
      },
      "get": {
        "description": "Available since: 6.1.0.0",
        "operationId": "getTaxRule",
        "parameters": [
          {
            "description": "Identifier for the tax_rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRule"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Tax Rule resource",
        "tags": ["Tax Rule"]
      },
      "patch": {
        "description": "Available since: 6.1.0.0",
        "operationId": "updateTaxRule",
        "parameters": [
          {
            "description": "Identifier for the tax_rule",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxRule"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/TaxRule"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Tax Rule resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxRule"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TaxRule"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of TaxRule"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Tax Rule resource",
        "tags": ["Tax Rule"]
      }
    },
    "/tax/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTax",
        "parameters": [
          {
            "description": "Identifier for the tax",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Tax resource",
        "tags": ["Tax"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getTax",
        "parameters": [
          {
            "description": "Identifier for the tax",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tax"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Tax resource",
        "tags": ["Tax"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTax",
        "parameters": [
          {
            "description": "Identifier for the tax",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tax"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Tax"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Tax resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Tax"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Tax"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Tax resource",
        "tags": ["Tax"]
      }
    },
    "/theme": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getThemeList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Theme"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Theme"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/theme?limit=25"
                                },
                                "last": {
                                  "example": "/theme?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/theme?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/theme?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Theme resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Theme resources",
        "tags": ["Theme"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createTheme",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Theme"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Theme"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Theme resources",
        "tags": ["Theme"]
      }
    },
    "/theme/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteTheme",
        "parameters": [
          {
            "description": "Identifier for the theme",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Theme resource",
        "tags": ["Theme"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getTheme",
        "parameters": [
          {
            "description": "Identifier for the theme",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Theme"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Theme resource",
        "tags": ["Theme"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateTheme",
        "parameters": [
          {
            "description": "Identifier for the theme",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Theme"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Theme"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Theme resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Theme"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Theme"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Theme resource",
        "tags": ["Theme"]
      }
    },
    "/unit": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnitList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Unit"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Unit"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/unit?limit=25"
                                },
                                "last": {
                                  "example": "/unit?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/unit?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/unit?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Unit resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Unit resources",
        "tags": ["Unit"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createUnit",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Unit"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Unit"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Unit resources",
        "tags": ["Unit"]
      }
    },
    "/unit/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUnit",
        "parameters": [
          {
            "description": "Identifier for the unit",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Unit resource",
        "tags": ["Unit"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUnit",
        "parameters": [
          {
            "description": "Identifier for the unit",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Unit"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Unit resource",
        "tags": ["Unit"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUnit",
        "parameters": [
          {
            "description": "Identifier for the unit",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Unit"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Unit"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Unit resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Unit"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Unit"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Unit resource",
        "tags": ["Unit"]
      }
    },
    "/user": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/User"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/user?limit=25"
                                },
                                "last": {
                                  "example": "/user?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of User resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of User resources",
        "tags": ["User"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createUser",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/User"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of User"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new User resources",
        "tags": ["User"]
      }
    },
    "/user-access-key": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKeyList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/UserAccessKey"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/UserAccessKey"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/user-access-key?limit=25"
                                },
                                "last": {
                                  "example": "/user-access-key?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-access-key?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-access-key?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of User Access Key resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of User Access Key resources",
        "tags": ["User Access Key"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserAccessKey",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessKey"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserAccessKey"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserAccessKey"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new User Access Key resources",
        "tags": ["User Access Key"]
      }
    },
    "/user-access-key/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserAccessKey",
        "parameters": [
          {
            "description": "Identifier for the user_access_key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a User Access Key resource",
        "tags": ["User Access Key"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserAccessKey",
        "parameters": [
          {
            "description": "Identifier for the user_access_key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserAccessKey"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a User Access Key resource",
        "tags": ["User Access Key"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserAccessKey",
        "parameters": [
          {
            "description": "Identifier for the user_access_key",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessKey"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserAccessKey"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a User Access Key resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAccessKey"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserAccessKey"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserAccessKey"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a User Access Key resource",
        "tags": ["User Access Key"]
      }
    },
    "/user-config": {
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfigList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/UserConfig"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/UserConfig"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/user-config?limit=25"
                                },
                                "last": {
                                  "example": "/user-config?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-config?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-config?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of User Config resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of User Config resources",
        "tags": ["User Config"]
      },
      "post": {
        "description": "Available since: 6.3.5.0",
        "operationId": "createUserConfig",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new User Config resources",
        "tags": ["User Config"]
      }
    },
    "/user-config/{id}": {
      "delete": {
        "description": "Available since: 6.3.5.0",
        "operationId": "deleteUserConfig",
        "parameters": [
          {
            "description": "Identifier for the user_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a User Config resource",
        "tags": ["User Config"]
      },
      "get": {
        "description": "Available since: 6.3.5.0",
        "operationId": "getUserConfig",
        "parameters": [
          {
            "description": "Identifier for the user_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserConfig"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a User Config resource",
        "tags": ["User Config"]
      },
      "patch": {
        "description": "Available since: 6.3.5.0",
        "operationId": "updateUserConfig",
        "parameters": [
          {
            "description": "Identifier for the user_config",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserConfig"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserConfig"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a User Config resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserConfig"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserConfig"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserConfig"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a User Config resource",
        "tags": ["User Config"]
      }
    },
    "/user-recovery": {
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecoveryList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/UserRecovery"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/UserRecovery"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/user-recovery?limit=25"
                                },
                                "last": {
                                  "example": "/user-recovery?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/user-recovery?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/user-recovery?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of User Recovery resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of User Recovery resources",
        "tags": ["User Recovery"]
      },
      "post": {
        "description": "Available since: 6.0.0.0",
        "operationId": "createUserRecovery",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRecovery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserRecovery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserRecovery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new User Recovery resources",
        "tags": ["User Recovery"]
      }
    },
    "/user-recovery/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUserRecovery",
        "parameters": [
          {
            "description": "Identifier for the user_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a User Recovery resource",
        "tags": ["User Recovery"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUserRecovery",
        "parameters": [
          {
            "description": "Identifier for the user_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserRecovery"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a User Recovery resource",
        "tags": ["User Recovery"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUserRecovery",
        "parameters": [
          {
            "description": "Identifier for the user_recovery",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRecovery"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/UserRecovery"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a User Recovery resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRecovery"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRecovery"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of UserRecovery"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a User Recovery resource",
        "tags": ["User Recovery"]
      }
    },
    "/user/{id}": {
      "delete": {
        "description": "Available since: 6.0.0.0",
        "operationId": "deleteUser",
        "parameters": [
          {
            "description": "Identifier for the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a User resource",
        "tags": ["User"]
      },
      "get": {
        "description": "Available since: 6.0.0.0",
        "operationId": "getUser",
        "parameters": [
          {
            "description": "Identifier for the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of User"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a User resource",
        "tags": ["User"]
      },
      "patch": {
        "description": "Available since: 6.0.0.0",
        "operationId": "updateUser",
        "parameters": [
          {
            "description": "Identifier for the user",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/User"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a User resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/User"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of User"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a User resource",
        "tags": ["User"]
      }
    },
    "/webhook": {
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhookList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/Webhook"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/Webhook"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/webhook?limit=25"
                                },
                                "last": {
                                  "example": "/webhook?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Webhook resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Webhook resources",
        "tags": ["Webhook"]
      },
      "post": {
        "description": "Available since: 6.3.1.0",
        "operationId": "createWebhook",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Webhook"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Webhook resources",
        "tags": ["Webhook"]
      }
    },
    "/webhook-event-log": {
      "get": {
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLogList",
        "parameters": [
          {
            "description": "Max amount of resources to be returned in a page",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The page to be returned",
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Encoded SwagQL in JSON",
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/WebhookEventLog"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/data"
                            },
                            {
                              "items": {
                                "$ref": "#/components/schemas/WebhookEventLog"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "links": {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/pagination"
                            },
                            {
                              "properties": {
                                "first": {
                                  "example": "/webhook-event-log?limit=25"
                                },
                                "last": {
                                  "example": "/webhook-event-log?limit=25&page=11"
                                },
                                "next": {
                                  "example": "/webhook-event-log?limit=25&page=4"
                                },
                                "prev": {
                                  "example": "/webhook-event-log?limit=25&page=2"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "List of Webhook Event Log resources."
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "List with basic information of Webhook Event Log resources",
        "tags": ["Webhook Event Log"]
      },
      "post": {
        "description": "Available since: 6.4.1.0",
        "operationId": "createWebhookEventLog",
        "parameters": [
          {
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "enum": ["basic", "detail"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEventLog"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/WebhookEventLog"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of WebhookEventLog"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "summary": "Create a new Webhook Event Log resources",
        "tags": ["Webhook Event Log"]
      }
    },
    "/webhook-event-log/{id}": {
      "delete": {
        "description": "Available since: 6.4.1.0",
        "operationId": "deleteWebhookEventLog",
        "parameters": [
          {
            "description": "Identifier for the webhook_event_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Webhook Event Log resource",
        "tags": ["Webhook Event Log"]
      },
      "get": {
        "description": "Available since: 6.4.1.0",
        "operationId": "getWebhookEventLog",
        "parameters": [
          {
            "description": "Identifier for the webhook_event_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of WebhookEventLog"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Webhook Event Log resource",
        "tags": ["Webhook Event Log"]
      },
      "patch": {
        "description": "Available since: 6.4.1.0",
        "operationId": "updateWebhookEventLog",
        "parameters": [
          {
            "description": "Identifier for the webhook_event_log",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEventLog"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/WebhookEventLog"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Webhook Event Log resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookEventLog"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/WebhookEventLog"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of WebhookEventLog"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Webhook Event Log resource",
        "tags": ["Webhook Event Log"]
      }
    },
    "/webhook/{id}": {
      "delete": {
        "description": "Available since: 6.3.1.0",
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "description": "Identifier for the webhook",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/204"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Delete a Webhook resource",
        "tags": ["Webhook"]
      },
      "get": {
        "description": "Available since: 6.3.1.0",
        "operationId": "getWebhook",
        "parameters": [
          {
            "description": "Identifier for the webhook",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Webhook"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Detailed information about a Webhook resource",
        "tags": ["Webhook"]
      },
      "patch": {
        "description": "Available since: 6.3.1.0",
        "operationId": "updateWebhook",
        "parameters": [
          {
            "description": "Identifier for the webhook",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "pattern": "^[0-9a-f]{32}$",
              "type": "string"
            }
          },
          {
            "allowEmptyValue": true,
            "description": "Data format for response. Empty if none is provided.",
            "in": "query",
            "name": "_response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            },
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/Webhook"
                  },
                  "included": {
                    "items": {
                      "$ref": "#/components/schemas/resource"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Partially update information about a Webhook resource."
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              },
              "application/vnd.api+json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/success"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/Webhook"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Detail of Webhook"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        },
        "summary": "Partially update information about a Webhook resource",
        "tags": ["Webhook"]
      }
    }
  },
  "security": [
    {
      "oAuth": ["write"]
    }
  ],
  "servers": [
    {
      "url": "https://echo.zuplo.io"
    }
  ],
  "tags": [
    {
      "description": "The endpoint for operations on Acl Role",
      "name": "Acl Role"
    },
    {
      "description": "The endpoint for operations on App",
      "name": "App"
    },
    {
      "description": "The endpoint for operations on App Action Button",
      "name": "App Action Button"
    },
    {
      "description": "The endpoint for operations on App Administration Snippet",
      "name": "App Administration Snippet"
    },
    {
      "description": "The endpoint for operations on App Cms Block",
      "name": "App Cms Block"
    },
    {
      "description": "The endpoint for operations on App Flow Action",
      "name": "App Flow Action"
    },
    {
      "description": "The endpoint for operations on App Payment Method",
      "name": "App Payment Method"
    },
    {
      "description": "The endpoint for operations on App Script Condition",
      "name": "App Script Condition"
    },
    {
      "description": "The endpoint for operations on App Template",
      "name": "App Template"
    },
    {
      "description": "The endpoint for operations on Category",
      "name": "Category"
    },
    {
      "description": "The endpoint for operations on Cms Block",
      "name": "Cms Block"
    },
    {
      "description": "The endpoint for operations on Cms Page",
      "name": "Cms Page"
    },
    {
      "description": "The endpoint for operations on Cms Section",
      "name": "Cms Section"
    },
    {
      "description": "The endpoint for operations on Cms Slot",
      "name": "Cms Slot"
    },
    {
      "description": "The endpoint for operations on Country",
      "name": "Country"
    },
    {
      "description": "The endpoint for operations on Country State",
      "name": "Country State"
    },
    {
      "description": "The endpoint for operations on Currency",
      "name": "Currency"
    },
    {
      "description": "The endpoint for operations on Currency Country Rounding",
      "name": "Currency Country Rounding"
    },
    {
      "description": "The endpoint for operations on Custom Entity",
      "name": "Custom Entity"
    },
    {
      "description": "The endpoint for operations on Custom Field",
      "name": "Custom Field"
    },
    {
      "description": "The endpoint for operations on Custom Field Set",
      "name": "Custom Field Set"
    },
    {
      "description": "The endpoint for operations on Custom Field Set Relation",
      "name": "Custom Field Set Relation"
    },
    {
      "description": "The endpoint for operations on Customer",
      "name": "Customer"
    },
    {
      "description": "The endpoint for operations on Customer Address",
      "name": "Customer Address"
    },
    {
      "description": "The endpoint for operations on Customer Group",
      "name": "Customer Group"
    },
    {
      "description": "The endpoint for operations on Customer Recovery",
      "name": "Customer Recovery"
    },
    {
      "description": "The endpoint for operations on Customer Wishlist",
      "name": "Customer Wishlist"
    },
    {
      "description": "The endpoint for operations on Customer Wishlist Product",
      "name": "Customer Wishlist Product"
    },
    {
      "description": "The endpoint for operations on Dead Message",
      "name": "Dead Message"
    },
    {
      "description": "The endpoint for operations on Delivery Time",
      "name": "Delivery Time"
    },
    {
      "description": "The endpoint for operations on Document",
      "name": "Document"
    },
    {
      "description": "The endpoint for operations on Document Base Config",
      "name": "Document Base Config"
    },
    {
      "description": "The endpoint for operations on Document Base Config Sales Channel",
      "name": "Document Base Config Sales Channel"
    },
    {
      "description": "The endpoint for operations on Document Type",
      "name": "Document Type"
    },
    {
      "description": "The endpoint for operations on Event Action",
      "name": "Event Action"
    },
    {
      "description": "The endpoint for operations on Flow",
      "name": "Flow"
    },
    {
      "description": "The endpoint for operations on Flow Sequence",
      "name": "Flow Sequence"
    },
    {
      "description": "The endpoint for operations on Import Export File",
      "name": "Import Export File"
    },
    {
      "description": "The endpoint for operations on Import Export Log",
      "name": "Import Export Log"
    },
    {
      "description": "The endpoint for operations on Import Export Profile",
      "name": "Import Export Profile"
    },
    {
      "description": "The endpoint for operations on Integration",
      "name": "Integration"
    },
    {
      "description": "The endpoint for operations on Landing Page",
      "name": "Landing Page"
    },
    {
      "description": "The endpoint for operations on Language",
      "name": "Language"
    },
    {
      "description": "The endpoint for operations on Locale",
      "name": "Locale"
    },
    {
      "description": "The endpoint for operations on Log Entry",
      "name": "Log Entry"
    },
    {
      "description": "The endpoint for operations on Mail Header Footer",
      "name": "Mail Header Footer"
    },
    {
      "description": "The endpoint for operations on Mail Template",
      "name": "Mail Template"
    },
    {
      "description": "The endpoint for operations on Mail Template Type",
      "name": "Mail Template Type"
    },
    {
      "description": "The endpoint for operations on Main Category",
      "name": "Main Category"
    },
    {
      "description": "The endpoint for operations on Media",
      "name": "Media"
    },
    {
      "description": "The endpoint for operations on Media Default Folder",
      "name": "Media Default Folder"
    },
    {
      "description": "The endpoint for operations on Media Folder",
      "name": "Media Folder"
    },
    {
      "description": "The endpoint for operations on Media Folder Configuration",
      "name": "Media Folder Configuration"
    },
    {
      "description": "The endpoint for operations on Media Thumbnail",
      "name": "Media Thumbnail"
    },
    {
      "description": "The endpoint for operations on Media Thumbnail Size",
      "name": "Media Thumbnail Size"
    },
    {
      "description": "The endpoint for operations on Message Queue Stats",
      "name": "Message Queue Stats"
    },
    {
      "description": "The endpoint for operations on Newsletter Recipient",
      "name": "Newsletter Recipient"
    },
    {
      "description": "The endpoint for operations on Notification",
      "name": "Notification"
    },
    {
      "description": "The endpoint for operations on Number Range",
      "name": "Number Range"
    },
    {
      "description": "The endpoint for operations on Number Range Sales Channel",
      "name": "Number Range Sales Channel"
    },
    {
      "description": "The endpoint for operations on Number Range State",
      "name": "Number Range State"
    },
    {
      "description": "The endpoint for operations on Number Range Type",
      "name": "Number Range Type"
    },
    {
      "description": "The endpoint for operations on Order",
      "name": "Order"
    },
    {
      "description": "The endpoint for operations on Order Address",
      "name": "Order Address"
    },
    {
      "description": "The endpoint for operations on Order Customer",
      "name": "Order Customer"
    },
    {
      "description": "The endpoint for operations on Order Delivery",
      "name": "Order Delivery"
    },
    {
      "description": "The endpoint for operations on Order Delivery Position",
      "name": "Order Delivery Position"
    },
    {
      "description": "The endpoint for operations on Order Line Item",
      "name": "Order Line Item"
    },
    {
      "description": "The endpoint for operations on Order Transaction",
      "name": "Order Transaction"
    },
    {
      "description": "The endpoint for operations on Order Transaction Capture",
      "name": "Order Transaction Capture"
    },
    {
      "description": "The endpoint for operations on Order Transaction Capture Refund",
      "name": "Order Transaction Capture Refund"
    },
    {
      "description": "The endpoint for operations on Order Transaction Capture Refund Position",
      "name": "Order Transaction Capture Refund Position"
    },
    {
      "description": "The endpoint for operations on Payment Method",
      "name": "Payment Method"
    },
    {
      "description": "The endpoint for operations on Plugin",
      "name": "Plugin"
    },
    {
      "description": "The endpoint for operations on Product",
      "name": "Product"
    },
    {
      "description": "The endpoint for operations on Product Configurator Setting",
      "name": "Product Configurator Setting"
    },
    {
      "description": "The endpoint for operations on Product Cross Selling",
      "name": "Product Cross Selling"
    },
    {
      "description": "The endpoint for operations on Product Cross Selling Assigned Products",
      "name": "Product Cross Selling Assigned Products"
    },
    {
      "description": "The endpoint for operations on Product Export",
      "name": "Product Export"
    },
    {
      "description": "The endpoint for operations on Product Feature Set",
      "name": "Product Feature Set"
    },
    {
      "description": "The endpoint for operations on Product Keyword Dictionary",
      "name": "Product Keyword Dictionary"
    },
    {
      "description": "The endpoint for operations on Product Manufacturer",
      "name": "Product Manufacturer"
    },
    {
      "description": "The endpoint for operations on Product Media",
      "name": "Product Media"
    },
    {
      "description": "The endpoint for operations on Product Price",
      "name": "Product Price"
    },
    {
      "description": "The endpoint for operations on Product Review",
      "name": "Product Review"
    },
    {
      "description": "The endpoint for operations on Product Search Config",
      "name": "Product Search Config"
    },
    {
      "description": "The endpoint for operations on Product Search Config Field",
      "name": "Product Search Config Field"
    },
    {
      "description": "The endpoint for operations on Product Search Keyword",
      "name": "Product Search Keyword"
    },
    {
      "description": "The endpoint for operations on Product Sorting",
      "name": "Product Sorting"
    },
    {
      "description": "The endpoint for operations on Product Stream",
      "name": "Product Stream"
    },
    {
      "description": "The endpoint for operations on Product Stream Filter",
      "name": "Product Stream Filter"
    },
    {
      "description": "The endpoint for operations on Product Visibility",
      "name": "Product Visibility"
    },
    {
      "description": "The endpoint for operations on Promotion",
      "name": "Promotion"
    },
    {
      "description": "The endpoint for operations on Promotion Discount",
      "name": "Promotion Discount"
    },
    {
      "description": "The endpoint for operations on Promotion Discount Prices",
      "name": "Promotion Discount Prices"
    },
    {
      "description": "The endpoint for operations on Promotion Individual Code",
      "name": "Promotion Individual Code"
    },
    {
      "description": "The endpoint for operations on Promotion Sales Channel",
      "name": "Promotion Sales Channel"
    },
    {
      "description": "The endpoint for operations on Promotion Setgroup",
      "name": "Promotion Setgroup"
    },
    {
      "description": "The endpoint for operations on Property Group",
      "name": "Property Group"
    },
    {
      "description": "The endpoint for operations on Property Group Option",
      "name": "Property Group Option"
    },
    {
      "description": "The endpoint for operations on Rule",
      "name": "Rule"
    },
    {
      "description": "The endpoint for operations on Rule Condition",
      "name": "Rule Condition"
    },
    {
      "description": "The endpoint for operations on Sales Channel",
      "name": "Sales Channel"
    },
    {
      "description": "The endpoint for operations on Sales Channel Analytics",
      "name": "Sales Channel Analytics"
    },
    {
      "description": "The endpoint for operations on Sales Channel Domain",
      "name": "Sales Channel Domain"
    },
    {
      "description": "The endpoint for operations on Sales Channel Type",
      "name": "Sales Channel Type"
    },
    {
      "description": "The endpoint for operations on Salutation",
      "name": "Salutation"
    },
    {
      "description": "The endpoint for operations on Scheduled Task",
      "name": "Scheduled Task"
    },
    {
      "description": "The endpoint for operations on Script",
      "name": "Script"
    },
    {
      "description": "The endpoint for operations on Seo Url",
      "name": "Seo Url"
    },
    {
      "description": "The endpoint for operations on Seo Url Template",
      "name": "Seo Url Template"
    },
    {
      "description": "The endpoint for operations on Shipping Method",
      "name": "Shipping Method"
    },
    {
      "description": "The endpoint for operations on Shipping Method Price",
      "name": "Shipping Method Price"
    },
    {
      "description": "The endpoint for operations on Snippet",
      "name": "Snippet"
    },
    {
      "description": "The endpoint for operations on Snippet Set",
      "name": "Snippet Set"
    },
    {
      "description": "The endpoint for operations on State Machine",
      "name": "State Machine"
    },
    {
      "description": "The endpoint for operations on State Machine History",
      "name": "State Machine History"
    },
    {
      "description": "The endpoint for operations on State Machine State",
      "name": "State Machine State"
    },
    {
      "description": "The endpoint for operations on State Machine Transition",
      "name": "State Machine Transition"
    },
    {
      "description": "The endpoint for operations on System Config",
      "name": "System Config"
    },
    {
      "description": "The endpoint for operations on Tag",
      "name": "Tag"
    },
    {
      "description": "The endpoint for operations on Tax",
      "name": "Tax"
    },
    {
      "description": "The endpoint for operations on Tax Rule",
      "name": "Tax Rule"
    },
    {
      "description": "The endpoint for operations on Tax Rule Type",
      "name": "Tax Rule Type"
    },
    {
      "description": "The endpoint for operations on Theme",
      "name": "Theme"
    },
    {
      "description": "The endpoint for operations on Unit",
      "name": "Unit"
    },
    {
      "description": "The endpoint for operations on User",
      "name": "User"
    },
    {
      "description": "The endpoint for operations on User Access Key",
      "name": "User Access Key"
    },
    {
      "description": "The endpoint for operations on User Config",
      "name": "User Config"
    },
    {
      "description": "The endpoint for operations on User Recovery",
      "name": "User Recovery"
    },
    {
      "description": "The endpoint for operations on Webhook",
      "name": "Webhook"
    },
    {
      "description": "The endpoint for operations on Webhook Event Log",
      "name": "Webhook Event Log"
    }
  ]
}
